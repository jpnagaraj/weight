
MAIIN.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000016c  00800100  00009820  000098d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00009820  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000013c  0080026c  0080026c  00009a40  2**0
                  ALLOC
  3 .eeprom       00000004  00810000  00810000  00009a40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .debug_aranges 000000a0  00000000  00000000  00009a44  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000b2d  00000000  00000000  00009ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002954  00000000  00000000  0000a611  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009de  00000000  00000000  0000cf65  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000059d3  00000000  00000000  0000d943  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000410  00000000  00000000  00013318  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000991  00000000  00000000  00013728  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000290d  00000000  00000000  000140b9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000420  00000000  00000000  000169c6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__ctors_end>
       4:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
       8:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
       c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      10:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      14:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      18:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      1c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      20:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      24:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      28:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      2c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      30:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      34:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      38:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      3c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      40:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__vector_16>
      44:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      48:	0c 94 3b 01 	jmp	0x276	; 0x276 <__vector_18>
      4c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      50:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      54:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      58:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      5c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      60:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      64:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      68:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      6c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      70:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      74:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      78:	0c 94 79 02 	jmp	0x4f2	; 0x4f2 <__vector_30>
      7c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      80:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      84:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      88:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>

0000008c <__c.1790>:
      8c:	6e 61 6e 00                                         nan.

00000090 <__c.1788>:
      90:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      a0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      b0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      c0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      d0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      e0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      f0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     100:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     110:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     120:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     130:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     140:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     150:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     160:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     170:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     180:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000018e <pstr_inf>:
     18e:	49 4e 46                                            INF

00000191 <pstr_inity>:
     191:	49 4e 49 54 59                                      INITY

00000196 <pstr_nan>:
     196:	4e 41 4e                                            NAN

00000199 <pwr_m10>:
     199:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     1a9:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

000001b1 <pwr_p10>:
     1b1:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     1c1:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

000001ca <__ctors_end>:
     1ca:	11 24       	eor	r1, r1
     1cc:	1f be       	out	0x3f, r1	; 63
     1ce:	cf ef       	ldi	r28, 0xFF	; 255
     1d0:	d0 e1       	ldi	r29, 0x10	; 16
     1d2:	de bf       	out	0x3e, r29	; 62
     1d4:	cd bf       	out	0x3d, r28	; 61

000001d6 <__do_copy_data>:
     1d6:	12 e0       	ldi	r17, 0x02	; 2
     1d8:	a0 e0       	ldi	r26, 0x00	; 0
     1da:	b1 e0       	ldi	r27, 0x01	; 1
     1dc:	e0 e2       	ldi	r30, 0x20	; 32
     1de:	f8 e9       	ldi	r31, 0x98	; 152
     1e0:	00 e0       	ldi	r16, 0x00	; 0
     1e2:	0b bf       	out	0x3b, r16	; 59
     1e4:	02 c0       	rjmp	.+4      	; 0x1ea <__do_copy_data+0x14>
     1e6:	07 90       	elpm	r0, Z+
     1e8:	0d 92       	st	X+, r0
     1ea:	ac 36       	cpi	r26, 0x6C	; 108
     1ec:	b1 07       	cpc	r27, r17
     1ee:	d9 f7       	brne	.-10     	; 0x1e6 <__do_copy_data+0x10>

000001f0 <__do_clear_bss>:
     1f0:	13 e0       	ldi	r17, 0x03	; 3
     1f2:	ac e6       	ldi	r26, 0x6C	; 108
     1f4:	b2 e0       	ldi	r27, 0x02	; 2
     1f6:	01 c0       	rjmp	.+2      	; 0x1fa <.do_clear_bss_start>

000001f8 <.do_clear_bss_loop>:
     1f8:	1d 92       	st	X+, r1

000001fa <.do_clear_bss_start>:
     1fa:	a8 3a       	cpi	r26, 0xA8	; 168
     1fc:	b1 07       	cpc	r27, r17
     1fe:	e1 f7       	brne	.-8      	; 0x1f8 <.do_clear_bss_loop>
     200:	0e 94 0d 03 	call	0x61a	; 0x61a <main>
     204:	0c 94 0e 4c 	jmp	0x981c	; 0x981c <_exit>

00000208 <__bad_interrupt>:
     208:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000020c <Port_Init>:

void Port_Init()
{	
	//*****  PORT A  *******
	//		  76543210	
	DDRA  = 0b11111111;
     20c:	8f ef       	ldi	r24, 0xFF	; 255
     20e:	8a bb       	out	0x1a, r24	; 26
	//		  76543210
	//PORTA = 0b00000000;

	//*****  PORT B  *******
	//		  76543210	
	DDRB  = 0b00000000;
     210:	17 ba       	out	0x17, r1	; 23
	//		  76543210
	PORTB = 0b00000000;
     212:	18 ba       	out	0x18, r1	; 24

	//*****  PORT C  *******

	//		  76543210	
	DDRC  = 0b00000000;
     214:	14 ba       	out	0x14, r1	; 20
	//		  76543210
	//PORTC = 0b00000000;

	//*****  PORT D  *******
	//		  76543210	
	DDRD  = 0b11111000;
     216:	98 ef       	ldi	r25, 0xF8	; 248
     218:	91 bb       	out	0x11, r25	; 17
	//		  76543210
	//PORTD = 0b00000000;

	//*****  PORT E  *******
	//		  76543210	
	DDRE  = 0b11111111;
     21a:	82 b9       	out	0x02, r24	; 2
	//		  76543210
	//PORTE = 0b00000000;

	//*****  PORT F  *******
	//		  76543210	
	DDRF  = 0b00000000;
     21c:	10 92 61 00 	sts	0x0061, r1
	//		  76543210
	//PORTF = 0b00000000;

	//*****  PORT G  *******
	//		  43210	
	DDRG  = 0b11111;
     220:	8f e1       	ldi	r24, 0x1F	; 31
     222:	80 93 64 00 	sts	0x0064, r24
	//		  43210
	//PORTG = 0b00000;

}
     226:	08 95       	ret

00000228 <USART0_INIT>:
//*******************************************************************************************

//---------- USART0 INITIALIZATION --------
void USART0_INIT()
{   
	UBRR0H = (BAUD0_PRESCALE >> 8); // Load upper 8-bits of the baud rate value into the high byte of the UBRR register
     228:	10 92 90 00 	sts	0x0090, r1
   	UBRR0L = BAUD0_PRESCALE; // Load lower 8-bits of the baud rate value into the low byte of the UBRR register
     22c:	87 e6       	ldi	r24, 0x67	; 103
     22e:	89 b9       	out	0x09, r24	; 9

   	UCSR0B |= (1 << RXEN0) | (1 << TXEN0)|(1<<RXCIE0);   // Turn on the transmission and reception circuitry and RX Intrupt enabled.
     230:	8a b1       	in	r24, 0x0a	; 10
     232:	88 69       	ori	r24, 0x98	; 152
     234:	8a b9       	out	0x0a, r24	; 10
   	UCSR0C |= (1 << UCSZ00) | (1 << UCSZ01); // Use 8-bit character sizes
     236:	e5 e9       	ldi	r30, 0x95	; 149
     238:	f0 e0       	ldi	r31, 0x00	; 0
     23a:	80 81       	ld	r24, Z
     23c:	86 60       	ori	r24, 0x06	; 6
     23e:	80 83       	st	Z, r24
}
     240:	08 95       	ret

00000242 <USART0_Transmit_Char>:

//---------- USART0 TRANSMITING CHARACTER DATA --------
void USART0_Transmit_Char(uint8_t CHARDATA)
{
	while ((UCSR0A & (1 << UDRE0)) == 0) {};
     242:	5d 9b       	sbis	0x0b, 5	; 11
     244:	fe cf       	rjmp	.-4      	; 0x242 <USART0_Transmit_Char>
	UDR0 = CHARDATA;
     246:	8c b9       	out	0x0c, r24	; 12
	/*//naga code
	while( !(UCSR0A&(1<<UDRE0)) );
	UDR0 = u8Data;
	*/
}
     248:	08 95       	ret

0000024a <ISR_USART0_Transmit_Char>:

void ISR_USART0_Transmit_Char(uint8_t CHARDATA)
{
	while ((UCSR0A & (1 << UDRE0)) == 0) {};
     24a:	5d 9b       	sbis	0x0b, 5	; 11
     24c:	fe cf       	rjmp	.-4      	; 0x24a <ISR_USART0_Transmit_Char>
	UDR0 = CHARDATA;
     24e:	8c b9       	out	0x0c, r24	; 12
	/*//naga code
	while( !(UCSR0A&(1<<UDRE0)) );
	UDR0 = u8Data;
	*/
}
     250:	08 95       	ret

00000252 <USART0_Recieve_Char>:
//---------- USART0 RECIEVING CHARECTER DATA --------
unsigned char USART0_Recieve_Char()
{
     252:	80 e0       	ldi	r24, 0x00	; 0
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	05 c0       	rjmp	.+10     	; 0x262 <USART0_Recieve_Char+0x10>
   //Wait untill a data is available
   recievebreakcounter = 0;	
   while(!(UCSR0A & (1<<RXC0)))
   {
   		//ISR_USART0_Transmit_Char('A');
    	recievebreakcounter++;
     258:	01 96       	adiw	r24, 0x01	; 1
		if(recievebreakcounter>2000)
     25a:	27 e0       	ldi	r18, 0x07	; 7
     25c:	81 3d       	cpi	r24, 0xD1	; 209
     25e:	92 07       	cpc	r25, r18
     260:	11 f0       	breq	.+4      	; 0x266 <USART0_Recieve_Char+0x14>
unsigned char USART0_Recieve_Char()
{
int recievebreakcounter;
   //Wait untill a data is available
   recievebreakcounter = 0;	
   while(!(UCSR0A & (1<<RXC0)))
     262:	5f 9b       	sbis	0x0b, 7	; 11
     264:	f9 cf       	rjmp	.-14     	; 0x258 <USART0_Recieve_Char+0x6>
		if(recievebreakcounter>2000)
		{
		 break;
		}
   }
   while(!(UCSR0A & (1<<RXC0)))
     266:	5f 9b       	sbis	0x0b, 7	; 11
     268:	fe cf       	rjmp	.-4      	; 0x266 <USART0_Recieve_Char+0x14>
   {
   }


   return UDR0;
     26a:	8c b1       	in	r24, 0x0c	; 12
}
     26c:	08 95       	ret

0000026e <USART0_TimeFRee_Recieve_Char>:
unsigned char USART0_TimeFRee_Recieve_Char()
{
   //Wait untill a data is available
   
   while(!(UCSR0A & (1<<RXC0)))
     26e:	5f 9b       	sbis	0x0b, 7	; 11
     270:	fe cf       	rjmp	.-4      	; 0x26e <USART0_TimeFRee_Recieve_Char>
   {
   }


   return UDR0;
     272:	8c b1       	in	r24, 0x0c	; 12
}
     274:	08 95       	ret

00000276 <__vector_18>:

*/


ISR(USART0_RX_vect)
{
     276:	1f 92       	push	r1
     278:	0f 92       	push	r0
     27a:	0f b6       	in	r0, 0x3f	; 63
     27c:	0f 92       	push	r0
     27e:	0b b6       	in	r0, 0x3b	; 59
     280:	0f 92       	push	r0
     282:	11 24       	eor	r1, r1
     284:	2f 93       	push	r18
     286:	3f 93       	push	r19
     288:	4f 93       	push	r20
     28a:	5f 93       	push	r21
     28c:	6f 93       	push	r22
     28e:	7f 93       	push	r23
     290:	8f 93       	push	r24
     292:	9f 93       	push	r25
     294:	af 93       	push	r26
     296:	bf 93       	push	r27
     298:	cf 93       	push	r28
     29a:	df 93       	push	r29
     29c:	ef 93       	push	r30
     29e:	ff 93       	push	r31
  //cli();
  RXC0_INT_DISABLE
     2a0:	8a b1       	in	r24, 0x0a	; 10
     2a2:	88 71       	andi	r24, 0x18	; 24
     2a4:	8a b9       	out	0x0a, r24	; 10
  int index;
    INT0_Recieved =  UDR0;// Fetch the received byte value into the variable "ByteReceived"
     2a6:	8c b1       	in	r24, 0x0c	; 12
     2a8:	80 93 63 03 	sts	0x0363, r24
	//USART0_Transmit_String("\r\n");
	 
	//ISR_USART0_Transmit_Char(INT0_Recieved);
	 //USART1_ISR_Transmit_Char( 'A');
		 
	if(INT0_Recieved == '$')
     2ac:	80 91 63 03 	lds	r24, 0x0363
     2b0:	84 32       	cpi	r24, 0x24	; 36
     2b2:	71 f4       	brne	.+28     	; 0x2d0 <__vector_18+0x5a>
     2b4:	c0 e0       	ldi	r28, 0x00	; 0
     2b6:	d0 e0       	ldi	r29, 0x00	; 0
	//Joystick_Interrupt_Counter++;
	    //CrutchInteruptFlag = 1;
	
		for(index=0;index<33;index++)
		  {
		   FrameBuf[index]= USART0_Recieve_Char();
     2b8:	0e 94 29 01 	call	0x252	; 0x252 <USART0_Recieve_Char>
     2bc:	fe 01       	movw	r30, r28
     2be:	e9 53       	subi	r30, 0x39	; 57
     2c0:	fd 4f       	sbci	r31, 0xFD	; 253
     2c2:	80 83       	st	Z, r24
	{
	//ISR_USART0_Transmit_Char('a');
	//Joystick_Interrupt_Counter++;
	    //CrutchInteruptFlag = 1;
	
		for(index=0;index<33;index++)
     2c4:	21 96       	adiw	r28, 0x01	; 1
     2c6:	c1 32       	cpi	r28, 0x21	; 33
     2c8:	d1 05       	cpc	r29, r1
     2ca:	b1 f7       	brne	.-20     	; 0x2b8 <__vector_18+0x42>
		   FrameBuf[index]= USART0_Recieve_Char();
           //USART1_ISR_Transmit_Char(FrameBuf[index]);
		    //ISR_USART0_Transmit_Char(FrameBuf[index]);
			//loop++;
		  }
		  INT0_Recieved=0;
     2cc:	10 92 63 03 	sts	0x0363, r1
	
	//USART1_ISR_Transmit_Char(INT0_Recieved);
    //UDR0 = INT0_Recieved;
	
   // UDR0 = 0;
	RXC0_INT_ENABLE
     2d0:	8a b1       	in	r24, 0x0a	; 10
     2d2:	88 69       	ori	r24, 0x98	; 152
     2d4:	8a b9       	out	0x0a, r24	; 10
//	sei();

}
     2d6:	ff 91       	pop	r31
     2d8:	ef 91       	pop	r30
     2da:	df 91       	pop	r29
     2dc:	cf 91       	pop	r28
     2de:	bf 91       	pop	r27
     2e0:	af 91       	pop	r26
     2e2:	9f 91       	pop	r25
     2e4:	8f 91       	pop	r24
     2e6:	7f 91       	pop	r23
     2e8:	6f 91       	pop	r22
     2ea:	5f 91       	pop	r21
     2ec:	4f 91       	pop	r20
     2ee:	3f 91       	pop	r19
     2f0:	2f 91       	pop	r18
     2f2:	0f 90       	pop	r0
     2f4:	0b be       	out	0x3b, r0	; 59
     2f6:	0f 90       	pop	r0
     2f8:	0f be       	out	0x3f, r0	; 63
     2fa:	0f 90       	pop	r0
     2fc:	1f 90       	pop	r1
     2fe:	18 95       	reti

00000300 <USART1_INIT>:


//---------- USART1 INITIALIZATION --------
void USART1_INIT()
{   
	UBRR1H = (BAUD1_PRESCALE >> 8); // Load upper 8-bits of the baud rate value into the high byte of the UBRR register
     300:	10 92 98 00 	sts	0x0098, r1
   	UBRR1L = BAUD1_PRESCALE; // Load lower 8-bits of the baud rate value into the low byte of the UBRR register
     304:	87 e6       	ldi	r24, 0x67	; 103
     306:	80 93 99 00 	sts	0x0099, r24

   	UCSR1B |= (1 << RXEN1) | (1 << TXEN1)|(1<<RXCIE1);   // Turn on the transmission and reception circuitry and RX Intrupt disabled.
     30a:	ea e9       	ldi	r30, 0x9A	; 154
     30c:	f0 e0       	ldi	r31, 0x00	; 0
     30e:	80 81       	ld	r24, Z
     310:	88 69       	ori	r24, 0x98	; 152
     312:	80 83       	st	Z, r24
   	UCSR1C |= (1 << UCSZ10) | (1 << UCSZ11); // Use 8-bit character sizes
     314:	ed e9       	ldi	r30, 0x9D	; 157
     316:	f0 e0       	ldi	r31, 0x00	; 0
     318:	80 81       	ld	r24, Z
     31a:	86 60       	ori	r24, 0x06	; 6
     31c:	80 83       	st	Z, r24
}
     31e:	08 95       	ret

00000320 <USART1_Transmit_Char>:

//---------- USART1 TRANSMITING CHARACTER DATA --------
void USART1_Transmit_Char(uint8_t CHARDATA)
{
     320:	98 2f       	mov	r25, r24
	while ((UCSR1A & (1 << UDRE1)) == 0) {};
     322:	80 91 9b 00 	lds	r24, 0x009B
     326:	85 ff       	sbrs	r24, 5
     328:	fc cf       	rjmp	.-8      	; 0x322 <USART1_Transmit_Char+0x2>
	UDR1 = CHARDATA;
     32a:	90 93 9c 00 	sts	0x009C, r25
	/*//naga code
	while( !(UCSR0A&(1<<UDRE0)) )4 
	UDR0 = u8Data;
	*/
}
     32e:	08 95       	ret

00000330 <USART1_ISR_Transmit_Char>:
void USART1_ISR_Transmit_Char(uint8_t CHARDATA)
{
     330:	98 2f       	mov	r25, r24
	while ((UCSR1A & (1 << UDRE1)) == 0) {};
     332:	80 91 9b 00 	lds	r24, 0x009B
     336:	85 ff       	sbrs	r24, 5
     338:	fc cf       	rjmp	.-8      	; 0x332 <USART1_ISR_Transmit_Char+0x2>
	UDR1 = CHARDATA;
     33a:	90 93 9c 00 	sts	0x009C, r25
	/*//naga code
	while( !(UCSR0A&(1<<UDRE0)) );
	UDR0 = u8Data;
	*/
}
     33e:	08 95       	ret

00000340 <USART1_Recieve_Char>:
//---------- USART1 RECIEVING CHARECTER DATA --------
unsigned char USART1_Recieve_Char()
{
   //Wait untill a data is available

   while(!(UCSR1A & (1<<RXC1)));
     340:	80 91 9b 00 	lds	r24, 0x009B
     344:	87 ff       	sbrs	r24, 7
     346:	fc cf       	rjmp	.-8      	; 0x340 <USART1_Recieve_Char>


   return UDR1;
     348:	80 91 9c 00 	lds	r24, 0x009C
}
     34c:	08 95       	ret

0000034e <ADC_Init>:
//**********************************************************************************//
void ADC_Init(void)																	//
{																					//
	//select reference voltage														//
	//AVCC with external capacitor at AREF pin										//
	ADMUX|=(0<<REFS1)|(0<<REFS0);//01												//
     34e:	87 b1       	in	r24, 0x07	; 7
     350:	87 b9       	out	0x07, r24	; 7
	//set prescaller and enable ADC													//
	ADCSRA|=(1<<ADEN)|(0<<ADIE);//enable ADC with dummy conversion					//
     352:	37 9a       	sbi	0x06, 7	; 6
	//set sleep mode for ADC noise reduction conversion								//
	//set_sleep_mode(SLEEP_MODE_ADC);												//
}																					//
     354:	08 95       	ret

00000356 <ADC_Start>:
{																					//
	//int ch;																		//
	//ch=channel;																	//
	//PORTB=0XFF;																	//
	int adcvalue_temp;																//
	ADMUX=(ADMUX&0xF0)|channel;   //30												//
     356:	97 b1       	in	r25, 0x07	; 7
     358:	90 7f       	andi	r25, 0xF0	; 240
     35a:	98 2b       	or	r25, r24
     35c:	97 b9       	out	0x07, r25	; 7
	ADCSRA |= (1<<ADSC)|(0<<ADIE)|(1<<ADEN)|(1<<ADPS1);										//
     35e:	86 b1       	in	r24, 0x06	; 6
     360:	82 6c       	ori	r24, 0xC2	; 194
     362:	86 b9       	out	0x06, r24	; 6
	//ADCSRA |= (0<<ADIF);															//
	//while(!(ADCSRA & (1<<ADIF)));													//
	while(bit_is_set(ADCSRA,ADSC));													//
     364:	36 99       	sbic	0x06, 6	; 6
     366:	fe cf       	rjmp	.-4      	; 0x364 <ADC_Start+0xe>
	adcvalue_temp = ADCL;  															//
     368:	94 b1       	in	r25, 0x04	; 4
	//shift from low level to high level ADC, from 8bit to 10bit					//
	adcvalue_temp += (ADCH<<8);														//
     36a:	85 b1       	in	r24, 0x05	; 5
     36c:	38 2f       	mov	r19, r24
     36e:	20 e0       	ldi	r18, 0x00	; 0
     370:	29 0f       	add	r18, r25
     372:	31 1d       	adc	r19, r1
	//ADCSRA |= (1<<ADIF);															//
  	//_delay_ms(150);																//
   //PORTB=0X00;																	//
   return(adcvalue_temp);															//
}																					//
     374:	c9 01       	movw	r24, r18
     376:	08 95       	ret

00000378 <AverageADC>:
																					//
float AverageADC(int channel,int AverageCount)										//
{																					//
     378:	af 92       	push	r10
     37a:	bf 92       	push	r11
     37c:	cf 92       	push	r12
     37e:	df 92       	push	r13
     380:	ef 92       	push	r14
     382:	ff 92       	push	r15
     384:	0f 93       	push	r16
     386:	1f 93       	push	r17
     388:	cf 93       	push	r28
     38a:	df 93       	push	r29
     38c:	6c 01       	movw	r12, r24
     38e:	5b 01       	movw	r10, r22
	unsigned long total;															//
	float Volt;																		//
	float avg;																		//
	//unsigned long avg;															//
	total=0;																		//
	ADC_Start(channel);																//
     390:	0e 94 ab 01 	call	0x356	; 0x356 <ADC_Start>
     394:	c0 e0       	ldi	r28, 0x00	; 0
     396:	d0 e0       	ldi	r29, 0x00	; 0
     398:	ee 24       	eor	r14, r14
     39a:	ff 24       	eor	r15, r15
     39c:	87 01       	movw	r16, r14
     39e:	0c c0       	rjmp	.+24     	; 0x3b8 <AverageADC+0x40>
	for	(loop=0;loop<AverageCount;loop++)											//
		{																			//
																						//
			adc = ADC_Start(channel);
     3a0:	c6 01       	movw	r24, r12
     3a2:	0e 94 ab 01 	call	0x356	; 0x356 <ADC_Start>
																//
			total=total+adc;														//
     3a6:	aa 27       	eor	r26, r26
     3a8:	97 fd       	sbrc	r25, 7
     3aa:	a0 95       	com	r26
     3ac:	ba 2f       	mov	r27, r26
     3ae:	e8 0e       	add	r14, r24
     3b0:	f9 1e       	adc	r15, r25
     3b2:	0a 1f       	adc	r16, r26
     3b4:	1b 1f       	adc	r17, r27
	float Volt;																		//
	float avg;																		//
	//unsigned long avg;															//
	total=0;																		//
	ADC_Start(channel);																//
	for	(loop=0;loop<AverageCount;loop++)											//
     3b6:	21 96       	adiw	r28, 0x01	; 1
     3b8:	ca 15       	cp	r28, r10
     3ba:	db 05       	cpc	r29, r11
     3bc:	8c f3       	brlt	.-30     	; 0x3a0 <AverageADC+0x28>
     3be:	95 01       	movw	r18, r10
     3c0:	44 27       	eor	r20, r20
     3c2:	37 fd       	sbrc	r19, 7
     3c4:	40 95       	com	r20
     3c6:	54 2f       	mov	r21, r20
     3c8:	c8 01       	movw	r24, r16
     3ca:	b7 01       	movw	r22, r14
     3cc:	0e 94 71 48 	call	0x90e2	; 0x90e2 <__udivmodsi4>
     3d0:	ca 01       	movw	r24, r20
     3d2:	b9 01       	movw	r22, r18
     3d4:	0e 94 a8 43 	call	0x8750	; 0x8750 <__floatunsisf>
     3d8:	2c e5       	ldi	r18, 0x5C	; 92
     3da:	3f e8       	ldi	r19, 0x8F	; 143
     3dc:	4a e9       	ldi	r20, 0x9A	; 154
     3de:	50 e4       	ldi	r21, 0x40	; 64
     3e0:	0e 94 3a 44 	call	0x8874	; 0x8874 <__mulsf3>
     3e4:	20 e0       	ldi	r18, 0x00	; 0
     3e6:	30 e0       	ldi	r19, 0x00	; 0
     3e8:	40 e8       	ldi	r20, 0x80	; 128
     3ea:	5a e3       	ldi	r21, 0x3A	; 58
     3ec:	0e 94 3a 44 	call	0x8874	; 0x8874 <__mulsf3>
			total=total+adc;														//
		}																			//
	avg = total/AverageCount;														//
	Volt=(ADC_REFERENCE * avg)/1024.0;	//5.066													//
	return (Volt);																	//
}																					//
     3f0:	df 91       	pop	r29
     3f2:	cf 91       	pop	r28
     3f4:	1f 91       	pop	r17
     3f6:	0f 91       	pop	r16
     3f8:	ff 90       	pop	r15
     3fa:	ef 90       	pop	r14
     3fc:	df 90       	pop	r13
     3fe:	cf 90       	pop	r12
     400:	bf 90       	pop	r11
     402:	af 90       	pop	r10
     404:	08 95       	ret

00000406 <TIMER0_INIT>:

void TIMER0_INIT(void)
{

	// normal mode
        TCCR0 |= (0<<WGM01)|(0<<WGM00);
     406:	83 b7       	in	r24, 0x33	; 51
     408:	83 bf       	out	0x33, r24	; 51
   // prescaler 64
        TCCR0 |= (1<<CS02)|(1<<CS01)|(1<<CS00); //prescalar 1024
     40a:	83 b7       	in	r24, 0x33	; 51
     40c:	87 60       	ori	r24, 0x07	; 7
     40e:	83 bf       	out	0x33, r24	; 51
       // OCR0=255;
        TCNT0=0;
     410:	12 be       	out	0x32, r1	; 50
   // activate interrupt
        TIMSK |= (1<<TOIE0)|(0<<OCIE0);
     412:	87 b7       	in	r24, 0x37	; 55
     414:	81 60       	ori	r24, 0x01	; 1
     416:	87 bf       	out	0x37, r24	; 55
}
     418:	08 95       	ret

0000041a <TIMER1_INIT>:

void TIMER1_INIT(void)
{

		// normal mode
		TCCR1A = (0<<WGM12)|(0<<WGM11)|(0<<WGM10);
     41a:	1f bc       	out	0x2f, r1	; 47
		//presclalar
		TCCR1B = (1<<CS12)|(0<<CS11)|(1<<CS10); // presclar 1024
     41c:	85 e0       	ldi	r24, 0x05	; 5
     41e:	8e bd       	out	0x2e, r24	; 46
		TCNT1H = 255;
     420:	8f ef       	ldi	r24, 0xFF	; 255
     422:	8d bd       	out	0x2d, r24	; 45
		TCNT1L = 240;
     424:	80 ef       	ldi	r24, 0xF0	; 240
     426:	8c bd       	out	0x2c, r24	; 44
		//activate interrupt
		TIMSK |=  (1<<TOIE1);
     428:	87 b7       	in	r24, 0x37	; 55
     42a:	84 60       	ori	r24, 0x04	; 4
     42c:	87 bf       	out	0x37, r24	; 55
}
     42e:	08 95       	ret

00000430 <TIMER2_INIT>:
void TIMER2_INIT(void)
{


	// normal mode
        TCCR2 |= (0<<WGM21)|(0<<WGM20);
     430:	85 b5       	in	r24, 0x25	; 37
     432:	85 bd       	out	0x25, r24	; 37
   // prescaler 
        TCCR2 |= (1<<CS22)|(0<<CS21)|(1<<CS20);  //prescalar 1024
     434:	85 b5       	in	r24, 0x25	; 37
     436:	85 60       	ori	r24, 0x05	; 5
     438:	85 bd       	out	0x25, r24	; 37
        //OCR2=255;
        TCNT2=0;
     43a:	14 bc       	out	0x24, r1	; 36
   // activate interrupt
        TIMSK |= (1<<TOIE2)|(0<<OCIE2);
     43c:	87 b7       	in	r24, 0x37	; 55
     43e:	80 64       	ori	r24, 0x40	; 64
     440:	87 bf       	out	0x37, r24	; 55
}
     442:	08 95       	ret

00000444 <TIMER3_INIT>:

void TIMER3_INIT(void)
{

		// normal mode
		TCCR3A = (0<<WGM32)|(0<<WGM31)|(0<<WGM30);
     444:	10 92 8b 00 	sts	0x008B, r1
		//presclalar
		TCCR3B = (1<<CS32)|(0<<CS31)|(1<<CS30); // presclar 1024
     448:	85 e0       	ldi	r24, 0x05	; 5
     44a:	80 93 8a 00 	sts	0x008A, r24
		TCNT3H = 255;
     44e:	8f ef       	ldi	r24, 0xFF	; 255
     450:	80 93 89 00 	sts	0x0089, r24
		TCNT3L = 0;
     454:	10 92 88 00 	sts	0x0088, r1
		//activate interrupt
		ETIMSK |=  (1<<TOIE3);
     458:	ed e7       	ldi	r30, 0x7D	; 125
     45a:	f0 e0       	ldi	r31, 0x00	; 0
     45c:	80 81       	ld	r24, Z
     45e:	84 60       	ori	r24, 0x04	; 4
     460:	80 83       	st	Z, r24

}
     462:	08 95       	ret

00000464 <twi_init>:
//******************************************************************//

void twi_init(void)
{
//#if F_CPU == 8000000UL
 TWCR= 0X00; //disable twi
     464:	e4 e7       	ldi	r30, 0x74	; 116
     466:	f0 e0       	ldi	r31, 0x00	; 0
     468:	10 82       	st	Z, r1
 TWBR= 0x12; //set bit rate12
     46a:	82 e1       	ldi	r24, 0x12	; 18
     46c:	80 93 70 00 	sts	0x0070, r24
 TWSR= 0x00; //set prescale
     470:	10 92 71 00 	sts	0x0071, r1
 TWCR= 0x44; //enable twi
     474:	84 e4       	ldi	r24, 0x44	; 68
     476:	80 83       	st	Z, r24
 TWBR= 0x2C; //set bit rate12
 TWSR= 0x00; //set prescale
 TWCR= 0x44; //enable twi
#endif*/

}
     478:	08 95       	ret

0000047a <__vector_16>:



ISR(TIMER0_OVF_vect)//TIMER0_OVF_vect ,TIMER0_COMP_vect
{
     47a:	1f 92       	push	r1
     47c:	0f 92       	push	r0
     47e:	0f b6       	in	r0, 0x3f	; 63
     480:	0f 92       	push	r0
     482:	11 24       	eor	r1, r1
     484:	8f 93       	push	r24
     486:	9f 93       	push	r25

    Time_counter++;
     488:	80 91 c1 02 	lds	r24, 0x02C1
     48c:	90 91 c2 02 	lds	r25, 0x02C2
     490:	01 96       	adiw	r24, 0x01	; 1
     492:	90 93 c2 02 	sts	0x02C2, r25
     496:	80 93 c1 02 	sts	0x02C1, r24
	//ISR_USART0_Transmit_Char('A');
	
 
		  
	TCNT0=TCNTCOUNT;
     49a:	80 91 7c 02 	lds	r24, 0x027C
     49e:	90 91 7d 02 	lds	r25, 0x027D
     4a2:	82 bf       	out	0x32, r24	; 50
	//sei();
}
     4a4:	9f 91       	pop	r25
     4a6:	8f 91       	pop	r24
     4a8:	0f 90       	pop	r0
     4aa:	0f be       	out	0x3f, r0	; 63
     4ac:	0f 90       	pop	r0
     4ae:	1f 90       	pop	r1
     4b0:	18 95       	reti

000004b2 <USART1_ISR_Transmit_String>:
	}																				//
//	USART1_Transmit_Char(' ');																//
}

void USART1_ISR_Transmit_String(char sendbuf[80])										//		//
{		
     4b2:	ac 01       	movw	r20, r24
	 																			//
	auto int StringLen,loop;													    //
	StringLen = strlen(sendbuf);													//
     4b4:	dc 01       	movw	r26, r24
     4b6:	0d 90       	ld	r0, X+
     4b8:	00 20       	and	r0, r0
     4ba:	e9 f7       	brne	.-6      	; 0x4b6 <USART1_ISR_Transmit_String+0x4>
     4bc:	11 97       	sbiw	r26, 0x01	; 1
     4be:	a8 1b       	sub	r26, r24
     4c0:	b9 0b       	sbc	r27, r25
     4c2:	20 e0       	ldi	r18, 0x00	; 0
     4c4:	30 e0       	ldi	r19, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     4c6:	60 ea       	ldi	r22, 0xA0	; 160
     4c8:	7f e0       	ldi	r23, 0x0F	; 15
     4ca:	0f c0       	rjmp	.+30     	; 0x4ea <USART1_ISR_Transmit_String+0x38>
															                        //
																				    //
	for(loop=0;loop<StringLen;loop++)												//
	{																				//
		USART1_Transmit_Char(sendbuf[loop]);
     4cc:	fa 01       	movw	r30, r20
     4ce:	e2 0f       	add	r30, r18
     4d0:	f3 1f       	adc	r31, r19
     4d2:	e0 81       	ld	r30, Z
}

//---------- USART1 TRANSMITING CHARACTER DATA --------
void USART1_Transmit_Char(uint8_t CHARDATA)
{
	while ((UCSR1A & (1 << UDRE1)) == 0) {};
     4d4:	80 91 9b 00 	lds	r24, 0x009B
     4d8:	85 ff       	sbrs	r24, 5
     4da:	fc cf       	rjmp	.-8      	; 0x4d4 <USART1_ISR_Transmit_String+0x22>
	UDR1 = CHARDATA;
     4dc:	e0 93 9c 00 	sts	0x009C, r30
     4e0:	fb 01       	movw	r30, r22
     4e2:	31 97       	sbiw	r30, 0x01	; 1
     4e4:	f1 f7       	brne	.-4      	; 0x4e2 <USART1_ISR_Transmit_String+0x30>
	 																			//
	auto int StringLen,loop;													    //
	StringLen = strlen(sendbuf);													//
															                        //
																				    //
	for(loop=0;loop<StringLen;loop++)												//
     4e6:	2f 5f       	subi	r18, 0xFF	; 255
     4e8:	3f 4f       	sbci	r19, 0xFF	; 255
     4ea:	2a 17       	cp	r18, r26
     4ec:	3b 07       	cpc	r19, r27
     4ee:	74 f3       	brlt	.-36     	; 0x4cc <USART1_ISR_Transmit_String+0x1a>
	{																				//
		USART1_Transmit_Char(sendbuf[loop]);
		_delay_ms(1);												//
	}																				//
//	USART1_Transmit_Char(' ');																//
}
     4f0:	08 95       	ret

000004f2 <__vector_30>:
   return UDR1;
}

//---------- USART1 INTERRUPT SUBROUTINE --------
ISR(USART1_RX_vect)
{
     4f2:	1f 92       	push	r1
     4f4:	0f 92       	push	r0
     4f6:	0f b6       	in	r0, 0x3f	; 63
     4f8:	0f 92       	push	r0
     4fa:	0b b6       	in	r0, 0x3b	; 59
     4fc:	0f 92       	push	r0
     4fe:	11 24       	eor	r1, r1
     500:	2f 93       	push	r18
     502:	3f 93       	push	r19
     504:	4f 93       	push	r20
     506:	5f 93       	push	r21
     508:	6f 93       	push	r22
     50a:	7f 93       	push	r23
     50c:	8f 93       	push	r24
     50e:	9f 93       	push	r25
     510:	af 93       	push	r26
     512:	bf 93       	push	r27
     514:	ef 93       	push	r30
     516:	ff 93       	push	r31
 
    INT1_Recieved =  UDR1;// Fetch the received byte value into the variable "ByteReceived"
     518:	80 91 9c 00 	lds	r24, 0x009C
     51c:	80 93 a4 03 	sts	0x03A4, r24
	if(INT1_Recieved != 'K')
     520:	80 91 a4 03 	lds	r24, 0x03A4
     524:	8b 34       	cpi	r24, 0x4B	; 75
     526:	21 f0       	breq	.+8      	; 0x530 <__vector_30+0x3e>
	{
		 USART1_ISR_Transmit_String(audiobuf);
     528:	88 ea       	ldi	r24, 0xA8	; 168
     52a:	92 e0       	ldi	r25, 0x02	; 2
     52c:	0e 94 59 02 	call	0x4b2	; 0x4b2 <USART1_ISR_Transmit_String>
	}

 
   //UDR1 = INT1_Recieved; // Echo back the received byte back to the computer
    UDR1 = 0;
     530:	10 92 9c 00 	sts	0x009C, r1
}
     534:	ff 91       	pop	r31
     536:	ef 91       	pop	r30
     538:	bf 91       	pop	r27
     53a:	af 91       	pop	r26
     53c:	9f 91       	pop	r25
     53e:	8f 91       	pop	r24
     540:	7f 91       	pop	r23
     542:	6f 91       	pop	r22
     544:	5f 91       	pop	r21
     546:	4f 91       	pop	r20
     548:	3f 91       	pop	r19
     54a:	2f 91       	pop	r18
     54c:	0f 90       	pop	r0
     54e:	0b be       	out	0x3b, r0	; 59
     550:	0f 90       	pop	r0
     552:	0f be       	out	0x3f, r0	; 63
     554:	0f 90       	pop	r0
     556:	1f 90       	pop	r1
     558:	18 95       	reti

0000055a <USART1_Transmit_String>:


//---------- USART1 TRANSMITING STRING  --------																					//
void USART1_Transmit_String(char sendbuf[80])										//		//
{																					//
     55a:	ac 01       	movw	r20, r24
	auto int StringLen,loop;													    //
	StringLen = strlen(sendbuf);													//
     55c:	dc 01       	movw	r26, r24
     55e:	0d 90       	ld	r0, X+
     560:	00 20       	and	r0, r0
     562:	e9 f7       	brne	.-6      	; 0x55e <USART1_Transmit_String+0x4>
     564:	11 97       	sbiw	r26, 0x01	; 1
     566:	a8 1b       	sub	r26, r24
     568:	b9 0b       	sbc	r27, r25
     56a:	20 e0       	ldi	r18, 0x00	; 0
     56c:	30 e0       	ldi	r19, 0x00	; 0
     56e:	60 eb       	ldi	r22, 0xB0	; 176
     570:	74 e0       	ldi	r23, 0x04	; 4
     572:	0f c0       	rjmp	.+30     	; 0x592 <USART1_Transmit_String+0x38>
															                        //
																				    //
	for(loop=0;loop<StringLen;loop++)												//
	{																				//
		USART1_Transmit_Char(sendbuf[loop]);	
     574:	fa 01       	movw	r30, r20
     576:	e2 0f       	add	r30, r18
     578:	f3 1f       	adc	r31, r19
     57a:	e0 81       	ld	r30, Z
}

//---------- USART1 TRANSMITING CHARACTER DATA --------
void USART1_Transmit_Char(uint8_t CHARDATA)
{
	while ((UCSR1A & (1 << UDRE1)) == 0) {};
     57c:	80 91 9b 00 	lds	r24, 0x009B
     580:	85 ff       	sbrs	r24, 5
     582:	fc cf       	rjmp	.-8      	; 0x57c <USART1_Transmit_String+0x22>
	UDR1 = CHARDATA;
     584:	e0 93 9c 00 	sts	0x009C, r30
     588:	fb 01       	movw	r30, r22
     58a:	31 97       	sbiw	r30, 0x01	; 1
     58c:	f1 f7       	brne	.-4      	; 0x58a <USART1_Transmit_String+0x30>
{																					//
	auto int StringLen,loop;													    //
	StringLen = strlen(sendbuf);													//
															                        //
																				    //
	for(loop=0;loop<StringLen;loop++)												//
     58e:	2f 5f       	subi	r18, 0xFF	; 255
     590:	3f 4f       	sbci	r19, 0xFF	; 255
     592:	2a 17       	cp	r18, r26
     594:	3b 07       	cpc	r19, r27
     596:	74 f3       	brlt	.-36     	; 0x574 <USART1_Transmit_String+0x1a>
	{																				//
		USART1_Transmit_Char(sendbuf[loop]);	
		_delay_us(300);											//
	}																				//
//	USART1_Transmit_Char(' ');																//
}
     598:	08 95       	ret

0000059a <ISR_USART0_Transmit_String>:
}

void ISR_USART0_Transmit_String(char sendbuf[80])										//		//
{																					//
	auto int StringLen,loop;													    //
	StringLen = strlen(sendbuf);													//
     59a:	dc 01       	movw	r26, r24
     59c:	0d 90       	ld	r0, X+
     59e:	00 20       	and	r0, r0
     5a0:	e9 f7       	brne	.-6      	; 0x59c <ISR_USART0_Transmit_String+0x2>
     5a2:	11 97       	sbiw	r26, 0x01	; 1
     5a4:	a8 1b       	sub	r26, r24
     5a6:	b9 0b       	sbc	r27, r25
     5a8:	20 e0       	ldi	r18, 0x00	; 0
     5aa:	30 e0       	ldi	r19, 0x00	; 0
     5ac:	40 e7       	ldi	r20, 0x70	; 112
     5ae:	57 e1       	ldi	r21, 0x17	; 23
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <ISR_USART0_Transmit_String+0x30>
															                        //
																			    	//
	for(loop=0;loop<StringLen;loop++)												//
	{																				//
		ISR_USART0_Transmit_Char(sendbuf[loop]);
     5b2:	fc 01       	movw	r30, r24
     5b4:	e2 0f       	add	r30, r18
     5b6:	f3 1f       	adc	r31, r19
     5b8:	e0 81       	ld	r30, Z
	*/
}

void ISR_USART0_Transmit_Char(uint8_t CHARDATA)
{
	while ((UCSR0A & (1 << UDRE0)) == 0) {};
     5ba:	5d 9b       	sbis	0x0b, 5	; 11
     5bc:	fe cf       	rjmp	.-4      	; 0x5ba <ISR_USART0_Transmit_String+0x20>
	UDR0 = CHARDATA;
     5be:	ec b9       	out	0x0c, r30	; 12
     5c0:	fa 01       	movw	r30, r20
     5c2:	31 97       	sbiw	r30, 0x01	; 1
     5c4:	f1 f7       	brne	.-4      	; 0x5c2 <ISR_USART0_Transmit_String+0x28>
{																					//
	auto int StringLen,loop;													    //
	StringLen = strlen(sendbuf);													//
															                        //
																			    	//
	for(loop=0;loop<StringLen;loop++)												//
     5c6:	2f 5f       	subi	r18, 0xFF	; 255
     5c8:	3f 4f       	sbci	r19, 0xFF	; 255
     5ca:	2a 17       	cp	r18, r26
     5cc:	3b 07       	cpc	r19, r27
     5ce:	8c f3       	brlt	.-30     	; 0x5b2 <ISR_USART0_Transmit_String+0x18>
}

//---------- USART0 TRANSMITING CHARACTER DATA --------
void USART0_Transmit_Char(uint8_t CHARDATA)
{
	while ((UCSR0A & (1 << UDRE0)) == 0) {};
     5d0:	5d 9b       	sbis	0x0b, 5	; 11
     5d2:	fe cf       	rjmp	.-4      	; 0x5d0 <ISR_USART0_Transmit_String+0x36>
	UDR0 = CHARDATA;
     5d4:	80 e2       	ldi	r24, 0x20	; 32
     5d6:	8c b9       	out	0x0c, r24	; 12
	{																				//
		ISR_USART0_Transmit_Char(sendbuf[loop]);
		_delay_us(1500);												//
	}																				//
	USART0_Transmit_Char(' ');																//
}
     5d8:	08 95       	ret

000005da <USART0_Transmit_String>:
}
//---------- USART0 TRANSMITING STRING  --------																					//
void USART0_Transmit_String(char sendbuf[80])										//		//
{																					//
	auto int StringLen,loop;													    //
	StringLen = strlen(sendbuf);													//
     5da:	dc 01       	movw	r26, r24
     5dc:	0d 90       	ld	r0, X+
     5de:	00 20       	and	r0, r0
     5e0:	e9 f7       	brne	.-6      	; 0x5dc <USART0_Transmit_String+0x2>
     5e2:	11 97       	sbiw	r26, 0x01	; 1
     5e4:	a8 1b       	sub	r26, r24
     5e6:	b9 0b       	sbc	r27, r25
     5e8:	20 e0       	ldi	r18, 0x00	; 0
     5ea:	30 e0       	ldi	r19, 0x00	; 0
     5ec:	40 e7       	ldi	r20, 0x70	; 112
     5ee:	57 e1       	ldi	r21, 0x17	; 23
     5f0:	0c c0       	rjmp	.+24     	; 0x60a <USART0_Transmit_String+0x30>
															                        //
																			    	//
	for(loop=0;loop<StringLen;loop++)												//
	{																				//
		USART0_Transmit_Char(sendbuf[loop]);
     5f2:	fc 01       	movw	r30, r24
     5f4:	e2 0f       	add	r30, r18
     5f6:	f3 1f       	adc	r31, r19
     5f8:	e0 81       	ld	r30, Z
}

//---------- USART0 TRANSMITING CHARACTER DATA --------
void USART0_Transmit_Char(uint8_t CHARDATA)
{
	while ((UCSR0A & (1 << UDRE0)) == 0) {};
     5fa:	5d 9b       	sbis	0x0b, 5	; 11
     5fc:	fe cf       	rjmp	.-4      	; 0x5fa <USART0_Transmit_String+0x20>
	UDR0 = CHARDATA;
     5fe:	ec b9       	out	0x0c, r30	; 12
     600:	fa 01       	movw	r30, r20
     602:	31 97       	sbiw	r30, 0x01	; 1
     604:	f1 f7       	brne	.-4      	; 0x602 <USART0_Transmit_String+0x28>
{																					//
	auto int StringLen,loop;													    //
	StringLen = strlen(sendbuf);													//
															                        //
																			    	//
	for(loop=0;loop<StringLen;loop++)												//
     606:	2f 5f       	subi	r18, 0xFF	; 255
     608:	3f 4f       	sbci	r19, 0xFF	; 255
     60a:	2a 17       	cp	r18, r26
     60c:	3b 07       	cpc	r19, r27
     60e:	8c f3       	brlt	.-30     	; 0x5f2 <USART0_Transmit_String+0x18>
}

//---------- USART0 TRANSMITING CHARACTER DATA --------
void USART0_Transmit_Char(uint8_t CHARDATA)
{
	while ((UCSR0A & (1 << UDRE0)) == 0) {};
     610:	5d 9b       	sbis	0x0b, 5	; 11
     612:	fe cf       	rjmp	.-4      	; 0x610 <USART0_Transmit_String+0x36>
	UDR0 = CHARDATA;
     614:	80 e2       	ldi	r24, 0x20	; 32
     616:	8c b9       	out	0x0c, r24	; 12
	{																				//
		USART0_Transmit_Char(sendbuf[loop]);
		_delay_us(1500);												//
	}																				//
	USART0_Transmit_Char(' ');																//
}
     618:	08 95       	ret

0000061a <main>:
	
	  

	//----------------  INITIALISATION OF MODULES  -----------------//

	Port_Init();
     61a:	0e 94 06 01 	call	0x20c	; 0x20c <Port_Init>
	 sei();
     61e:	78 94       	sei
	USART0_INIT();
     620:	0e 94 14 01 	call	0x228	; 0x228 <USART0_INIT>
	USART1_INIT();
     624:	0e 94 80 01 	call	0x300	; 0x300 <USART1_INIT>
	 USART0_Transmit_Char('1');
     628:	81 e3       	ldi	r24, 0x31	; 49
     62a:	0e 94 21 01 	call	0x242	; 0x242 <USART0_Transmit_Char>
//PORTC = 0XFF;
 		//USART1_Transmit_Char('1');
	ADC_Init();
     62e:	0e 94 a7 01 	call	0x34e	; 0x34e <ADC_Init>
//	_delay_ms(1000);
	lcd_init(LCD_DISP_ON);
     632:	8c e0       	ldi	r24, 0x0C	; 12
     634:	0e 94 67 04 	call	0x8ce	; 0x8ce <lcd_init>
	HX711_init(128);
     638:	80 e8       	ldi	r24, 0x80	; 128
     63a:	0e 94 3d 42 	call	0x847a	; 0x847a <HX711_init>
	HX711_set_scale(1.f/*242300.88*/);
     63e:	60 e0       	ldi	r22, 0x00	; 0
     640:	70 e0       	ldi	r23, 0x00	; 0
     642:	80 e8       	ldi	r24, 0x80	; 128
     644:	9f e3       	ldi	r25, 0x3F	; 63
     646:	0e 94 92 42 	call	0x8524	; 0x8524 <HX711_set_scale>
	HX711_set_gain(128);
     64a:	80 e8       	ldi	r24, 0x80	; 128
     64c:	0e 94 2b 42 	call	0x8456	; 0x8456 <HX711_set_gain>
	#if F_CPU == 8000000
	 	TCNTCOUNT = 248;
	#endif

	#if F_CPU == 16000000
		TCNTCOUNT = 240;
     650:	80 ef       	ldi	r24, 0xF0	; 240
     652:	90 e0       	ldi	r25, 0x00	; 0
     654:	90 93 7d 02 	sts	0x027D, r25
     658:	80 93 7c 02 	sts	0x027C, r24
	#endif
	

//		      76543210	
	DDRC  = 0b00000000;
     65c:	14 ba       	out	0x14, r1	; 20
	//		  76543210
	PORTC = 0b00001111;
     65e:	8f e0       	ldi	r24, 0x0F	; 15
     660:	85 bb       	out	0x15, r24	; 21

 	W_Span = eeprom_read_float(&Epromadress_W_Span);
     662:	80 e0       	ldi	r24, 0x00	; 0
     664:	90 e0       	ldi	r25, 0x00	; 0
     666:	0e 94 49 4a 	call	0x9492	; 0x9492 <__eerd_dword_m128>
     66a:	60 93 9b 02 	sts	0x029B, r22
     66e:	70 93 9c 02 	sts	0x029C, r23
     672:	80 93 9d 02 	sts	0x029D, r24
     676:	90 93 9e 02 	sts	0x029E, r25
	L_Offset = eeprom_read_float(&Epromadress_L_Offset);
     67a:	8f e9       	ldi	r24, 0x9F	; 159
     67c:	92 e0       	ldi	r25, 0x02	; 2
     67e:	0e 94 49 4a 	call	0x9492	; 0x9492 <__eerd_dword_m128>
     682:	60 93 8f 02 	sts	0x028F, r22
     686:	70 93 90 02 	sts	0x0290, r23
     68a:	80 93 91 02 	sts	0x0291, r24
     68e:	90 93 92 02 	sts	0x0292, r25
	U_Load = eeprom_read_float(&Epromadress_U_Load);
     692:	86 e4       	ldi	r24, 0x46	; 70
     694:	93 e0       	ldi	r25, 0x03	; 3
     696:	0e 94 49 4a 	call	0x9492	; 0x9492 <__eerd_dword_m128>
     69a:	60 93 b9 02 	sts	0x02B9, r22
     69e:	70 93 ba 02 	sts	0x02BA, r23
     6a2:	80 93 bb 02 	sts	0x02BB, r24
     6a6:	90 93 bc 02 	sts	0x02BC, r25
	O_Load = eeprom_read_float(&Epromadress_O_Load);
     6aa:	8a e8       	ldi	r24, 0x8A	; 138
     6ac:	92 e0       	ldi	r25, 0x02	; 2
     6ae:	0e 94 49 4a 	call	0x9492	; 0x9492 <__eerd_dword_m128>
     6b2:	60 93 ad 02 	sts	0x02AD, r22
     6b6:	70 93 ae 02 	sts	0x02AE, r23
     6ba:	80 93 af 02 	sts	0x02AF, r24
     6be:	90 93 b0 02 	sts	0x02B0, r25
	C_Factor = eeprom_read_float(&Epromadress_C_Factor);
     6c2:	8d eb       	ldi	r24, 0xBD	; 189
     6c4:	92 e0       	ldi	r25, 0x02	; 2
     6c6:	0e 94 49 4a 	call	0x9492	; 0x9492 <__eerd_dword_m128>
     6ca:	60 93 ea 02 	sts	0x02EA, r22
     6ce:	70 93 eb 02 	sts	0x02EB, r23
     6d2:	80 93 ec 02 	sts	0x02EC, r24
     6d6:	90 93 ed 02 	sts	0x02ED, r25
	Speed = eeprom_read_float(&Epromadress_Speed);
     6da:	83 e5       	ldi	r24, 0x53	; 83
     6dc:	93 e0       	ldi	r25, 0x03	; 3
     6de:	0e 94 49 4a 	call	0x9492	; 0x9492 <__eerd_dword_m128>
     6e2:	60 93 7e 02 	sts	0x027E, r22
     6e6:	70 93 7f 02 	sts	0x027F, r23
     6ea:	80 93 80 02 	sts	0x0280, r24
     6ee:	90 93 81 02 	sts	0x0281, r25


	TIMER0_INIT();
     6f2:	0e 94 03 02 	call	0x406	; 0x406 <TIMER0_INIT>
	Time_counter = 0;
     6f6:	10 92 c2 02 	sts	0x02C2, r1
     6fa:	10 92 c1 02 	sts	0x02C1, r1

	Home();	 
     6fe:	0e 94 2e 07 	call	0xe5c	; 0xe5c <Home>
     702:	80 e2       	ldi	r24, 0x20	; 32
     704:	9e e4       	ldi	r25, 0x4E	; 78
     706:	20 e9       	ldi	r18, 0x90	; 144
     708:	31 e0       	ldi	r19, 0x01	; 1
     70a:	f9 01       	movw	r30, r18
     70c:	31 97       	sbiw	r30, 0x01	; 1
     70e:	f1 f7       	brne	.-4      	; 0x70c <main+0xf2>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     710:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     712:	d9 f7       	brne	.-10     	; 0x70a <main+0xf0>
	_delay_ms(2000);	 
	lcd_clrscr();
     714:	0e 94 25 04 	call	0x84a	; 0x84a <lcd_clrscr>
	
  	

	    //sprintf(buf,"%d",Time_counter);
		//USART0_Transmit_String(buf); 
	    PageOne();
     718:	0e 94 2d 3e 	call	0x7c5a	; 0x7c5a <PageOne>
		    
		if(key == 'P')
     71c:	80 91 68 03 	lds	r24, 0x0368
     720:	90 91 69 03 	lds	r25, 0x0369
     724:	80 35       	cpi	r24, 0x50	; 80
     726:	91 05       	cpc	r25, r1
     728:	b9 f7       	brne	.-18     	; 0x718 <main+0xfe>
		{		 
			key = GetKeyPressed();
     72a:	0e 94 a1 04 	call	0x942	; 0x942 <GetKeyPressed>
     72e:	90 93 69 03 	sts	0x0369, r25
     732:	80 93 68 03 	sts	0x0368, r24
			//	Process_Data_Page();
			Passward_Verification();
     736:	0e 94 74 3b 	call	0x76e8	; 0x76e8 <Passward_Verification>
     73a:	ee cf       	rjmp	.-36     	; 0x718 <main+0xfe>

0000073c <lcd_write>:
static void lcd_write(uint8_t data,uint8_t rs) 
{
    unsigned char dataBits ;


    if (rs) {   /* write data        (RS=1, RW=0) */
     73c:	66 23       	and	r22, r22
     73e:	11 f0       	breq	.+4      	; 0x744 <lcd_write+0x8>
       lcd_rs_high();
     740:	1a 9a       	sbi	0x03, 2	; 3
     742:	01 c0       	rjmp	.+2      	; 0x746 <lcd_write+0xa>
    } else {    /* write instruction (RS=0, RW=0) */
       lcd_rs_low();
     744:	1a 98       	cbi	0x03, 2	; 3
    }
    lcd_rw_low();
     746:	1b 98       	cbi	0x03, 3	; 3
        LCD_DATA0_PORT = dataBits | 0x0F;
    }
    else
    {
        /* configure data pins as output */
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     748:	8c 9a       	sbi	0x11, 4	; 17
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     74a:	8d 9a       	sbi	0x11, 5	; 17
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     74c:	8e 9a       	sbi	0x11, 6	; 17
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     74e:	8f 9a       	sbi	0x11, 7	; 17
        
        /* output high nibble first */
        LCD_DATA3_PORT &= ~_BV(LCD_DATA3_PIN);
     750:	97 98       	cbi	0x12, 7	; 18
        LCD_DATA2_PORT &= ~_BV(LCD_DATA2_PIN);
     752:	96 98       	cbi	0x12, 6	; 18
        LCD_DATA1_PORT &= ~_BV(LCD_DATA1_PIN);
     754:	95 98       	cbi	0x12, 5	; 18
        LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);
     756:	94 98       	cbi	0x12, 4	; 18
    	if(data & 0x80) LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
     758:	87 fd       	sbrc	r24, 7
     75a:	97 9a       	sbi	0x12, 7	; 18
    	if(data & 0x40) LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
     75c:	86 fd       	sbrc	r24, 6
     75e:	96 9a       	sbi	0x12, 6	; 18
    	if(data & 0x20) LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
     760:	85 fd       	sbrc	r24, 5
     762:	95 9a       	sbi	0x12, 5	; 18
    	if(data & 0x10) LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);   
     764:	84 fd       	sbrc	r24, 4
     766:	94 9a       	sbi	0x12, 4	; 18

#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
    lcd_e_high();
     768:	1c 9a       	sbi	0x03, 4	; 3
    lcd_e_delay();
     76a:	00 c0       	rjmp	.+0      	; 0x76c <lcd_write+0x30>
    lcd_e_low();
     76c:	1c 98       	cbi	0x03, 4	; 3
    	if(data & 0x20) LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
    	if(data & 0x10) LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);   
        lcd_e_toggle();
        
        /* output low nibble */
        LCD_DATA3_PORT &= ~_BV(LCD_DATA3_PIN);
     76e:	97 98       	cbi	0x12, 7	; 18
        LCD_DATA2_PORT &= ~_BV(LCD_DATA2_PIN);
     770:	96 98       	cbi	0x12, 6	; 18
        LCD_DATA1_PORT &= ~_BV(LCD_DATA1_PIN);
     772:	95 98       	cbi	0x12, 5	; 18
        LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);
     774:	94 98       	cbi	0x12, 4	; 18
    	if(data & 0x08) LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
     776:	83 fd       	sbrc	r24, 3
     778:	97 9a       	sbi	0x12, 7	; 18
    	if(data & 0x04) LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
     77a:	82 fd       	sbrc	r24, 2
     77c:	96 9a       	sbi	0x12, 6	; 18
    	if(data & 0x02) LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
     77e:	81 fd       	sbrc	r24, 1
     780:	95 9a       	sbi	0x12, 5	; 18
    	if(data & 0x01) LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);
     782:	80 fd       	sbrc	r24, 0
     784:	94 9a       	sbi	0x12, 4	; 18

#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
    lcd_e_high();
     786:	1c 9a       	sbi	0x03, 4	; 3
    lcd_e_delay();
     788:	00 c0       	rjmp	.+0      	; 0x78a <lcd_write+0x4e>
    lcd_e_low();
     78a:	1c 98       	cbi	0x03, 4	; 3
    	if(data & 0x02) LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
    	if(data & 0x01) LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);
        lcd_e_toggle();        
        
        /* all data pins high (inactive) */
        LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);
     78c:	94 9a       	sbi	0x12, 4	; 18
        LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
     78e:	95 9a       	sbi	0x12, 5	; 18
        LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
     790:	96 9a       	sbi	0x12, 6	; 18
        LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
     792:	97 9a       	sbi	0x12, 7	; 18
    }
}
     794:	08 95       	ret

00000796 <lcd_read>:
static uint8_t lcd_read(uint8_t rs) 
{
    uint8_t data;
    
    
    if (rs)
     796:	88 23       	and	r24, r24
     798:	11 f0       	breq	.+4      	; 0x79e <lcd_read+0x8>
        lcd_rs_high();                       /* RS=1: read data      */
     79a:	1a 9a       	sbi	0x03, 2	; 3
     79c:	01 c0       	rjmp	.+2      	; 0x7a0 <lcd_read+0xa>
    else
        lcd_rs_low();                        /* RS=0: read busy flag */
     79e:	1a 98       	cbi	0x03, 2	; 3
    lcd_rw_high();                           /* RW=1  read mode      */
     7a0:	1b 9a       	sbi	0x03, 3	; 3
        lcd_e_low();
    }
    else
    {
        /* configure data pins as input */
        DDR(LCD_DATA0_PORT) &= ~_BV(LCD_DATA0_PIN);
     7a2:	8c 98       	cbi	0x11, 4	; 17
        DDR(LCD_DATA1_PORT) &= ~_BV(LCD_DATA1_PIN);
     7a4:	8d 98       	cbi	0x11, 5	; 17
        DDR(LCD_DATA2_PORT) &= ~_BV(LCD_DATA2_PIN);
     7a6:	8e 98       	cbi	0x11, 6	; 17
        DDR(LCD_DATA3_PORT) &= ~_BV(LCD_DATA3_PIN);
     7a8:	8f 98       	cbi	0x11, 7	; 17
                
        /* read high nibble first */
        lcd_e_high();
     7aa:	1c 9a       	sbi	0x03, 4	; 3
        lcd_e_delay();        
     7ac:	00 c0       	rjmp	.+0      	; 0x7ae <lcd_read+0x18>
        data = 0;
        if ( PIN(LCD_DATA0_PORT) & _BV(LCD_DATA0_PIN) ) data |= 0x10;
     7ae:	84 9b       	sbis	0x10, 4	; 16
     7b0:	02 c0       	rjmp	.+4      	; 0x7b6 <lcd_read+0x20>
     7b2:	80 e1       	ldi	r24, 0x10	; 16
     7b4:	01 c0       	rjmp	.+2      	; 0x7b8 <lcd_read+0x22>
     7b6:	80 e0       	ldi	r24, 0x00	; 0
        if ( PIN(LCD_DATA1_PORT) & _BV(LCD_DATA1_PIN) ) data |= 0x20;
     7b8:	85 99       	sbic	0x10, 5	; 16
     7ba:	80 62       	ori	r24, 0x20	; 32
        if ( PIN(LCD_DATA2_PORT) & _BV(LCD_DATA2_PIN) ) data |= 0x40;
     7bc:	86 99       	sbic	0x10, 6	; 16
     7be:	80 64       	ori	r24, 0x40	; 64
        if ( PIN(LCD_DATA3_PORT) & _BV(LCD_DATA3_PIN) ) data |= 0x80;
     7c0:	87 99       	sbic	0x10, 7	; 16
     7c2:	80 68       	ori	r24, 0x80	; 128
        lcd_e_low();
     7c4:	1c 98       	cbi	0x03, 4	; 3

        lcd_e_delay();                       /* Enable 500ns low       */
     7c6:	00 c0       	rjmp	.+0      	; 0x7c8 <lcd_read+0x32>
    
        /* read low nibble */    
        lcd_e_high();
     7c8:	1c 9a       	sbi	0x03, 4	; 3
        lcd_e_delay();
     7ca:	00 c0       	rjmp	.+0      	; 0x7cc <lcd_read+0x36>
        if ( PIN(LCD_DATA0_PORT) & _BV(LCD_DATA0_PIN) ) data |= 0x01;
     7cc:	84 99       	sbic	0x10, 4	; 16
     7ce:	81 60       	ori	r24, 0x01	; 1
        if ( PIN(LCD_DATA1_PORT) & _BV(LCD_DATA1_PIN) ) data |= 0x02;
     7d0:	85 99       	sbic	0x10, 5	; 16
     7d2:	82 60       	ori	r24, 0x02	; 2
        if ( PIN(LCD_DATA2_PORT) & _BV(LCD_DATA2_PIN) ) data |= 0x04;
     7d4:	86 99       	sbic	0x10, 6	; 16
     7d6:	84 60       	ori	r24, 0x04	; 4
        if ( PIN(LCD_DATA3_PORT) & _BV(LCD_DATA3_PIN) ) data |= 0x08;        
     7d8:	87 99       	sbic	0x10, 7	; 16
     7da:	88 60       	ori	r24, 0x08	; 8
        lcd_e_low();
     7dc:	1c 98       	cbi	0x03, 4	; 3
    }
    return data;
}
     7de:	08 95       	ret

000007e0 <lcd_waitbusy>:

{
    register uint8_t c;
    
    /* wait until busy flag is cleared */
    while ( (c=lcd_read(0)) & (1<<LCD_BUSY)) {}
     7e0:	80 e0       	ldi	r24, 0x00	; 0
     7e2:	0e 94 cb 03 	call	0x796	; 0x796 <lcd_read>
     7e6:	87 fd       	sbrc	r24, 7
     7e8:	fb cf       	rjmp	.-10     	; 0x7e0 <lcd_waitbusy>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     7ea:	82 e0       	ldi	r24, 0x02	; 2
     7ec:	90 e0       	ldi	r25, 0x00	; 0
     7ee:	01 97       	sbiw	r24, 0x01	; 1
     7f0:	f1 f7       	brne	.-4      	; 0x7ee <lcd_waitbusy+0xe>
    
    /* the address counter is updated 4us after the busy flag is cleared */
    delay(2);

    /* now read the address counter */
    return (lcd_read(0));  // return address counter
     7f2:	80 e0       	ldi	r24, 0x00	; 0
     7f4:	0e 94 cb 03 	call	0x796	; 0x796 <lcd_read>
    
}/* lcd_waitbusy */
     7f8:	08 95       	ret

000007fa <lcd_command>:
Send LCD controller instruction command
Input:   instruction to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_command(uint8_t cmd)
{
     7fa:	1f 93       	push	r17
     7fc:	18 2f       	mov	r17, r24
    lcd_waitbusy();
     7fe:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <lcd_waitbusy>
    lcd_write(cmd,0);
     802:	81 2f       	mov	r24, r17
     804:	60 e0       	ldi	r22, 0x00	; 0
     806:	0e 94 9e 03 	call	0x73c	; 0x73c <lcd_write>
}
     80a:	1f 91       	pop	r17
     80c:	08 95       	ret

0000080e <lcd_data>:
Send data byte to LCD controller 
Input:   data to send to LCD controller, see HD44780 data sheet
Returns: none
*************************************************************************/
void lcd_data(uint8_t data)
{
     80e:	1f 93       	push	r17
     810:	18 2f       	mov	r17, r24
    lcd_waitbusy();
     812:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <lcd_waitbusy>
    lcd_write(data,1);
     816:	81 2f       	mov	r24, r17
     818:	61 e0       	ldi	r22, 0x01	; 1
     81a:	0e 94 9e 03 	call	0x73c	; 0x73c <lcd_write>
}
     81e:	1f 91       	pop	r17
     820:	08 95       	ret

00000822 <lcd_gotoxy>:
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
    else
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE2+x);
#endif
#if LCD_LINES==4
    if ( y==0 )
     822:	66 23       	and	r22, r22
     824:	11 f4       	brne	.+4      	; 0x82a <lcd_gotoxy+0x8>
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE1+x);
     826:	80 58       	subi	r24, 0x80	; 128
     828:	09 c0       	rjmp	.+18     	; 0x83c <lcd_gotoxy+0x1a>
    else if ( y==1)
     82a:	61 30       	cpi	r22, 0x01	; 1
     82c:	11 f4       	brne	.+4      	; 0x832 <lcd_gotoxy+0x10>
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE2+x);
     82e:	80 54       	subi	r24, 0x40	; 64
     830:	05 c0       	rjmp	.+10     	; 0x83c <lcd_gotoxy+0x1a>
    else if ( y==2)
     832:	62 30       	cpi	r22, 0x02	; 2
     834:	11 f4       	brne	.+4      	; 0x83a <lcd_gotoxy+0x18>
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE3+x);
     836:	8c 56       	subi	r24, 0x6C	; 108
     838:	01 c0       	rjmp	.+2      	; 0x83c <lcd_gotoxy+0x1a>
    else /* y==3 */
        lcd_command((1<<LCD_DDRAM)+LCD_START_LINE4+x);
     83a:	8c 52       	subi	r24, 0x2C	; 44
     83c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
     840:	08 95       	ret

00000842 <lcd_getxy>:

/*************************************************************************
*************************************************************************/
int lcd_getxy(void)
{
    return lcd_waitbusy();
     842:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <lcd_waitbusy>
}
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	08 95       	ret

0000084a <lcd_clrscr>:
/*************************************************************************
Clear display and set cursor to home position
*************************************************************************/
void lcd_clrscr(void)
{
    lcd_command(1<<LCD_CLR);
     84a:	81 e0       	ldi	r24, 0x01	; 1
     84c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
}
     850:	08 95       	ret

00000852 <lcd_home>:
/*************************************************************************
Set cursor to home position
*************************************************************************/
void lcd_home(void)
{
    lcd_command(1<<LCD_HOME);
     852:	82 e0       	ldi	r24, 0x02	; 2
     854:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
}
     858:	08 95       	ret

0000085a <lcd_putc>:
Display character at current cursor position 
Input:    character to be displayed                                       
Returns:  none
*************************************************************************/
void lcd_putc(char c)
{
     85a:	1f 93       	push	r17
     85c:	18 2f       	mov	r17, r24
    uint8_t pos;


    pos = lcd_waitbusy();   // read busy-flag and address counter
     85e:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <lcd_waitbusy>
     862:	98 2f       	mov	r25, r24
    if (c=='\n')
     864:	1a 30       	cpi	r17, 0x0A	; 10
     866:	99 f4       	brne	.+38     	; 0x88e <lcd_putc+0x34>
    else if ( (pos >= LCD_START_LINE3) && (pos < LCD_START_LINE4) )
        addressCounter = LCD_START_LINE4;
    else 
        addressCounter = LCD_START_LINE1;
#else
    if ( pos < LCD_START_LINE3 )
     868:	84 31       	cpi	r24, 0x14	; 20
     86a:	10 f4       	brcc	.+4      	; 0x870 <lcd_putc+0x16>
     86c:	80 e4       	ldi	r24, 0x40	; 64
     86e:	0b c0       	rjmp	.+22     	; 0x886 <lcd_putc+0x2c>
        addressCounter = LCD_START_LINE2;
    else if ( (pos >= LCD_START_LINE2) && (pos < LCD_START_LINE4) )
     870:	80 54       	subi	r24, 0x40	; 64
     872:	84 31       	cpi	r24, 0x14	; 20
     874:	10 f4       	brcc	.+4      	; 0x87a <lcd_putc+0x20>
     876:	84 e1       	ldi	r24, 0x14	; 20
     878:	06 c0       	rjmp	.+12     	; 0x886 <lcd_putc+0x2c>
        addressCounter = LCD_START_LINE3;
    else if ( (pos >= LCD_START_LINE3) && (pos < LCD_START_LINE2) )
     87a:	94 51       	subi	r25, 0x14	; 20
     87c:	9c 32       	cpi	r25, 0x2C	; 44
     87e:	10 f0       	brcs	.+4      	; 0x884 <lcd_putc+0x2a>
     880:	80 e0       	ldi	r24, 0x00	; 0
     882:	01 c0       	rjmp	.+2      	; 0x886 <lcd_putc+0x2c>
     884:	84 e5       	ldi	r24, 0x54	; 84
        addressCounter = LCD_START_LINE4;
    else 
        addressCounter = LCD_START_LINE1;
#endif
#endif
    lcd_command((1<<LCD_DDRAM)+addressCounter);
     886:	80 58       	subi	r24, 0x80	; 128
     888:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
     88c:	04 c0       	rjmp	.+8      	; 0x896 <lcd_putc+0x3c>
            lcd_write((1<<LCD_DDRAM)+LCD_START_LINE1,0);
        }
#endif
        lcd_waitbusy();
#endif
        lcd_write(c, 1);
     88e:	81 2f       	mov	r24, r17
     890:	61 e0       	ldi	r22, 0x01	; 1
     892:	0e 94 9e 03 	call	0x73c	; 0x73c <lcd_write>
    }

}/* lcd_putc */
     896:	1f 91       	pop	r17
     898:	08 95       	ret

0000089a <lcd_puts>:
// STM-void lcd_puts(const char *s)

void lcd_puts(void *st) 

/* print string on lcd (no auto linefeed) */
{
     89a:	cf 93       	push	r28
     89c:	df 93       	push	r29
    char *s;//STM - Delete if not working
	s=(char*)st;//STM - Delete if not working
     89e:	ec 01       	movw	r28, r24
     8a0:	02 c0       	rjmp	.+4      	; 0x8a6 <lcd_puts+0xc>

    register char c;

    while ( (c = *s++) ) {
        lcd_putc(c);
     8a2:	0e 94 2d 04 	call	0x85a	; 0x85a <lcd_putc>
    char *s;//STM - Delete if not working
	s=(char*)st;//STM - Delete if not working

    register char c;

    while ( (c = *s++) ) {
     8a6:	89 91       	ld	r24, Y+
     8a8:	88 23       	and	r24, r24
     8aa:	d9 f7       	brne	.-10     	; 0x8a2 <lcd_puts+0x8>
        lcd_putc(c);
    }

}/* lcd_puts */
     8ac:	df 91       	pop	r29
     8ae:	cf 91       	pop	r28
     8b0:	08 95       	ret

000008b2 <lcd_puts_p>:
Input:     string from program memory be be displayed                                        
Returns:   none
*************************************************************************/
void lcd_puts_p(const char *progmem_s)
/* print string from program memory on lcd (no auto linefeed) */
{
     8b2:	cf 93       	push	r28
     8b4:	df 93       	push	r29
     8b6:	ec 01       	movw	r28, r24
     8b8:	02 c0       	rjmp	.+4      	; 0x8be <lcd_puts_p+0xc>
    register char c;

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
     8ba:	0e 94 2d 04 	call	0x85a	; 0x85a <lcd_putc>
     8be:	fe 01       	movw	r30, r28
void lcd_puts_p(const char *progmem_s)
/* print string from program memory on lcd (no auto linefeed) */
{
    register char c;

    while ( (c = pgm_read_byte(progmem_s++)) ) {
     8c0:	21 96       	adiw	r28, 0x01	; 1
     8c2:	84 91       	lpm	r24, Z+
     8c4:	88 23       	and	r24, r24
     8c6:	c9 f7       	brne	.-14     	; 0x8ba <lcd_puts_p+0x8>
        lcd_putc(c);
    }

}/* lcd_puts_p */
     8c8:	df 91       	pop	r29
     8ca:	cf 91       	pop	r28
     8cc:	08 95       	ret

000008ce <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     8ce:	1f 93       	push	r17
     8d0:	18 2f       	mov	r17, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
     8d2:	12 9a       	sbi	0x02, 2	; 2
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
     8d4:	13 9a       	sbi	0x02, 3	; 2
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
     8d6:	14 9a       	sbi	0x02, 4	; 2
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     8d8:	8c 9a       	sbi	0x11, 4	; 17
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     8da:	8d 9a       	sbi	0x11, 5	; 17
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     8dc:	8e 9a       	sbi	0x11, 6	; 17
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     8de:	8f 9a       	sbi	0x11, 7	; 17
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     8e0:	80 e8       	ldi	r24, 0x80	; 128
     8e2:	9e e3       	ldi	r25, 0x3E	; 62
     8e4:	01 97       	sbiw	r24, 0x01	; 1
     8e6:	f1 f7       	brne	.-4      	; 0x8e4 <lcd_init+0x16>
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(16000);        /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);  // _BV(LCD_FUNCTION)>>4;
     8e8:	95 9a       	sbi	0x12, 5	; 18
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
     8ea:	94 9a       	sbi	0x12, 4	; 18

#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
    lcd_e_high();
     8ec:	1c 9a       	sbi	0x03, 4	; 3
    lcd_e_delay();
     8ee:	00 c0       	rjmp	.+0      	; 0x8f0 <lcd_init+0x22>
    lcd_e_low();
     8f0:	1c 98       	cbi	0x03, 4	; 3
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     8f2:	80 e8       	ldi	r24, 0x80	; 128
     8f4:	93 e1       	ldi	r25, 0x13	; 19
     8f6:	01 97       	sbiw	r24, 0x01	; 1
     8f8:	f1 f7       	brne	.-4      	; 0x8f6 <lcd_init+0x28>

#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
    lcd_e_high();
     8fa:	1c 9a       	sbi	0x03, 4	; 3
    lcd_e_delay();
     8fc:	00 c0       	rjmp	.+0      	; 0x8fe <lcd_init+0x30>
    lcd_e_low();
     8fe:	1c 98       	cbi	0x03, 4	; 3
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     900:	80 e4       	ldi	r24, 0x40	; 64
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	fc 01       	movw	r30, r24
     906:	31 97       	sbiw	r30, 0x01	; 1
     908:	f1 f7       	brne	.-4      	; 0x906 <lcd_init+0x38>

#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
    lcd_e_high();
     90a:	1c 9a       	sbi	0x03, 4	; 3
    lcd_e_delay();
     90c:	00 c0       	rjmp	.+0      	; 0x90e <lcd_init+0x40>
    lcd_e_low();
     90e:	1c 98       	cbi	0x03, 4	; 3
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     910:	fc 01       	movw	r30, r24
     912:	31 97       	sbiw	r30, 0x01	; 1
     914:	f1 f7       	brne	.-4      	; 0x912 <lcd_init+0x44>
    /* repeat last command a third time */
    lcd_e_toggle();      
    delay(64);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
     916:	94 98       	cbi	0x12, 4	; 18

#if LCD_IO_MODE
/* toggle Enable Pin to initiate write */
static void toggle_e(void)
{
    lcd_e_high();
     918:	1c 9a       	sbi	0x03, 4	; 3
    lcd_e_delay();
     91a:	00 c0       	rjmp	.+0      	; 0x91c <lcd_init+0x4e>
    lcd_e_low();
     91c:	1c 98       	cbi	0x03, 4	; 3
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
     91e:	01 97       	sbiw	r24, 0x01	; 1
     920:	f1 f7       	brne	.-4      	; 0x91e <lcd_init+0x50>
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
     922:	88 e2       	ldi	r24, 0x28	; 40
     924:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
     928:	88 e0       	ldi	r24, 0x08	; 8
     92a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
     92e:	0e 94 25 04 	call	0x84a	; 0x84a <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
     932:	86 e0       	ldi	r24, 0x06	; 6
     934:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
     938:	81 2f       	mov	r24, r17
     93a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>

}/* lcd_init */
     93e:	1f 91       	pop	r17
     940:	08 95       	ret

00000942 <GetKeyPressed>:


int GetKeyPressed()
{

 KeyPressedStatus = 0;
     942:	10 92 52 03 	sts	0x0352, r1
 //		      76543210	
	DDRC  = 0b10000000; 
     946:	80 e8       	ldi	r24, 0x80	; 128
     948:	84 bb       	out	0x14, r24	; 20
     94a:	88 ec       	ldi	r24, 0xC8	; 200
     94c:	90 e0       	ldi	r25, 0x00	; 0
     94e:	01 97       	sbiw	r24, 0x01	; 1
     950:	f1 f7       	brne	.-4      	; 0x94e <GetKeyPressed+0xc>
	_delay_us(50);
 	switch (PINC<<4)  // Main Menu Switch statement
     952:	83 b3       	in	r24, 0x13	; 19
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	24 e0       	ldi	r18, 0x04	; 4
     958:	88 0f       	add	r24, r24
     95a:	99 1f       	adc	r25, r25
     95c:	2a 95       	dec	r18
     95e:	e1 f7       	brne	.-8      	; 0x958 <GetKeyPressed+0x16>
     960:	80 3b       	cpi	r24, 0xB0	; 176
     962:	91 05       	cpc	r25, r1
     964:	09 f4       	brne	.+2      	; 0x968 <GetKeyPressed+0x26>
     966:	d2 c0       	rjmp	.+420    	; 0xb0c <GetKeyPressed+0x1ca>
     968:	81 3b       	cpi	r24, 0xB1	; 177
     96a:	91 05       	cpc	r25, r1
     96c:	2c f4       	brge	.+10     	; 0x978 <GetKeyPressed+0x36>
     96e:	80 37       	cpi	r24, 0x70	; 112
     970:	91 05       	cpc	r25, r1
     972:	09 f0       	breq	.+2      	; 0x976 <GetKeyPressed+0x34>
     974:	d9 c0       	rjmp	.+434    	; 0xb28 <GetKeyPressed+0x1e6>
     976:	d1 c0       	rjmp	.+418    	; 0xb1a <GetKeyPressed+0x1d8>
     978:	80 3d       	cpi	r24, 0xD0	; 208
     97a:	91 05       	cpc	r25, r1
     97c:	09 f4       	brne	.+2      	; 0x980 <GetKeyPressed+0x3e>
     97e:	bf c0       	rjmp	.+382    	; 0xafe <GetKeyPressed+0x1bc>
     980:	80 3e       	cpi	r24, 0xE0	; 224
     982:	91 05       	cpc	r25, r1
     984:	09 f0       	breq	.+2      	; 0x988 <GetKeyPressed+0x46>
     986:	d0 c0       	rjmp	.+416    	; 0xb28 <GetKeyPressed+0x1e6>
     988:	a8 c0       	rjmp	.+336    	; 0xada <GetKeyPressed+0x198>
	    {
			case 224: while((PINC<<4)!= 240)
					  {
					  	//USART0_Transmit_Char('A');
						DDRC  = 0b10000000; 
     98a:	f4 bb       	out	0x14, r31	; 20
     98c:	c9 01       	movw	r24, r18
     98e:	01 97       	sbiw	r24, 0x01	; 1
     990:	f1 f7       	brne	.-4      	; 0x98e <GetKeyPressed+0x4c>
						_delay_us(50);
					 	switch (PINC<<4)  // Main Menu Switch statement
     992:	83 b3       	in	r24, 0x13	; 19
     994:	90 e0       	ldi	r25, 0x00	; 0
     996:	b4 e0       	ldi	r27, 0x04	; 4
     998:	88 0f       	add	r24, r24
     99a:	99 1f       	adc	r25, r25
     99c:	ba 95       	dec	r27
     99e:	e1 f7       	brne	.-8      	; 0x998 <GetKeyPressed+0x56>
     9a0:	80 3b       	cpi	r24, 0xB0	; 176
     9a2:	91 05       	cpc	r25, r1
     9a4:	59 f0       	breq	.+22     	; 0x9bc <GetKeyPressed+0x7a>
     9a6:	80 3d       	cpi	r24, 0xD0	; 208
     9a8:	91 05       	cpc	r25, r1
     9aa:	21 f0       	breq	.+8      	; 0x9b4 <GetKeyPressed+0x72>
     9ac:	80 37       	cpi	r24, 0x70	; 112
     9ae:	91 05       	cpc	r25, r1
     9b0:	69 f4       	brne	.+26     	; 0x9cc <GetKeyPressed+0x8a>
     9b2:	08 c0       	rjmp	.+16     	; 0x9c4 <GetKeyPressed+0x82>
						    {
							 
								         break;
								case 208: while((PINC<<4)!= 240)
     9b4:	83 b3       	in	r24, 0x13	; 19
     9b6:	8f 30       	cpi	r24, 0x0F	; 15
     9b8:	e9 f7       	brne	.-6      	; 0x9b4 <GetKeyPressed+0x72>
     9ba:	22 c2       	rjmp	.+1092   	; 0xe00 <GetKeyPressed+0x4be>
										  {
										  	//USART0_Transmit_Char('3');
										  }
											return('3');
								         break;
								case 176: while((PINC<<4)!= 240)
     9bc:	83 b3       	in	r24, 0x13	; 19
     9be:	8f 30       	cpi	r24, 0x0F	; 15
     9c0:	e9 f7       	brne	.-6      	; 0x9bc <GetKeyPressed+0x7a>
     9c2:	21 c2       	rjmp	.+1090   	; 0xe06 <GetKeyPressed+0x4c4>
										  {
										  //	USART0_Transmit_Char('2');
										  }
											return('2');
								         break;
								case 112: while((PINC<<4)!= 240)
     9c4:	83 b3       	in	r24, 0x13	; 19
     9c6:	8f 30       	cpi	r24, 0x0F	; 15
     9c8:	e9 f7       	brne	.-6      	; 0x9c4 <GetKeyPressed+0x82>
     9ca:	20 c2       	rjmp	.+1088   	; 0xe0c <GetKeyPressed+0x4ca>
     9cc:	ca 01       	movw	r24, r20
     9ce:	01 97       	sbiw	r24, 0x01	; 1
     9d0:	f1 f7       	brne	.-4      	; 0x9ce <GetKeyPressed+0x8c>

					        } 
		 
							_delay_us(1000);
					//		              76543210	
								DDRC  = 0b01000000; 
     9d2:	e4 bb       	out	0x14, r30	; 20
     9d4:	c9 01       	movw	r24, r18
     9d6:	01 97       	sbiw	r24, 0x01	; 1
     9d8:	f1 f7       	brne	.-4      	; 0x9d6 <GetKeyPressed+0x94>
								_delay_us(50);
					 		switch (PINC<<4)  // Main Menu Switch statement
     9da:	83 b3       	in	r24, 0x13	; 19
     9dc:	90 e0       	ldi	r25, 0x00	; 0
     9de:	a4 e0       	ldi	r26, 0x04	; 4
     9e0:	88 0f       	add	r24, r24
     9e2:	99 1f       	adc	r25, r25
     9e4:	aa 95       	dec	r26
     9e6:	e1 f7       	brne	.-8      	; 0x9e0 <GetKeyPressed+0x9e>
     9e8:	80 3b       	cpi	r24, 0xB0	; 176
     9ea:	91 05       	cpc	r25, r1
     9ec:	a9 f0       	breq	.+42     	; 0xa18 <GetKeyPressed+0xd6>
     9ee:	81 3b       	cpi	r24, 0xB1	; 177
     9f0:	91 05       	cpc	r25, r1
     9f2:	24 f4       	brge	.+8      	; 0x9fc <GetKeyPressed+0xba>
     9f4:	80 37       	cpi	r24, 0x70	; 112
     9f6:	91 05       	cpc	r25, r1
     9f8:	b9 f4       	brne	.+46     	; 0xa28 <GetKeyPressed+0xe6>
     9fa:	12 c0       	rjmp	.+36     	; 0xa20 <GetKeyPressed+0xde>
     9fc:	80 3d       	cpi	r24, 0xD0	; 208
     9fe:	91 05       	cpc	r25, r1
     a00:	39 f0       	breq	.+14     	; 0xa10 <GetKeyPressed+0xce>
     a02:	80 3e       	cpi	r24, 0xE0	; 224
     a04:	91 05       	cpc	r25, r1
     a06:	81 f4       	brne	.+32     	; 0xa28 <GetKeyPressed+0xe6>
						    {
								case 224: while((PINC<<4)!= 240)
     a08:	83 b3       	in	r24, 0x13	; 19
     a0a:	8f 30       	cpi	r24, 0x0F	; 15
     a0c:	e9 f7       	brne	.-6      	; 0xa08 <GetKeyPressed+0xc6>
     a0e:	01 c2       	rjmp	.+1026   	; 0xe12 <GetKeyPressed+0x4d0>
										  {
										  	//USART0_Transmit_Char('B');
										  }
											return('P');
								         break;					 
								case 208: while((PINC<<4)!= 240)
     a10:	83 b3       	in	r24, 0x13	; 19
     a12:	8f 30       	cpi	r24, 0x0F	; 15
     a14:	e9 f7       	brne	.-6      	; 0xa10 <GetKeyPressed+0xce>
     a16:	00 c2       	rjmp	.+1024   	; 0xe18 <GetKeyPressed+0x4d6>
										  {
										  	//USART0_Transmit_Char('6');
										  }
											return('6');
								         break;					  
								case 176: while((PINC<<4)!= 240)
     a18:	83 b3       	in	r24, 0x13	; 19
     a1a:	8f 30       	cpi	r24, 0x0F	; 15
     a1c:	e9 f7       	brne	.-6      	; 0xa18 <GetKeyPressed+0xd6>
     a1e:	ff c1       	rjmp	.+1022   	; 0xe1e <GetKeyPressed+0x4dc>
										  {
										  	//USART0_Transmit_Char('5');
										  }
											return('5');
								         break;
								case 112: while((PINC<<4)!= 240)
     a20:	83 b3       	in	r24, 0x13	; 19
     a22:	8f 30       	cpi	r24, 0x0F	; 15
     a24:	e9 f7       	brne	.-6      	; 0xa20 <GetKeyPressed+0xde>
     a26:	fe c1       	rjmp	.+1020   	; 0xe24 <GetKeyPressed+0x4e2>
     a28:	ca 01       	movw	r24, r20
     a2a:	01 97       	sbiw	r24, 0x01	; 1
     a2c:	f1 f7       	brne	.-4      	; 0xa2a <GetKeyPressed+0xe8>


					        }
							_delay_us(1000);
					//		              76543210	
								DDRC  = 0b00100000; 
     a2e:	74 bb       	out	0x14, r23	; 20
     a30:	c9 01       	movw	r24, r18
     a32:	01 97       	sbiw	r24, 0x01	; 1
     a34:	f1 f7       	brne	.-4      	; 0xa32 <GetKeyPressed+0xf0>
								_delay_us(50);
					 		switch (PINC<<4)  // Main Menu Switch statement
     a36:	83 b3       	in	r24, 0x13	; 19
     a38:	90 e0       	ldi	r25, 0x00	; 0
     a3a:	b4 e0       	ldi	r27, 0x04	; 4
     a3c:	88 0f       	add	r24, r24
     a3e:	99 1f       	adc	r25, r25
     a40:	ba 95       	dec	r27
     a42:	e1 f7       	brne	.-8      	; 0xa3c <GetKeyPressed+0xfa>
     a44:	80 3b       	cpi	r24, 0xB0	; 176
     a46:	91 05       	cpc	r25, r1
     a48:	a9 f0       	breq	.+42     	; 0xa74 <GetKeyPressed+0x132>
     a4a:	81 3b       	cpi	r24, 0xB1	; 177
     a4c:	91 05       	cpc	r25, r1
     a4e:	24 f4       	brge	.+8      	; 0xa58 <GetKeyPressed+0x116>
     a50:	80 37       	cpi	r24, 0x70	; 112
     a52:	91 05       	cpc	r25, r1
     a54:	b9 f4       	brne	.+46     	; 0xa84 <GetKeyPressed+0x142>
     a56:	12 c0       	rjmp	.+36     	; 0xa7c <GetKeyPressed+0x13a>
     a58:	80 3d       	cpi	r24, 0xD0	; 208
     a5a:	91 05       	cpc	r25, r1
     a5c:	39 f0       	breq	.+14     	; 0xa6c <GetKeyPressed+0x12a>
     a5e:	80 3e       	cpi	r24, 0xE0	; 224
     a60:	91 05       	cpc	r25, r1
     a62:	81 f4       	brne	.+32     	; 0xa84 <GetKeyPressed+0x142>
						    {
								case 224: while((PINC<<4)!= 240)
     a64:	83 b3       	in	r24, 0x13	; 19
     a66:	8f 30       	cpi	r24, 0x0F	; 15
     a68:	e9 f7       	brne	.-6      	; 0xa64 <GetKeyPressed+0x122>
     a6a:	df c1       	rjmp	.+958    	; 0xe2a <GetKeyPressed+0x4e8>
										  {
										  	//USART0_Transmit_Char('C');
										  }
										    return('C');	
								         break;
								case 208: while((PINC<<4)!= 240)
     a6c:	83 b3       	in	r24, 0x13	; 19
     a6e:	8f 30       	cpi	r24, 0x0F	; 15
     a70:	e9 f7       	brne	.-6      	; 0xa6c <GetKeyPressed+0x12a>
     a72:	de c1       	rjmp	.+956    	; 0xe30 <GetKeyPressed+0x4ee>
										  {
										  	//USART0_Transmit_Char('9');
										  }
											return('9');
								         break;
								case 176: while((PINC<<4)!= 240)
     a74:	83 b3       	in	r24, 0x13	; 19
     a76:	8f 30       	cpi	r24, 0x0F	; 15
     a78:	e9 f7       	brne	.-6      	; 0xa74 <GetKeyPressed+0x132>
     a7a:	dd c1       	rjmp	.+954    	; 0xe36 <GetKeyPressed+0x4f4>
										  {
										  	//USART0_Transmit_Char('8');
										  }
											return('8');
								         break;
								case 112:while((PINC<<4)!= 240)
     a7c:	83 b3       	in	r24, 0x13	; 19
     a7e:	8f 30       	cpi	r24, 0x0F	; 15
     a80:	e9 f7       	brne	.-6      	; 0xa7c <GetKeyPressed+0x13a>
     a82:	dc c1       	rjmp	.+952    	; 0xe3c <GetKeyPressed+0x4fa>


					        }
	 
					//		              76543210	
							DDRC  = 0b00010000; 
     a84:	64 bb       	out	0x14, r22	; 20
     a86:	c9 01       	movw	r24, r18
     a88:	01 97       	sbiw	r24, 0x01	; 1
     a8a:	f1 f7       	brne	.-4      	; 0xa88 <GetKeyPressed+0x146>
							_delay_us(50);
					 		switch (PINC<<4)  // Main Menu Switch statement
     a8c:	83 b3       	in	r24, 0x13	; 19
     a8e:	90 e0       	ldi	r25, 0x00	; 0
     a90:	a4 e0       	ldi	r26, 0x04	; 4
     a92:	88 0f       	add	r24, r24
     a94:	99 1f       	adc	r25, r25
     a96:	aa 95       	dec	r26
     a98:	e1 f7       	brne	.-8      	; 0xa92 <GetKeyPressed+0x150>
     a9a:	80 3b       	cpi	r24, 0xB0	; 176
     a9c:	91 05       	cpc	r25, r1
     a9e:	a9 f0       	breq	.+42     	; 0xaca <GetKeyPressed+0x188>
     aa0:	81 3b       	cpi	r24, 0xB1	; 177
     aa2:	91 05       	cpc	r25, r1
     aa4:	24 f4       	brge	.+8      	; 0xaae <GetKeyPressed+0x16c>
     aa6:	80 37       	cpi	r24, 0x70	; 112
     aa8:	91 05       	cpc	r25, r1
     aaa:	f9 f4       	brne	.+62     	; 0xaea <GetKeyPressed+0x1a8>
     aac:	12 c0       	rjmp	.+36     	; 0xad2 <GetKeyPressed+0x190>
     aae:	80 3d       	cpi	r24, 0xD0	; 208
     ab0:	91 05       	cpc	r25, r1
     ab2:	39 f0       	breq	.+14     	; 0xac2 <GetKeyPressed+0x180>
     ab4:	80 3e       	cpi	r24, 0xE0	; 224
     ab6:	91 05       	cpc	r25, r1
     ab8:	c1 f4       	brne	.+48     	; 0xaea <GetKeyPressed+0x1a8>
						    {
								case 224: while((PINC<<4)!= 240)
     aba:	83 b3       	in	r24, 0x13	; 19
     abc:	8f 30       	cpi	r24, 0x0F	; 15
     abe:	e9 f7       	brne	.-6      	; 0xaba <GetKeyPressed+0x178>
     ac0:	c0 c1       	rjmp	.+896    	; 0xe42 <GetKeyPressed+0x500>
										  {
										  	//USART0_Transmit_Char('D');
										  }
										    return('D');	
								         break;
								case 208: while((PINC<<4)!= 240)
     ac2:	83 b3       	in	r24, 0x13	; 19
     ac4:	8f 30       	cpi	r24, 0x0F	; 15
     ac6:	e9 f7       	brne	.-6      	; 0xac2 <GetKeyPressed+0x180>
     ac8:	bf c1       	rjmp	.+894    	; 0xe48 <GetKeyPressed+0x506>
										  {
										  	//USART0_Transmit_Char('#');
										  }
											return('#');
								         break;
								case 176: while((PINC<<4)!= 240)
     aca:	83 b3       	in	r24, 0x13	; 19
     acc:	8f 30       	cpi	r24, 0x0F	; 15
     ace:	e9 f7       	brne	.-6      	; 0xaca <GetKeyPressed+0x188>
     ad0:	be c1       	rjmp	.+892    	; 0xe4e <GetKeyPressed+0x50c>
										  {
										  	//USART0_Transmit_Char('0');
										  }
											return('0');
								         break;
								case 112: while((PINC<<4)!= 240)
     ad2:	83 b3       	in	r24, 0x13	; 19
     ad4:	8f 30       	cpi	r24, 0x0F	; 15
     ad6:	e9 f7       	brne	.-6      	; 0xad2 <GetKeyPressed+0x190>
     ad8:	bd c1       	rjmp	.+890    	; 0xe54 <GetKeyPressed+0x512>
 	switch (PINC<<4)  // Main Menu Switch statement
	    {
			case 224: while((PINC<<4)!= 240)
					  {
					  	//USART0_Transmit_Char('A');
						DDRC  = 0b10000000; 
     ada:	f0 e8       	ldi	r31, 0x80	; 128
     adc:	28 ec       	ldi	r18, 0xC8	; 200
     ade:	30 e0       	ldi	r19, 0x00	; 0
     ae0:	40 ea       	ldi	r20, 0xA0	; 160
     ae2:	5f e0       	ldi	r21, 0x0F	; 15

					        } 
		 
							_delay_us(1000);
					//		              76543210	
								DDRC  = 0b01000000; 
     ae4:	e0 e4       	ldi	r30, 0x40	; 64


					        }
							_delay_us(1000);
					//		              76543210	
								DDRC  = 0b00100000; 
     ae6:	70 e2       	ldi	r23, 0x20	; 32


					        }
	 
					//		              76543210	
							DDRC  = 0b00010000; 
     ae8:	60 e1       	ldi	r22, 0x10	; 16
 //		      76543210	
	DDRC  = 0b10000000; 
	_delay_us(50);
 	switch (PINC<<4)  // Main Menu Switch statement
	    {
			case 224: while((PINC<<4)!= 240)
     aea:	83 b3       	in	r24, 0x13	; 19
     aec:	8f 30       	cpi	r24, 0x0F	; 15
     aee:	09 f0       	breq	.+2      	; 0xaf2 <GetKeyPressed+0x1b0>
     af0:	4c cf       	rjmp	.-360    	; 0x98a <GetKeyPressed+0x48>
			 


					       }
					  }
						KeyPressedStatus = 1;
     af2:	81 e0       	ldi	r24, 0x01	; 1
     af4:	80 93 52 03 	sts	0x0352, r24
     af8:	21 e4       	ldi	r18, 0x41	; 65
     afa:	30 e0       	ldi	r19, 0x00	; 0
     afc:	ad c1       	rjmp	.+858    	; 0xe58 <GetKeyPressed+0x516>
					    return('A');	
			         break;
			case 208: while((PINC<<4)!= 240)
     afe:	83 b3       	in	r24, 0x13	; 19
     b00:	8f 30       	cpi	r24, 0x0F	; 15
     b02:	e9 f7       	brne	.-6      	; 0xafe <GetKeyPressed+0x1bc>
					  {
					  	//USART0_Transmit_Char('3');
					  }
					  KeyPressedStatus = 1;
     b04:	81 e0       	ldi	r24, 0x01	; 1
     b06:	80 93 52 03 	sts	0x0352, r24
     b0a:	7a c1       	rjmp	.+756    	; 0xe00 <GetKeyPressed+0x4be>
						return('3');
			         break;
			case 176: while((PINC<<4)!= 240)
     b0c:	83 b3       	in	r24, 0x13	; 19
     b0e:	8f 30       	cpi	r24, 0x0F	; 15
     b10:	e9 f7       	brne	.-6      	; 0xb0c <GetKeyPressed+0x1ca>
					  {
					  	//USART0_Transmit_Char('2');
					  }
					  KeyPressedStatus = 1;
     b12:	81 e0       	ldi	r24, 0x01	; 1
     b14:	80 93 52 03 	sts	0x0352, r24
     b18:	76 c1       	rjmp	.+748    	; 0xe06 <GetKeyPressed+0x4c4>
						return('2');
			         break;
			case 112: while((PINC<<4)!= 240)
     b1a:	83 b3       	in	r24, 0x13	; 19
     b1c:	8f 30       	cpi	r24, 0x0F	; 15
     b1e:	e9 f7       	brne	.-6      	; 0xb1a <GetKeyPressed+0x1d8>
					  {
					  	//USART0_Transmit_Char('1');
					  }
					  KeyPressedStatus = 1;
     b20:	81 e0       	ldi	r24, 0x01	; 1
     b22:	80 93 52 03 	sts	0x0352, r24
     b26:	72 c1       	rjmp	.+740    	; 0xe0c <GetKeyPressed+0x4ca>
     b28:	80 ea       	ldi	r24, 0xA0	; 160
     b2a:	9f e0       	ldi	r25, 0x0F	; 15
     b2c:	01 97       	sbiw	r24, 0x01	; 1
     b2e:	f1 f7       	brne	.-4      	; 0xb2c <GetKeyPressed+0x1ea>

        } 
		 
		_delay_us(1000);
//		              76543210	
			DDRC  = 0b01000000; 
     b30:	80 e4       	ldi	r24, 0x40	; 64
     b32:	84 bb       	out	0x14, r24	; 20
     b34:	88 ec       	ldi	r24, 0xC8	; 200
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	01 97       	sbiw	r24, 0x01	; 1
     b3a:	f1 f7       	brne	.-4      	; 0xb38 <GetKeyPressed+0x1f6>
			_delay_us(50);
 switch (PINC<<4)  // Main Menu Switch statement
     b3c:	83 b3       	in	r24, 0x13	; 19
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	24 e0       	ldi	r18, 0x04	; 4
     b42:	88 0f       	add	r24, r24
     b44:	99 1f       	adc	r25, r25
     b46:	2a 95       	dec	r18
     b48:	e1 f7       	brne	.-8      	; 0xb42 <GetKeyPressed+0x200>
     b4a:	80 3b       	cpi	r24, 0xB0	; 176
     b4c:	91 05       	cpc	r25, r1
     b4e:	09 f4       	brne	.+2      	; 0xb52 <GetKeyPressed+0x210>
     b50:	d2 c0       	rjmp	.+420    	; 0xcf6 <GetKeyPressed+0x3b4>
     b52:	81 3b       	cpi	r24, 0xB1	; 177
     b54:	91 05       	cpc	r25, r1
     b56:	2c f4       	brge	.+10     	; 0xb62 <GetKeyPressed+0x220>
     b58:	80 37       	cpi	r24, 0x70	; 112
     b5a:	91 05       	cpc	r25, r1
     b5c:	09 f0       	breq	.+2      	; 0xb60 <GetKeyPressed+0x21e>
     b5e:	d9 c0       	rjmp	.+434    	; 0xd12 <GetKeyPressed+0x3d0>
     b60:	d1 c0       	rjmp	.+418    	; 0xd04 <GetKeyPressed+0x3c2>
     b62:	80 3d       	cpi	r24, 0xD0	; 208
     b64:	91 05       	cpc	r25, r1
     b66:	09 f4       	brne	.+2      	; 0xb6a <GetKeyPressed+0x228>
     b68:	bf c0       	rjmp	.+382    	; 0xce8 <GetKeyPressed+0x3a6>
     b6a:	80 3e       	cpi	r24, 0xE0	; 224
     b6c:	91 05       	cpc	r25, r1
     b6e:	09 f0       	breq	.+2      	; 0xb72 <GetKeyPressed+0x230>
     b70:	d0 c0       	rjmp	.+416    	; 0xd12 <GetKeyPressed+0x3d0>
     b72:	a8 c0       	rjmp	.+336    	; 0xcc4 <GetKeyPressed+0x382>
	    {
			case 224: while((PINC<<4)!= 240)
					  {
					  	//USART0_Transmit_Char('B');
						DDRC  = 0b10000000; 
     b74:	f4 bb       	out	0x14, r31	; 20
     b76:	c9 01       	movw	r24, r18
     b78:	01 97       	sbiw	r24, 0x01	; 1
     b7a:	f1 f7       	brne	.-4      	; 0xb78 <GetKeyPressed+0x236>
						_delay_us(50);
					 	switch (PINC<<4)  // Main Menu Switch statement
     b7c:	83 b3       	in	r24, 0x13	; 19
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	b4 e0       	ldi	r27, 0x04	; 4
     b82:	88 0f       	add	r24, r24
     b84:	99 1f       	adc	r25, r25
     b86:	ba 95       	dec	r27
     b88:	e1 f7       	brne	.-8      	; 0xb82 <GetKeyPressed+0x240>
     b8a:	80 3b       	cpi	r24, 0xB0	; 176
     b8c:	91 05       	cpc	r25, r1
     b8e:	a9 f0       	breq	.+42     	; 0xbba <GetKeyPressed+0x278>
     b90:	81 3b       	cpi	r24, 0xB1	; 177
     b92:	91 05       	cpc	r25, r1
     b94:	24 f4       	brge	.+8      	; 0xb9e <GetKeyPressed+0x25c>
     b96:	80 37       	cpi	r24, 0x70	; 112
     b98:	91 05       	cpc	r25, r1
     b9a:	b9 f4       	brne	.+46     	; 0xbca <GetKeyPressed+0x288>
     b9c:	12 c0       	rjmp	.+36     	; 0xbc2 <GetKeyPressed+0x280>
     b9e:	80 3d       	cpi	r24, 0xD0	; 208
     ba0:	91 05       	cpc	r25, r1
     ba2:	39 f0       	breq	.+14     	; 0xbb2 <GetKeyPressed+0x270>
     ba4:	80 3e       	cpi	r24, 0xE0	; 224
     ba6:	91 05       	cpc	r25, r1
     ba8:	81 f4       	brne	.+32     	; 0xbca <GetKeyPressed+0x288>
						    {
								case 224: while((PINC<<4)!= 240)
     baa:	83 b3       	in	r24, 0x13	; 19
     bac:	8f 30       	cpi	r24, 0x0F	; 15
     bae:	e9 f7       	brne	.-6      	; 0xbaa <GetKeyPressed+0x268>
     bb0:	30 c1       	rjmp	.+608    	; 0xe12 <GetKeyPressed+0x4d0>
										  {
										  	//USART0_Transmit_Char('A');
										  }
										    return('P');	
								         break;
								case 208: while((PINC<<4)!= 240)
     bb2:	83 b3       	in	r24, 0x13	; 19
     bb4:	8f 30       	cpi	r24, 0x0F	; 15
     bb6:	e9 f7       	brne	.-6      	; 0xbb2 <GetKeyPressed+0x270>
     bb8:	23 c1       	rjmp	.+582    	; 0xe00 <GetKeyPressed+0x4be>
										  {
										  	//USART0_Transmit_Char('3');
										  }
											return('3');
								         break;
								case 176: while((PINC<<4)!= 240)
     bba:	83 b3       	in	r24, 0x13	; 19
     bbc:	8f 30       	cpi	r24, 0x0F	; 15
     bbe:	e9 f7       	brne	.-6      	; 0xbba <GetKeyPressed+0x278>
     bc0:	22 c1       	rjmp	.+580    	; 0xe06 <GetKeyPressed+0x4c4>
										  {
										  	//USART0_Transmit_Char('2');
										  }
											return('2');
								         break;
								case 112: while((PINC<<4)!= 240)
     bc2:	83 b3       	in	r24, 0x13	; 19
     bc4:	8f 30       	cpi	r24, 0x0F	; 15
     bc6:	e9 f7       	brne	.-6      	; 0xbc2 <GetKeyPressed+0x280>
     bc8:	21 c1       	rjmp	.+578    	; 0xe0c <GetKeyPressed+0x4ca>
     bca:	ca 01       	movw	r24, r20
     bcc:	01 97       	sbiw	r24, 0x01	; 1
     bce:	f1 f7       	brne	.-4      	; 0xbcc <GetKeyPressed+0x28a>

					        } 
		 
							_delay_us(1000);
					//		              76543210	
								DDRC  = 0b01000000; 
     bd0:	e4 bb       	out	0x14, r30	; 20
     bd2:	c9 01       	movw	r24, r18
     bd4:	01 97       	sbiw	r24, 0x01	; 1
     bd6:	f1 f7       	brne	.-4      	; 0xbd4 <GetKeyPressed+0x292>
								_delay_us(50);
					 	switch (PINC<<4)  // Main Menu Switch statement
     bd8:	83 b3       	in	r24, 0x13	; 19
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	a4 e0       	ldi	r26, 0x04	; 4
     bde:	88 0f       	add	r24, r24
     be0:	99 1f       	adc	r25, r25
     be2:	aa 95       	dec	r26
     be4:	e1 f7       	brne	.-8      	; 0xbde <GetKeyPressed+0x29c>
     be6:	80 3b       	cpi	r24, 0xB0	; 176
     be8:	91 05       	cpc	r25, r1
     bea:	59 f0       	breq	.+22     	; 0xc02 <GetKeyPressed+0x2c0>
     bec:	80 3d       	cpi	r24, 0xD0	; 208
     bee:	91 05       	cpc	r25, r1
     bf0:	21 f0       	breq	.+8      	; 0xbfa <GetKeyPressed+0x2b8>
     bf2:	80 37       	cpi	r24, 0x70	; 112
     bf4:	91 05       	cpc	r25, r1
     bf6:	69 f4       	brne	.+26     	; 0xc12 <GetKeyPressed+0x2d0>
     bf8:	08 c0       	rjmp	.+16     	; 0xc0a <GetKeyPressed+0x2c8>
						    {
								 
								         break;					 
								case 208: while((PINC<<4)!= 240)
     bfa:	83 b3       	in	r24, 0x13	; 19
     bfc:	8f 30       	cpi	r24, 0x0F	; 15
     bfe:	e9 f7       	brne	.-6      	; 0xbfa <GetKeyPressed+0x2b8>
     c00:	0b c1       	rjmp	.+534    	; 0xe18 <GetKeyPressed+0x4d6>
										  {
										  	//USART0_Transmit_Char('6');
										  }
											return('6');
								         break;					  
								case 176: while((PINC<<4)!= 240)
     c02:	83 b3       	in	r24, 0x13	; 19
     c04:	8f 30       	cpi	r24, 0x0F	; 15
     c06:	e9 f7       	brne	.-6      	; 0xc02 <GetKeyPressed+0x2c0>
     c08:	0a c1       	rjmp	.+532    	; 0xe1e <GetKeyPressed+0x4dc>
										  {
										  	//USART0_Transmit_Char('5');
										  }
											return('5');
								         break;
								case 112: while((PINC<<4)!= 240)
     c0a:	83 b3       	in	r24, 0x13	; 19
     c0c:	8f 30       	cpi	r24, 0x0F	; 15
     c0e:	e9 f7       	brne	.-6      	; 0xc0a <GetKeyPressed+0x2c8>
     c10:	09 c1       	rjmp	.+530    	; 0xe24 <GetKeyPressed+0x4e2>
     c12:	ca 01       	movw	r24, r20
     c14:	01 97       	sbiw	r24, 0x01	; 1
     c16:	f1 f7       	brne	.-4      	; 0xc14 <GetKeyPressed+0x2d2>


					        }
							_delay_us(1000);
					//		              76543210	
								DDRC  = 0b00100000; 
     c18:	74 bb       	out	0x14, r23	; 20
     c1a:	c9 01       	movw	r24, r18
     c1c:	01 97       	sbiw	r24, 0x01	; 1
     c1e:	f1 f7       	brne	.-4      	; 0xc1c <GetKeyPressed+0x2da>
								_delay_us(50);
					 	switch (PINC<<4)  // Main Menu Switch statement
     c20:	83 b3       	in	r24, 0x13	; 19
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	b4 e0       	ldi	r27, 0x04	; 4
     c26:	88 0f       	add	r24, r24
     c28:	99 1f       	adc	r25, r25
     c2a:	ba 95       	dec	r27
     c2c:	e1 f7       	brne	.-8      	; 0xc26 <GetKeyPressed+0x2e4>
     c2e:	80 3b       	cpi	r24, 0xB0	; 176
     c30:	91 05       	cpc	r25, r1
     c32:	a9 f0       	breq	.+42     	; 0xc5e <GetKeyPressed+0x31c>
     c34:	81 3b       	cpi	r24, 0xB1	; 177
     c36:	91 05       	cpc	r25, r1
     c38:	24 f4       	brge	.+8      	; 0xc42 <GetKeyPressed+0x300>
     c3a:	80 37       	cpi	r24, 0x70	; 112
     c3c:	91 05       	cpc	r25, r1
     c3e:	b9 f4       	brne	.+46     	; 0xc6e <GetKeyPressed+0x32c>
     c40:	12 c0       	rjmp	.+36     	; 0xc66 <GetKeyPressed+0x324>
     c42:	80 3d       	cpi	r24, 0xD0	; 208
     c44:	91 05       	cpc	r25, r1
     c46:	39 f0       	breq	.+14     	; 0xc56 <GetKeyPressed+0x314>
     c48:	80 3e       	cpi	r24, 0xE0	; 224
     c4a:	91 05       	cpc	r25, r1
     c4c:	81 f4       	brne	.+32     	; 0xc6e <GetKeyPressed+0x32c>
						    {
								case 224: while((PINC<<4)!= 240)
     c4e:	83 b3       	in	r24, 0x13	; 19
     c50:	8f 30       	cpi	r24, 0x0F	; 15
     c52:	e9 f7       	brne	.-6      	; 0xc4e <GetKeyPressed+0x30c>
     c54:	ea c0       	rjmp	.+468    	; 0xe2a <GetKeyPressed+0x4e8>
										  {
										  	//USART0_Transmit_Char('C');
										  }
										    return('C');	
								         break;
								case 208: while((PINC<<4)!= 240)
     c56:	83 b3       	in	r24, 0x13	; 19
     c58:	8f 30       	cpi	r24, 0x0F	; 15
     c5a:	e9 f7       	brne	.-6      	; 0xc56 <GetKeyPressed+0x314>
     c5c:	e9 c0       	rjmp	.+466    	; 0xe30 <GetKeyPressed+0x4ee>
										  {
										  	//USART0_Transmit_Char('9');
										  }
											return('9');
								         break;
								case 176: while((PINC<<4)!= 240)
     c5e:	83 b3       	in	r24, 0x13	; 19
     c60:	8f 30       	cpi	r24, 0x0F	; 15
     c62:	e9 f7       	brne	.-6      	; 0xc5e <GetKeyPressed+0x31c>
     c64:	e8 c0       	rjmp	.+464    	; 0xe36 <GetKeyPressed+0x4f4>
										  {
										  	//USART0_Transmit_Char('8');
										  }
											return('8');
								         break;
								case 112:while((PINC<<4)!= 240)
     c66:	83 b3       	in	r24, 0x13	; 19
     c68:	8f 30       	cpi	r24, 0x0F	; 15
     c6a:	e9 f7       	brne	.-6      	; 0xc66 <GetKeyPressed+0x324>
     c6c:	e7 c0       	rjmp	.+462    	; 0xe3c <GetKeyPressed+0x4fa>


					        }
	 
					//		              76543210	
								DDRC  = 0b00010000; 
     c6e:	64 bb       	out	0x14, r22	; 20
     c70:	c9 01       	movw	r24, r18
     c72:	01 97       	sbiw	r24, 0x01	; 1
     c74:	f1 f7       	brne	.-4      	; 0xc72 <GetKeyPressed+0x330>
								_delay_us(50);
					 	switch (PINC<<4)  // Main Menu Switch statement
     c76:	83 b3       	in	r24, 0x13	; 19
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	a4 e0       	ldi	r26, 0x04	; 4
     c7c:	88 0f       	add	r24, r24
     c7e:	99 1f       	adc	r25, r25
     c80:	aa 95       	dec	r26
     c82:	e1 f7       	brne	.-8      	; 0xc7c <GetKeyPressed+0x33a>
     c84:	80 3b       	cpi	r24, 0xB0	; 176
     c86:	91 05       	cpc	r25, r1
     c88:	a9 f0       	breq	.+42     	; 0xcb4 <GetKeyPressed+0x372>
     c8a:	81 3b       	cpi	r24, 0xB1	; 177
     c8c:	91 05       	cpc	r25, r1
     c8e:	24 f4       	brge	.+8      	; 0xc98 <GetKeyPressed+0x356>
     c90:	80 37       	cpi	r24, 0x70	; 112
     c92:	91 05       	cpc	r25, r1
     c94:	f9 f4       	brne	.+62     	; 0xcd4 <GetKeyPressed+0x392>
     c96:	12 c0       	rjmp	.+36     	; 0xcbc <GetKeyPressed+0x37a>
     c98:	80 3d       	cpi	r24, 0xD0	; 208
     c9a:	91 05       	cpc	r25, r1
     c9c:	39 f0       	breq	.+14     	; 0xcac <GetKeyPressed+0x36a>
     c9e:	80 3e       	cpi	r24, 0xE0	; 224
     ca0:	91 05       	cpc	r25, r1
     ca2:	c1 f4       	brne	.+48     	; 0xcd4 <GetKeyPressed+0x392>
						    {
								case 224: while((PINC<<4)!= 240)
     ca4:	83 b3       	in	r24, 0x13	; 19
     ca6:	8f 30       	cpi	r24, 0x0F	; 15
     ca8:	e9 f7       	brne	.-6      	; 0xca4 <GetKeyPressed+0x362>
     caa:	cb c0       	rjmp	.+406    	; 0xe42 <GetKeyPressed+0x500>
										  {
										  	//USART0_Transmit_Char('D');
										  }
										    return('D');	
								         break;
								case 208: while((PINC<<4)!= 240)
     cac:	83 b3       	in	r24, 0x13	; 19
     cae:	8f 30       	cpi	r24, 0x0F	; 15
     cb0:	e9 f7       	brne	.-6      	; 0xcac <GetKeyPressed+0x36a>
     cb2:	ca c0       	rjmp	.+404    	; 0xe48 <GetKeyPressed+0x506>
										  {
										  	//USART0_Transmit_Char('#');
										  }
											return('#');
								         break;
								case 176: while((PINC<<4)!= 240)
     cb4:	83 b3       	in	r24, 0x13	; 19
     cb6:	8f 30       	cpi	r24, 0x0F	; 15
     cb8:	e9 f7       	brne	.-6      	; 0xcb4 <GetKeyPressed+0x372>
     cba:	c9 c0       	rjmp	.+402    	; 0xe4e <GetKeyPressed+0x50c>
										  {
										  	//USART0_Transmit_Char('0');
										  }
											return('0');
								         break;
								case 112: while((PINC<<4)!= 240)
     cbc:	83 b3       	in	r24, 0x13	; 19
     cbe:	8f 30       	cpi	r24, 0x0F	; 15
     cc0:	e9 f7       	brne	.-6      	; 0xcbc <GetKeyPressed+0x37a>
     cc2:	c8 c0       	rjmp	.+400    	; 0xe54 <GetKeyPressed+0x512>
 switch (PINC<<4)  // Main Menu Switch statement
	    {
			case 224: while((PINC<<4)!= 240)
					  {
					  	//USART0_Transmit_Char('B');
						DDRC  = 0b10000000; 
     cc4:	f0 e8       	ldi	r31, 0x80	; 128
     cc6:	28 ec       	ldi	r18, 0xC8	; 200
     cc8:	30 e0       	ldi	r19, 0x00	; 0
     cca:	40 ea       	ldi	r20, 0xA0	; 160
     ccc:	5f e0       	ldi	r21, 0x0F	; 15

					        } 
		 
							_delay_us(1000);
					//		              76543210	
								DDRC  = 0b01000000; 
     cce:	e0 e4       	ldi	r30, 0x40	; 64


					        }
							_delay_us(1000);
					//		              76543210	
								DDRC  = 0b00100000; 
     cd0:	70 e2       	ldi	r23, 0x20	; 32


					        }
	 
					//		              76543210	
								DDRC  = 0b00010000; 
     cd2:	60 e1       	ldi	r22, 0x10	; 16
//		              76543210	
			DDRC  = 0b01000000; 
			_delay_us(50);
 switch (PINC<<4)  // Main Menu Switch statement
	    {
			case 224: while((PINC<<4)!= 240)
     cd4:	83 b3       	in	r24, 0x13	; 19
     cd6:	8f 30       	cpi	r24, 0x0F	; 15
     cd8:	09 f0       	breq	.+2      	; 0xcdc <GetKeyPressed+0x39a>
     cda:	4c cf       	rjmp	.-360    	; 0xb74 <GetKeyPressed+0x232>
			 


					       }
					  }
					  KeyPressedStatus = 1;
     cdc:	81 e0       	ldi	r24, 0x01	; 1
     cde:	80 93 52 03 	sts	0x0352, r24
     ce2:	22 e4       	ldi	r18, 0x42	; 66
     ce4:	30 e0       	ldi	r19, 0x00	; 0
     ce6:	b8 c0       	rjmp	.+368    	; 0xe58 <GetKeyPressed+0x516>
						return('B');
			         break;					 
			case 208: while((PINC<<4)!= 240)
     ce8:	83 b3       	in	r24, 0x13	; 19
     cea:	8f 30       	cpi	r24, 0x0F	; 15
     cec:	e9 f7       	brne	.-6      	; 0xce8 <GetKeyPressed+0x3a6>
					  {
					  	//USART0_Transmit_Char('6');
					  }
					  KeyPressedStatus = 1;
     cee:	81 e0       	ldi	r24, 0x01	; 1
     cf0:	80 93 52 03 	sts	0x0352, r24
     cf4:	91 c0       	rjmp	.+290    	; 0xe18 <GetKeyPressed+0x4d6>
						return('6');
			         break;					  
			case 176: while((PINC<<4)!= 240)
     cf6:	83 b3       	in	r24, 0x13	; 19
     cf8:	8f 30       	cpi	r24, 0x0F	; 15
     cfa:	e9 f7       	brne	.-6      	; 0xcf6 <GetKeyPressed+0x3b4>
					  {
					  	//USART0_Transmit_Char('5');
					  }
					  KeyPressedStatus = 1;
     cfc:	81 e0       	ldi	r24, 0x01	; 1
     cfe:	80 93 52 03 	sts	0x0352, r24
     d02:	8d c0       	rjmp	.+282    	; 0xe1e <GetKeyPressed+0x4dc>
						return('5');
			         break;
			case 112: while((PINC<<4)!= 240)
     d04:	83 b3       	in	r24, 0x13	; 19
     d06:	8f 30       	cpi	r24, 0x0F	; 15
     d08:	e9 f7       	brne	.-6      	; 0xd04 <GetKeyPressed+0x3c2>
					  {
					  	//USART0_Transmit_Char('4');
					  }
					  KeyPressedStatus = 1;
     d0a:	81 e0       	ldi	r24, 0x01	; 1
     d0c:	80 93 52 03 	sts	0x0352, r24
     d10:	89 c0       	rjmp	.+274    	; 0xe24 <GetKeyPressed+0x4e2>
     d12:	80 ea       	ldi	r24, 0xA0	; 160
     d14:	9f e0       	ldi	r25, 0x0F	; 15
     d16:	01 97       	sbiw	r24, 0x01	; 1
     d18:	f1 f7       	brne	.-4      	; 0xd16 <GetKeyPressed+0x3d4>


        }
		_delay_us(1000);
//		              76543210	
			DDRC  = 0b00100000; 
     d1a:	80 e2       	ldi	r24, 0x20	; 32
     d1c:	84 bb       	out	0x14, r24	; 20
     d1e:	88 ec       	ldi	r24, 0xC8	; 200
     d20:	90 e0       	ldi	r25, 0x00	; 0
     d22:	01 97       	sbiw	r24, 0x01	; 1
     d24:	f1 f7       	brne	.-4      	; 0xd22 <GetKeyPressed+0x3e0>
			_delay_us(50);
 switch (PINC<<4)  // Main Menu Switch statement
     d26:	83 b3       	in	r24, 0x13	; 19
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	34 e0       	ldi	r19, 0x04	; 4
     d2c:	88 0f       	add	r24, r24
     d2e:	99 1f       	adc	r25, r25
     d30:	3a 95       	dec	r19
     d32:	e1 f7       	brne	.-8      	; 0xd2c <GetKeyPressed+0x3ea>
     d34:	80 3b       	cpi	r24, 0xB0	; 176
     d36:	91 05       	cpc	r25, r1
     d38:	d9 f0       	breq	.+54     	; 0xd70 <GetKeyPressed+0x42e>
     d3a:	81 3b       	cpi	r24, 0xB1	; 177
     d3c:	91 05       	cpc	r25, r1
     d3e:	24 f4       	brge	.+8      	; 0xd48 <GetKeyPressed+0x406>
     d40:	80 37       	cpi	r24, 0x70	; 112
     d42:	91 05       	cpc	r25, r1
     d44:	19 f5       	brne	.+70     	; 0xd8c <GetKeyPressed+0x44a>
     d46:	1b c0       	rjmp	.+54     	; 0xd7e <GetKeyPressed+0x43c>
     d48:	80 3d       	cpi	r24, 0xD0	; 208
     d4a:	91 05       	cpc	r25, r1
     d4c:	51 f0       	breq	.+20     	; 0xd62 <GetKeyPressed+0x420>
     d4e:	80 3e       	cpi	r24, 0xE0	; 224
     d50:	91 05       	cpc	r25, r1
     d52:	e1 f4       	brne	.+56     	; 0xd8c <GetKeyPressed+0x44a>
	    {
			case 224: while((PINC<<4)!= 240)
     d54:	83 b3       	in	r24, 0x13	; 19
     d56:	8f 30       	cpi	r24, 0x0F	; 15
     d58:	e9 f7       	brne	.-6      	; 0xd54 <GetKeyPressed+0x412>
					  {
					  	//USART0_Transmit_Char('C');
					  }
					  KeyPressedStatus = 1;
     d5a:	81 e0       	ldi	r24, 0x01	; 1
     d5c:	80 93 52 03 	sts	0x0352, r24
     d60:	64 c0       	rjmp	.+200    	; 0xe2a <GetKeyPressed+0x4e8>
					    return('C');	
			         break;
			case 208: while((PINC<<4)!= 240)
     d62:	83 b3       	in	r24, 0x13	; 19
     d64:	8f 30       	cpi	r24, 0x0F	; 15
     d66:	e9 f7       	brne	.-6      	; 0xd62 <GetKeyPressed+0x420>
					  {
					  	//USART0_Transmit_Char('9');
					  }
					  KeyPressedStatus = 1;
     d68:	81 e0       	ldi	r24, 0x01	; 1
     d6a:	80 93 52 03 	sts	0x0352, r24
     d6e:	60 c0       	rjmp	.+192    	; 0xe30 <GetKeyPressed+0x4ee>
						return('9');
			         break;
			case 176: while((PINC<<4)!= 240)
     d70:	83 b3       	in	r24, 0x13	; 19
     d72:	8f 30       	cpi	r24, 0x0F	; 15
     d74:	e9 f7       	brne	.-6      	; 0xd70 <GetKeyPressed+0x42e>
					  {
					  	//USART0_Transmit_Char('8');
					  }
					  KeyPressedStatus = 1;
     d76:	81 e0       	ldi	r24, 0x01	; 1
     d78:	80 93 52 03 	sts	0x0352, r24
     d7c:	5c c0       	rjmp	.+184    	; 0xe36 <GetKeyPressed+0x4f4>
						return('8');
			         break;
			case 112:while((PINC<<4)!= 240)
     d7e:	83 b3       	in	r24, 0x13	; 19
     d80:	8f 30       	cpi	r24, 0x0F	; 15
     d82:	e9 f7       	brne	.-6      	; 0xd7e <GetKeyPressed+0x43c>
					  {
					  	//USART0_Transmit_Char('7');
					  }
					  KeyPressedStatus = 1;
     d84:	81 e0       	ldi	r24, 0x01	; 1
     d86:	80 93 52 03 	sts	0x0352, r24
     d8a:	58 c0       	rjmp	.+176    	; 0xe3c <GetKeyPressed+0x4fa>


        }
	 
//		              76543210	
			DDRC  = 0b00010000; 
     d8c:	80 e1       	ldi	r24, 0x10	; 16
     d8e:	84 bb       	out	0x14, r24	; 20
     d90:	88 ec       	ldi	r24, 0xC8	; 200
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	01 97       	sbiw	r24, 0x01	; 1
     d96:	f1 f7       	brne	.-4      	; 0xd94 <GetKeyPressed+0x452>
			_delay_us(50);
 switch (PINC<<4)  // Main Menu Switch statement
     d98:	83 b3       	in	r24, 0x13	; 19
     d9a:	90 e0       	ldi	r25, 0x00	; 0
     d9c:	24 e0       	ldi	r18, 0x04	; 4
     d9e:	88 0f       	add	r24, r24
     da0:	99 1f       	adc	r25, r25
     da2:	2a 95       	dec	r18
     da4:	e1 f7       	brne	.-8      	; 0xd9e <GetKeyPressed+0x45c>
     da6:	80 3b       	cpi	r24, 0xB0	; 176
     da8:	91 05       	cpc	r25, r1
     daa:	d9 f0       	breq	.+54     	; 0xde2 <GetKeyPressed+0x4a0>
     dac:	81 3b       	cpi	r24, 0xB1	; 177
     dae:	91 05       	cpc	r25, r1
     db0:	24 f4       	brge	.+8      	; 0xdba <GetKeyPressed+0x478>
     db2:	80 37       	cpi	r24, 0x70	; 112
     db4:	91 05       	cpc	r25, r1
     db6:	19 f5       	brne	.+70     	; 0xdfe <GetKeyPressed+0x4bc>
     db8:	1b c0       	rjmp	.+54     	; 0xdf0 <GetKeyPressed+0x4ae>
     dba:	80 3d       	cpi	r24, 0xD0	; 208
     dbc:	91 05       	cpc	r25, r1
     dbe:	51 f0       	breq	.+20     	; 0xdd4 <GetKeyPressed+0x492>
     dc0:	80 3e       	cpi	r24, 0xE0	; 224
     dc2:	91 05       	cpc	r25, r1
     dc4:	e1 f4       	brne	.+56     	; 0xdfe <GetKeyPressed+0x4bc>
	    {
			case 224: while((PINC<<4)!= 240)
     dc6:	83 b3       	in	r24, 0x13	; 19
     dc8:	8f 30       	cpi	r24, 0x0F	; 15
     dca:	e9 f7       	brne	.-6      	; 0xdc6 <GetKeyPressed+0x484>
					  {
					  	//USART0_Transmit_Char('D');
					  }
					  KeyPressedStatus = 1;
     dcc:	81 e0       	ldi	r24, 0x01	; 1
     dce:	80 93 52 03 	sts	0x0352, r24
     dd2:	37 c0       	rjmp	.+110    	; 0xe42 <GetKeyPressed+0x500>
					    return('D');	
			         break;
			case 208: while((PINC<<4)!= 240)
     dd4:	83 b3       	in	r24, 0x13	; 19
     dd6:	8f 30       	cpi	r24, 0x0F	; 15
     dd8:	e9 f7       	brne	.-6      	; 0xdd4 <GetKeyPressed+0x492>
					  {
					  	//USART0_Transmit_Char('#');
					  }
					  KeyPressedStatus = 1;
     dda:	81 e0       	ldi	r24, 0x01	; 1
     ddc:	80 93 52 03 	sts	0x0352, r24
     de0:	33 c0       	rjmp	.+102    	; 0xe48 <GetKeyPressed+0x506>
						return('#');
			         break;
			case 176: while((PINC<<4)!= 240)
     de2:	83 b3       	in	r24, 0x13	; 19
     de4:	8f 30       	cpi	r24, 0x0F	; 15
     de6:	e9 f7       	brne	.-6      	; 0xde2 <GetKeyPressed+0x4a0>
					  {
					  	//USART0_Transmit_Char('0');
					  }
					  KeyPressedStatus = 1;
     de8:	81 e0       	ldi	r24, 0x01	; 1
     dea:	80 93 52 03 	sts	0x0352, r24
     dee:	2f c0       	rjmp	.+94     	; 0xe4e <GetKeyPressed+0x50c>
						return('0');
			         break;
			case 112: while((PINC<<4)!= 240)
     df0:	83 b3       	in	r24, 0x13	; 19
     df2:	8f 30       	cpi	r24, 0x0F	; 15
     df4:	e9 f7       	brne	.-6      	; 0xdf0 <GetKeyPressed+0x4ae>
					  {
					  	//USART0_Transmit_Char('*');
					  }
					  KeyPressedStatus = 1;
     df6:	81 e0       	ldi	r24, 0x01	; 1
     df8:	80 93 52 03 	sts	0x0352, r24
     dfc:	2b c0       	rjmp	.+86     	; 0xe54 <GetKeyPressed+0x512>
     dfe:	08 95       	ret

       }
//	sprintf(buf,"%d", (PINC<<4));
//	USART0_Transmit_String(buf);
//	USART0_Transmit_Char(13);  
}
     e00:	23 e3       	ldi	r18, 0x33	; 51
     e02:	30 e0       	ldi	r19, 0x00	; 0
     e04:	29 c0       	rjmp	.+82     	; 0xe58 <GetKeyPressed+0x516>
     e06:	22 e3       	ldi	r18, 0x32	; 50
     e08:	30 e0       	ldi	r19, 0x00	; 0
     e0a:	26 c0       	rjmp	.+76     	; 0xe58 <GetKeyPressed+0x516>
     e0c:	21 e3       	ldi	r18, 0x31	; 49
     e0e:	30 e0       	ldi	r19, 0x00	; 0
     e10:	23 c0       	rjmp	.+70     	; 0xe58 <GetKeyPressed+0x516>
     e12:	20 e5       	ldi	r18, 0x50	; 80
     e14:	30 e0       	ldi	r19, 0x00	; 0
     e16:	20 c0       	rjmp	.+64     	; 0xe58 <GetKeyPressed+0x516>
     e18:	26 e3       	ldi	r18, 0x36	; 54
     e1a:	30 e0       	ldi	r19, 0x00	; 0
     e1c:	1d c0       	rjmp	.+58     	; 0xe58 <GetKeyPressed+0x516>
     e1e:	25 e3       	ldi	r18, 0x35	; 53
     e20:	30 e0       	ldi	r19, 0x00	; 0
     e22:	1a c0       	rjmp	.+52     	; 0xe58 <GetKeyPressed+0x516>
     e24:	24 e3       	ldi	r18, 0x34	; 52
     e26:	30 e0       	ldi	r19, 0x00	; 0
     e28:	17 c0       	rjmp	.+46     	; 0xe58 <GetKeyPressed+0x516>
     e2a:	23 e4       	ldi	r18, 0x43	; 67
     e2c:	30 e0       	ldi	r19, 0x00	; 0
     e2e:	14 c0       	rjmp	.+40     	; 0xe58 <GetKeyPressed+0x516>
     e30:	29 e3       	ldi	r18, 0x39	; 57
     e32:	30 e0       	ldi	r19, 0x00	; 0
     e34:	11 c0       	rjmp	.+34     	; 0xe58 <GetKeyPressed+0x516>
     e36:	28 e3       	ldi	r18, 0x38	; 56
     e38:	30 e0       	ldi	r19, 0x00	; 0
     e3a:	0e c0       	rjmp	.+28     	; 0xe58 <GetKeyPressed+0x516>
     e3c:	27 e3       	ldi	r18, 0x37	; 55
     e3e:	30 e0       	ldi	r19, 0x00	; 0
     e40:	0b c0       	rjmp	.+22     	; 0xe58 <GetKeyPressed+0x516>
     e42:	24 e4       	ldi	r18, 0x44	; 68
     e44:	30 e0       	ldi	r19, 0x00	; 0
     e46:	08 c0       	rjmp	.+16     	; 0xe58 <GetKeyPressed+0x516>
     e48:	23 e2       	ldi	r18, 0x23	; 35
     e4a:	30 e0       	ldi	r19, 0x00	; 0
     e4c:	05 c0       	rjmp	.+10     	; 0xe58 <GetKeyPressed+0x516>
     e4e:	20 e3       	ldi	r18, 0x30	; 48
     e50:	30 e0       	ldi	r19, 0x00	; 0
     e52:	02 c0       	rjmp	.+4      	; 0xe58 <GetKeyPressed+0x516>
     e54:	2a e2       	ldi	r18, 0x2A	; 42
     e56:	30 e0       	ldi	r19, 0x00	; 0
     e58:	c9 01       	movw	r24, r18
     e5a:	08 95       	ret

00000e5c <Home>:
     e5c:	80 e4       	ldi	r24, 0x40	; 64
     e5e:	9c e9       	ldi	r25, 0x9C	; 156
     e60:	01 97       	sbiw	r24, 0x01	; 1
     e62:	f1 f7       	brne	.-4      	; 0xe60 <Home+0x4>

void Home(void)
{
 
		_delay_ms(10);
        lcd_clrscr();
     e64:	0e 94 25 04 	call	0x84a	; 0x84a <lcd_clrscr>
		lcd_gotoxy(0,0);
     e68:	80 e0       	ldi	r24, 0x00	; 0
     e6a:	60 e0       	ldi	r22, 0x00	; 0
     e6c:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
		lcd_puts("BELT WEIGHING SYSTEM");
     e70:	80 e0       	ldi	r24, 0x00	; 0
     e72:	91 e0       	ldi	r25, 0x01	; 1
     e74:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
		lcd_gotoxy(0,1);
     e78:	80 e0       	ldi	r24, 0x00	; 0
     e7a:	61 e0       	ldi	r22, 0x01	; 1
     e7c:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
		lcd_puts(" ESSAE DIGITRONICS");
     e80:	85 e1       	ldi	r24, 0x15	; 21
     e82:	91 e0       	ldi	r25, 0x01	; 1
     e84:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
		lcd_gotoxy(0,2);
     e88:	80 e0       	ldi	r24, 0x00	; 0
     e8a:	62 e0       	ldi	r22, 0x02	; 2
     e8c:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
		lcd_puts("             V1.00 ");
     e90:	88 e2       	ldi	r24, 0x28	; 40
     e92:	91 e0       	ldi	r25, 0x01	; 1
     e94:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
		lcd_gotoxy(0,3);
     e98:	80 e0       	ldi	r24, 0x00	; 0
     e9a:	63 e0       	ldi	r22, 0x03	; 3
     e9c:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
		lcd_puts("   ....booting....");
     ea0:	8c e3       	ldi	r24, 0x3C	; 60
     ea2:	91 e0       	ldi	r25, 0x01	; 1
     ea4:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
	//	_delay_ms(2500);
}
     ea8:	08 95       	ret

00000eaa <Process_Data_Page>:
			lcd_clrscr();		

}

void Process_Data_Page(void)
{
     eaa:	2f 92       	push	r2
     eac:	3f 92       	push	r3
     eae:	4f 92       	push	r4
     eb0:	5f 92       	push	r5
     eb2:	6f 92       	push	r6
     eb4:	7f 92       	push	r7
     eb6:	8f 92       	push	r8
     eb8:	9f 92       	push	r9
     eba:	af 92       	push	r10
     ebc:	bf 92       	push	r11
     ebe:	cf 92       	push	r12
     ec0:	df 92       	push	r13
     ec2:	ef 92       	push	r14
     ec4:	ff 92       	push	r15
     ec6:	0f 93       	push	r16
     ec8:	1f 93       	push	r17
     eca:	df 93       	push	r29
     ecc:	cf 93       	push	r28
     ece:	cd b7       	in	r28, 0x3d	; 61
     ed0:	de b7       	in	r29, 0x3e	; 62
     ed2:	c3 54       	subi	r28, 0x43	; 67
     ed4:	d0 40       	sbci	r29, 0x00	; 0
     ed6:	0f b6       	in	r0, 0x3f	; 63
     ed8:	f8 94       	cli
     eda:	de bf       	out	0x3e, r29	; 62
     edc:	0f be       	out	0x3f, r0	; 63
     ede:	cd bf       	out	0x3d, r28	; 61

unsigned char ProcessDataPageCursor = 1;
unsigned char ProcessDataLineCursor = 1;	 
unsigned char ProcessDataPage1_Print_Falg = 0,ProcessDataPage2_Print_Falg = 0;

			W_Span = eeprom_read_float(&Epromadress_W_Span);
     ee0:	80 e0       	ldi	r24, 0x00	; 0
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	0e 94 49 4a 	call	0x9492	; 0x9492 <__eerd_dword_m128>
     ee8:	60 93 9b 02 	sts	0x029B, r22
     eec:	70 93 9c 02 	sts	0x029C, r23
     ef0:	80 93 9d 02 	sts	0x029D, r24
     ef4:	90 93 9e 02 	sts	0x029E, r25
			L_Offset = eeprom_read_float(&Epromadress_L_Offset);
     ef8:	8f e9       	ldi	r24, 0x9F	; 159
     efa:	92 e0       	ldi	r25, 0x02	; 2
     efc:	0e 94 49 4a 	call	0x9492	; 0x9492 <__eerd_dword_m128>
     f00:	60 93 8f 02 	sts	0x028F, r22
     f04:	70 93 90 02 	sts	0x0290, r23
     f08:	80 93 91 02 	sts	0x0291, r24
     f0c:	90 93 92 02 	sts	0x0292, r25
			U_Load = eeprom_read_float(&Epromadress_U_Load);
     f10:	86 e4       	ldi	r24, 0x46	; 70
     f12:	93 e0       	ldi	r25, 0x03	; 3
     f14:	0e 94 49 4a 	call	0x9492	; 0x9492 <__eerd_dword_m128>
     f18:	60 93 b9 02 	sts	0x02B9, r22
     f1c:	70 93 ba 02 	sts	0x02BA, r23
     f20:	80 93 bb 02 	sts	0x02BB, r24
     f24:	90 93 bc 02 	sts	0x02BC, r25
			O_Load = eeprom_read_float(&Epromadress_O_Load);
     f28:	8a e8       	ldi	r24, 0x8A	; 138
     f2a:	92 e0       	ldi	r25, 0x02	; 2
     f2c:	0e 94 49 4a 	call	0x9492	; 0x9492 <__eerd_dword_m128>
     f30:	60 93 ad 02 	sts	0x02AD, r22
     f34:	70 93 ae 02 	sts	0x02AE, r23
     f38:	80 93 af 02 	sts	0x02AF, r24
     f3c:	90 93 b0 02 	sts	0x02B0, r25
			C_Factor = eeprom_read_float(&Epromadress_C_Factor);
     f40:	8d eb       	ldi	r24, 0xBD	; 189
     f42:	92 e0       	ldi	r25, 0x02	; 2
     f44:	0e 94 49 4a 	call	0x9492	; 0x9492 <__eerd_dword_m128>
     f48:	60 93 ea 02 	sts	0x02EA, r22
     f4c:	70 93 eb 02 	sts	0x02EB, r23
     f50:	80 93 ec 02 	sts	0x02EC, r24
     f54:	90 93 ed 02 	sts	0x02ED, r25
			Speed = eeprom_read_float(&Epromadress_Speed);
     f58:	83 e5       	ldi	r24, 0x53	; 83
     f5a:	93 e0       	ldi	r25, 0x03	; 3
     f5c:	0e 94 49 4a 	call	0x9492	; 0x9492 <__eerd_dword_m128>
     f60:	60 93 7e 02 	sts	0x027E, r22
     f64:	70 93 7f 02 	sts	0x027F, r23
     f68:	80 93 80 02 	sts	0x0280, r24
     f6c:	90 93 81 02 	sts	0x0281, r25

 			lcd_clrscr();
     f70:	0e 94 25 04 	call	0x84a	; 0x84a <lcd_clrscr>
			lcd_gotoxy(0,0);
     f74:	80 e0       	ldi	r24, 0x00	; 0
     f76:	60 e0       	ldi	r22, 0x00	; 0
     f78:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			lcd_puts("PROCESS DATA....");
     f7c:	8f e4       	ldi	r24, 0x4F	; 79
     f7e:	91 e0       	ldi	r25, 0x01	; 1
     f80:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
			lcd_gotoxy(0,1);
     f84:	80 e0       	ldi	r24, 0x00	; 0
     f86:	61 e0       	ldi	r22, 0x01	; 1
     f88:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			lcd_puts("W Span");
     f8c:	80 e6       	ldi	r24, 0x60	; 96
     f8e:	91 e0       	ldi	r25, 0x01	; 1
     f90:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
			lcd_gotoxy(0,2);
     f94:	80 e0       	ldi	r24, 0x00	; 0
     f96:	62 e0       	ldi	r22, 0x02	; 2
     f98:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			lcd_puts("L Ofst");
     f9c:	87 e6       	ldi	r24, 0x67	; 103
     f9e:	91 e0       	ldi	r25, 0x01	; 1
     fa0:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
			lcd_gotoxy(0,3);
     fa4:	80 e0       	ldi	r24, 0x00	; 0
     fa6:	63 e0       	ldi	r22, 0x03	; 3
     fa8:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			lcd_puts("U Load");
     fac:	8e e6       	ldi	r24, 0x6E	; 110
     fae:	91 e0       	ldi	r25, 0x01	; 1
     fb0:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
			lcd_gotoxy(8,1);
     fb4:	88 e0       	ldi	r24, 0x08	; 8
     fb6:	61 e0       	ldi	r22, 0x01	; 1
     fb8:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			sprintf(W_Span_Buf,"%07.3f", W_Span);
     fbc:	40 91 9b 02 	lds	r20, 0x029B
     fc0:	50 91 9c 02 	lds	r21, 0x029C
     fc4:	60 91 9d 02 	lds	r22, 0x029D
     fc8:	70 91 9e 02 	lds	r23, 0x029E
     fcc:	2d b7       	in	r18, 0x3d	; 61
     fce:	3e b7       	in	r19, 0x3e	; 62
     fd0:	28 50       	subi	r18, 0x08	; 8
     fd2:	30 40       	sbci	r19, 0x00	; 0
     fd4:	0f b6       	in	r0, 0x3f	; 63
     fd6:	f8 94       	cli
     fd8:	3e bf       	out	0x3e, r19	; 62
     fda:	0f be       	out	0x3f, r0	; 63
     fdc:	2d bf       	out	0x3d, r18	; 61
     fde:	ed b7       	in	r30, 0x3d	; 61
     fe0:	fe b7       	in	r31, 0x3e	; 62
     fe2:	31 96       	adiw	r30, 0x01	; 1
     fe4:	5e 01       	movw	r10, r28
     fe6:	08 94       	sec
     fe8:	a1 1c       	adc	r10, r1
     fea:	b1 1c       	adc	r11, r1
     fec:	ad b7       	in	r26, 0x3d	; 61
     fee:	be b7       	in	r27, 0x3e	; 62
     ff0:	12 96       	adiw	r26, 0x02	; 2
     ff2:	bc 92       	st	X, r11
     ff4:	ae 92       	st	-X, r10
     ff6:	11 97       	sbiw	r26, 0x01	; 1
     ff8:	b5 e7       	ldi	r27, 0x75	; 117
     ffa:	eb 2e       	mov	r14, r27
     ffc:	b1 e0       	ldi	r27, 0x01	; 1
     ffe:	fb 2e       	mov	r15, r27
    1000:	f3 82       	std	Z+3, r15	; 0x03
    1002:	e2 82       	std	Z+2, r14	; 0x02
    1004:	44 83       	std	Z+4, r20	; 0x04
    1006:	55 83       	std	Z+5, r21	; 0x05
    1008:	66 83       	std	Z+6, r22	; 0x06
    100a:	77 83       	std	Z+7, r23	; 0x07
    100c:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
			lcd_puts(W_Span_Buf);
    1010:	2d b7       	in	r18, 0x3d	; 61
    1012:	3e b7       	in	r19, 0x3e	; 62
    1014:	28 5f       	subi	r18, 0xF8	; 248
    1016:	3f 4f       	sbci	r19, 0xFF	; 255
    1018:	0f b6       	in	r0, 0x3f	; 63
    101a:	f8 94       	cli
    101c:	3e bf       	out	0x3e, r19	; 62
    101e:	0f be       	out	0x3f, r0	; 63
    1020:	2d bf       	out	0x3d, r18	; 61
    1022:	c5 01       	movw	r24, r10
    1024:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
			lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    1028:	8f e0       	ldi	r24, 0x0F	; 15
    102a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
			lcd_gotoxy(8,2);
    102e:	88 e0       	ldi	r24, 0x08	; 8
    1030:	62 e0       	ldi	r22, 0x02	; 2
    1032:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			sprintf(L_Offset_Buf,"%07.3f", L_Offset);
    1036:	40 91 8f 02 	lds	r20, 0x028F
    103a:	50 91 90 02 	lds	r21, 0x0290
    103e:	60 91 91 02 	lds	r22, 0x0291
    1042:	70 91 92 02 	lds	r23, 0x0292
    1046:	8d b7       	in	r24, 0x3d	; 61
    1048:	9e b7       	in	r25, 0x3e	; 62
    104a:	08 97       	sbiw	r24, 0x08	; 8
    104c:	0f b6       	in	r0, 0x3f	; 63
    104e:	f8 94       	cli
    1050:	9e bf       	out	0x3e, r25	; 62
    1052:	0f be       	out	0x3f, r0	; 63
    1054:	8d bf       	out	0x3d, r24	; 61
    1056:	ed b7       	in	r30, 0x3d	; 61
    1058:	fe b7       	in	r31, 0x3e	; 62
    105a:	31 96       	adiw	r30, 0x01	; 1
    105c:	ab e0       	ldi	r26, 0x0B	; 11
    105e:	ca 2e       	mov	r12, r26
    1060:	d1 2c       	mov	r13, r1
    1062:	cc 0e       	add	r12, r28
    1064:	dd 1e       	adc	r13, r29
    1066:	ad b7       	in	r26, 0x3d	; 61
    1068:	be b7       	in	r27, 0x3e	; 62
    106a:	12 96       	adiw	r26, 0x02	; 2
    106c:	dc 92       	st	X, r13
    106e:	ce 92       	st	-X, r12
    1070:	11 97       	sbiw	r26, 0x01	; 1
    1072:	f3 82       	std	Z+3, r15	; 0x03
    1074:	e2 82       	std	Z+2, r14	; 0x02
    1076:	44 83       	std	Z+4, r20	; 0x04
    1078:	55 83       	std	Z+5, r21	; 0x05
    107a:	66 83       	std	Z+6, r22	; 0x06
    107c:	77 83       	std	Z+7, r23	; 0x07
    107e:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
			lcd_puts(L_Offset_Buf);
    1082:	2d b7       	in	r18, 0x3d	; 61
    1084:	3e b7       	in	r19, 0x3e	; 62
    1086:	28 5f       	subi	r18, 0xF8	; 248
    1088:	3f 4f       	sbci	r19, 0xFF	; 255
    108a:	0f b6       	in	r0, 0x3f	; 63
    108c:	f8 94       	cli
    108e:	3e bf       	out	0x3e, r19	; 62
    1090:	0f be       	out	0x3f, r0	; 63
    1092:	2d bf       	out	0x3d, r18	; 61
    1094:	c6 01       	movw	r24, r12
    1096:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
			lcd_gotoxy(8,3);
    109a:	88 e0       	ldi	r24, 0x08	; 8
    109c:	63 e0       	ldi	r22, 0x03	; 3
    109e:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			sprintf(U_Load_Buf,"%07.3f", U_Load);
    10a2:	40 91 b9 02 	lds	r20, 0x02B9
    10a6:	50 91 ba 02 	lds	r21, 0x02BA
    10aa:	60 91 bb 02 	lds	r22, 0x02BB
    10ae:	70 91 bc 02 	lds	r23, 0x02BC
    10b2:	8d b7       	in	r24, 0x3d	; 61
    10b4:	9e b7       	in	r25, 0x3e	; 62
    10b6:	08 97       	sbiw	r24, 0x08	; 8
    10b8:	0f b6       	in	r0, 0x3f	; 63
    10ba:	f8 94       	cli
    10bc:	9e bf       	out	0x3e, r25	; 62
    10be:	0f be       	out	0x3f, r0	; 63
    10c0:	8d bf       	out	0x3d, r24	; 61
    10c2:	ed b7       	in	r30, 0x3d	; 61
    10c4:	fe b7       	in	r31, 0x3e	; 62
    10c6:	31 96       	adiw	r30, 0x01	; 1
    10c8:	25 e1       	ldi	r18, 0x15	; 21
    10ca:	30 e0       	ldi	r19, 0x00	; 0
    10cc:	2c 0f       	add	r18, r28
    10ce:	3d 1f       	adc	r19, r29
    10d0:	ad b7       	in	r26, 0x3d	; 61
    10d2:	be b7       	in	r27, 0x3e	; 62
    10d4:	12 96       	adiw	r26, 0x02	; 2
    10d6:	3c 93       	st	X, r19
    10d8:	2e 93       	st	-X, r18
    10da:	11 97       	sbiw	r26, 0x01	; 1
    10dc:	f3 82       	std	Z+3, r15	; 0x03
    10de:	e2 82       	std	Z+2, r14	; 0x02
    10e0:	44 83       	std	Z+4, r20	; 0x04
    10e2:	55 83       	std	Z+5, r21	; 0x05
    10e4:	66 83       	std	Z+6, r22	; 0x06
    10e6:	77 83       	std	Z+7, r23	; 0x07
    10e8:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
			lcd_puts(U_Load_Buf);
    10ec:	8d b7       	in	r24, 0x3d	; 61
    10ee:	9e b7       	in	r25, 0x3e	; 62
    10f0:	08 96       	adiw	r24, 0x08	; 8
    10f2:	0f b6       	in	r0, 0x3f	; 63
    10f4:	f8 94       	cli
    10f6:	9e bf       	out	0x3e, r25	; 62
    10f8:	0f be       	out	0x3f, r0	; 63
    10fa:	8d bf       	out	0x3d, r24	; 61
    10fc:	ce 01       	movw	r24, r28
    10fe:	45 96       	adiw	r24, 0x15	; 21
    1100:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
    1104:	91 e0       	ldi	r25, 0x01	; 1
    1106:	9e af       	std	Y+62, r25	; 0x3e
    1108:	99 24       	eor	r9, r9
    110a:	93 94       	inc	r9
    110c:	00 e0       	ldi	r16, 0x00	; 0
    110e:	1d ae       	std	Y+61, r1	; 0x3d
												         Speed_Buf[4] = '0';
														  
										 				 break;	
										  }	
								         break;
								case 6:  Speed = atof(Speed_Buf);	 
    1110:	73 e3       	ldi	r23, 0x33	; 51
    1112:	67 2e       	mov	r6, r23
    1114:	71 2c       	mov	r7, r1
    1116:	6c 0e       	add	r6, r28
    1118:	7d 1e       	adc	r7, r29
												case '3':lcd_command(LCD_DISP_ON);
														 Speed_Buf[5] = '3';
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
												         Speed_Buf[5] = '4';
    111a:	64 e3       	ldi	r22, 0x34	; 52
    111c:	86 2e       	mov	r8, r22
												         C_Factor_Buf[4] = '0';
														  
										 				 break;	
										  }	
								         break;
								case 6:  C_Factor = atof(C_Factor_Buf);	 
    111e:	59 e2       	ldi	r21, 0x29	; 41
    1120:	45 2e       	mov	r4, r21
    1122:	51 2c       	mov	r5, r1
    1124:	4c 0e       	add	r4, r28
    1126:	5d 1e       	adc	r5, r29
												         O_Load_Buf[4] = '0';
														  
										 				 break;	
										  }	
								         break;
								case 6:  O_Load = atof(O_Load_Buf);	 
    1128:	4f e1       	ldi	r20, 0x1F	; 31
    112a:	24 2e       	mov	r2, r20
    112c:	31 2c       	mov	r3, r1
    112e:	2c 0e       	add	r2, r28
    1130:	3d 1e       	adc	r3, r29
												         U_Load_Buf[4] = '0';
														  
										 				 break;	
										  }	
								         break;
								case 6:  U_Load = atof(U_Load_Buf);	 
    1132:	de 01       	movw	r26, r28
    1134:	55 96       	adiw	r26, 0x15	; 21
    1136:	24 96       	adiw	r28, 0x04	; 4
    1138:	bf af       	std	Y+63, r27	; 0x3f
    113a:	ae af       	std	Y+62, r26	; 0x3e
    113c:	24 97       	sbiw	r28, 0x04	; 4
    113e:	af af       	std	Y+63, r26	; 0x3f
    1140:	21 96       	adiw	r28, 0x01	; 1
    1142:	bf af       	std	Y+63, r27	; 0x3f
    1144:	21 97       	sbiw	r28, 0x01	; 1
												         L_Offset_Buf[4] = '0';
														  
										 				 break;	
										  }	
								         break;
								case 6:  L_Offset = atof(L_Offset_Buf);	 
    1146:	22 96       	adiw	r28, 0x02	; 2
    1148:	cf ae       	std	Y+63, r12	; 0x3f
    114a:	22 97       	sbiw	r28, 0x02	; 2
    114c:	cd 2c       	mov	r12, r13
												         W_Span_Buf[4] = '0';
														  
										 				 break;	
										  }	
								         break;
								case 6:  W_Span = atof(W_Span_Buf);	 
    114e:	1b 2d       	mov	r17, r11
    1150:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
			lcd_puts(U_Load_Buf);
			
			
			while(key != '*')
			{
			    key = GetKeyPressed();
    1154:	0e 94 a1 04 	call	0x942	; 0x942 <GetKeyPressed>
    1158:	90 93 69 03 	sts	0x0369, r25
    115c:	80 93 68 03 	sts	0x0368, r24
				sprintf(buf,"%d", ProcessDataPageCursor);
    1160:	00 d0       	rcall	.+0      	; 0x1162 <__stack+0x63>
    1162:	00 d0       	rcall	.+0      	; 0x1164 <__stack+0x65>
    1164:	00 d0       	rcall	.+0      	; 0x1166 <__stack+0x67>
    1166:	ed b7       	in	r30, 0x3d	; 61
    1168:	fe b7       	in	r31, 0x3e	; 62
    116a:	31 96       	adiw	r30, 0x01	; 1
    116c:	22 ef       	ldi	r18, 0xF2	; 242
    116e:	32 e0       	ldi	r19, 0x02	; 2
    1170:	ad b7       	in	r26, 0x3d	; 61
    1172:	be b7       	in	r27, 0x3e	; 62
    1174:	12 96       	adiw	r26, 0x02	; 2
    1176:	3c 93       	st	X, r19
    1178:	2e 93       	st	-X, r18
    117a:	11 97       	sbiw	r26, 0x01	; 1
    117c:	8c e7       	ldi	r24, 0x7C	; 124
    117e:	91 e0       	ldi	r25, 0x01	; 1
    1180:	93 83       	std	Z+3, r25	; 0x03
    1182:	82 83       	std	Z+2, r24	; 0x02
    1184:	9e ad       	ldd	r25, Y+62	; 0x3e
    1186:	94 83       	std	Z+4, r25	; 0x04
    1188:	15 82       	std	Z+5, r1	; 0x05
    118a:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
				USART0_Transmit_String(buf);
    118e:	ad b7       	in	r26, 0x3d	; 61
    1190:	be b7       	in	r27, 0x3e	; 62
    1192:	16 96       	adiw	r26, 0x06	; 6
    1194:	0f b6       	in	r0, 0x3f	; 63
    1196:	f8 94       	cli
    1198:	be bf       	out	0x3e, r27	; 62
    119a:	0f be       	out	0x3f, r0	; 63
    119c:	ad bf       	out	0x3d, r26	; 61
    119e:	82 ef       	ldi	r24, 0xF2	; 242
    11a0:	92 e0       	ldi	r25, 0x02	; 2
    11a2:	0e 94 ed 02 	call	0x5da	; 0x5da <USART0_Transmit_String>
				sprintf(buf,"%c", key);
    11a6:	00 d0       	rcall	.+0      	; 0x11a8 <__stack+0xa9>
    11a8:	00 d0       	rcall	.+0      	; 0x11aa <__stack+0xab>
    11aa:	00 d0       	rcall	.+0      	; 0x11ac <__stack+0xad>
    11ac:	ed b7       	in	r30, 0x3d	; 61
    11ae:	fe b7       	in	r31, 0x3e	; 62
    11b0:	31 96       	adiw	r30, 0x01	; 1
    11b2:	22 ef       	ldi	r18, 0xF2	; 242
    11b4:	32 e0       	ldi	r19, 0x02	; 2
    11b6:	ad b7       	in	r26, 0x3d	; 61
    11b8:	be b7       	in	r27, 0x3e	; 62
    11ba:	12 96       	adiw	r26, 0x02	; 2
    11bc:	3c 93       	st	X, r19
    11be:	2e 93       	st	-X, r18
    11c0:	11 97       	sbiw	r26, 0x01	; 1
    11c2:	8f e7       	ldi	r24, 0x7F	; 127
    11c4:	91 e0       	ldi	r25, 0x01	; 1
    11c6:	93 83       	std	Z+3, r25	; 0x03
    11c8:	82 83       	std	Z+2, r24	; 0x02
    11ca:	80 91 68 03 	lds	r24, 0x0368
    11ce:	90 91 69 03 	lds	r25, 0x0369
    11d2:	95 83       	std	Z+5, r25	; 0x05
    11d4:	84 83       	std	Z+4, r24	; 0x04
    11d6:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
				USART0_Transmit_String(buf);
    11da:	ad b7       	in	r26, 0x3d	; 61
    11dc:	be b7       	in	r27, 0x3e	; 62
    11de:	16 96       	adiw	r26, 0x06	; 6
    11e0:	0f b6       	in	r0, 0x3f	; 63
    11e2:	f8 94       	cli
    11e4:	be bf       	out	0x3e, r27	; 62
    11e6:	0f be       	out	0x3f, r0	; 63
    11e8:	ad bf       	out	0x3d, r26	; 61
    11ea:	82 ef       	ldi	r24, 0xF2	; 242
    11ec:	92 e0       	ldi	r25, 0x02	; 2
    11ee:	0e 94 ed 02 	call	0x5da	; 0x5da <USART0_Transmit_String>
				USART0_Transmit_Char(13);
    11f2:	8d e0       	ldi	r24, 0x0D	; 13
    11f4:	0e 94 21 01 	call	0x242	; 0x242 <USART0_Transmit_Char>
				    if(key == 'A')
    11f8:	80 91 68 03 	lds	r24, 0x0368
    11fc:	90 91 69 03 	lds	r25, 0x0369
    1200:	81 34       	cpi	r24, 0x41	; 65
    1202:	91 05       	cpc	r25, r1
    1204:	61 f4       	brne	.+24     	; 0x121e <__stack+0x11f>
    1206:	88 eb       	ldi	r24, 0xB8	; 184
    1208:	9b e0       	ldi	r25, 0x0B	; 11
    120a:	e0 e9       	ldi	r30, 0x90	; 144
    120c:	f1 e0       	ldi	r31, 0x01	; 1
    120e:	31 97       	sbiw	r30, 0x01	; 1
    1210:	f1 f7       	brne	.-4      	; 0x120e <__stack+0x10f>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1212:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1214:	d1 f7       	brne	.-12     	; 0x120a <__stack+0x10b>
					{
					    _delay_ms(300);
						ProcessDataPageCursor--;
    1216:	be ad       	ldd	r27, Y+62	; 0x3e
    1218:	b1 50       	subi	r27, 0x01	; 1
    121a:	be af       	std	Y+62, r27	; 0x3e
    121c:	28 c0       	rjmp	.+80     	; 0x126e <__stack+0x16f>
					}
			 	    if(key == 'B')
    121e:	82 34       	cpi	r24, 0x42	; 66
    1220:	91 05       	cpc	r25, r1
    1222:	61 f4       	brne	.+24     	; 0x123c <__stack+0x13d>
    1224:	88 eb       	ldi	r24, 0xB8	; 184
    1226:	9b e0       	ldi	r25, 0x0B	; 11
    1228:	e0 e9       	ldi	r30, 0x90	; 144
    122a:	f1 e0       	ldi	r31, 0x01	; 1
    122c:	31 97       	sbiw	r30, 0x01	; 1
    122e:	f1 f7       	brne	.-4      	; 0x122c <__stack+0x12d>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1230:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1232:	d1 f7       	brne	.-12     	; 0x1228 <__stack+0x129>
					{
						_delay_ms(300); 
						ProcessDataPageCursor++;
    1234:	2e ad       	ldd	r18, Y+62	; 0x3e
    1236:	2f 5f       	subi	r18, 0xFF	; 255
    1238:	2e af       	std	Y+62, r18	; 0x3e
    123a:	19 c0       	rjmp	.+50     	; 0x126e <__stack+0x16f>
					}
					if(key == 'C')
    123c:	83 34       	cpi	r24, 0x43	; 67
    123e:	91 05       	cpc	r25, r1
    1240:	51 f4       	brne	.+20     	; 0x1256 <__stack+0x157>
    1242:	88 eb       	ldi	r24, 0xB8	; 184
    1244:	9b e0       	ldi	r25, 0x0B	; 11
    1246:	e0 e9       	ldi	r30, 0x90	; 144
    1248:	f1 e0       	ldi	r31, 0x01	; 1
    124a:	31 97       	sbiw	r30, 0x01	; 1
    124c:	f1 f7       	brne	.-4      	; 0x124a <__stack+0x14b>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    124e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1250:	d1 f7       	brne	.-12     	; 0x1246 <__stack+0x147>
					{
					    _delay_ms(300);
						ProcessDataLineCursor--;
    1252:	9a 94       	dec	r9
    1254:	12 c0       	rjmp	.+36     	; 0x127a <__stack+0x17b>
					}
			 	    if(key == 'D')
    1256:	84 34       	cpi	r24, 0x44	; 68
    1258:	91 05       	cpc	r25, r1
    125a:	49 f4       	brne	.+18     	; 0x126e <__stack+0x16f>
    125c:	88 eb       	ldi	r24, 0xB8	; 184
    125e:	9b e0       	ldi	r25, 0x0B	; 11
    1260:	e0 e9       	ldi	r30, 0x90	; 144
    1262:	f1 e0       	ldi	r31, 0x01	; 1
    1264:	31 97       	sbiw	r30, 0x01	; 1
    1266:	f1 f7       	brne	.-4      	; 0x1264 <__stack+0x165>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1268:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    126a:	d1 f7       	brne	.-12     	; 0x1260 <__stack+0x161>
					{
						_delay_ms(300); 
						ProcessDataLineCursor++;
    126c:	93 94       	inc	r9
					}
					if(	ProcessDataPageCursor > 6)
    126e:	3e ad       	ldd	r19, Y+62	; 0x3e
    1270:	37 30       	cpi	r19, 0x07	; 7
    1272:	18 f0       	brcs	.+6      	; 0x127a <__stack+0x17b>
    1274:	86 e0       	ldi	r24, 0x06	; 6
    1276:	8e af       	std	Y+62, r24	; 0x3e
    1278:	05 c0       	rjmp	.+10     	; 0x1284 <__stack+0x185>
					{
						
						ProcessDataPageCursor = 6;
					}
					if(	ProcessDataPageCursor < 1)
    127a:	9e ad       	ldd	r25, Y+62	; 0x3e
    127c:	99 23       	and	r25, r25
    127e:	11 f4       	brne	.+4      	; 0x1284 <__stack+0x185>
    1280:	a1 e0       	ldi	r26, 0x01	; 1
    1282:	ae af       	std	Y+62, r26	; 0x3e
					{
							ProcessDataPageCursor = 1;
					}
					if(	ProcessDataLineCursor > 7)
    1284:	b7 e0       	ldi	r27, 0x07	; 7
    1286:	b9 15       	cp	r27, r9
    1288:	18 f4       	brcc	.+6      	; 0x1290 <__stack+0x191>
    128a:	37 e0       	ldi	r19, 0x07	; 7
    128c:	93 2e       	mov	r9, r19
    128e:	04 c0       	rjmp	.+8      	; 0x1298 <__stack+0x199>
					{
						
						ProcessDataLineCursor = 7;
					}
					if(	ProcessDataLineCursor < 1)
    1290:	99 20       	and	r9, r9
    1292:	11 f4       	brne	.+4      	; 0x1298 <__stack+0x199>
    1294:	99 24       	eor	r9, r9
    1296:	93 94       	inc	r9
					{
							ProcessDataLineCursor = 1;
					}

					if((ProcessDataPageCursor <= 3)&&(ProcessDataPage1_Print_Falg == 0))
    1298:	2e ad       	ldd	r18, Y+62	; 0x3e
    129a:	24 30       	cpi	r18, 0x04	; 4
    129c:	08 f0       	brcs	.+2      	; 0x12a0 <__stack+0x1a1>
    129e:	c9 c0       	rjmp	.+402    	; 0x1432 <__stack+0x333>
    12a0:	00 23       	and	r16, r16
    12a2:	11 f0       	breq	.+4      	; 0x12a8 <__stack+0x1a9>
    12a4:	0c 94 c2 26 	jmp	0x4d84	; 0x4d84 <__stack+0x3c85>
					{
							lcd_clrscr();
    12a8:	0e 94 25 04 	call	0x84a	; 0x84a <lcd_clrscr>
							lcd_gotoxy(0,0);
    12ac:	80 e0       	ldi	r24, 0x00	; 0
    12ae:	60 e0       	ldi	r22, 0x00	; 0
    12b0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("PROCESS DATA....");
    12b4:	8f e4       	ldi	r24, 0x4F	; 79
    12b6:	91 e0       	ldi	r25, 0x01	; 1
    12b8:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(0,1);
    12bc:	80 e0       	ldi	r24, 0x00	; 0
    12be:	61 e0       	ldi	r22, 0x01	; 1
    12c0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("W Span");
    12c4:	80 e6       	ldi	r24, 0x60	; 96
    12c6:	91 e0       	ldi	r25, 0x01	; 1
    12c8:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(0,2);
    12cc:	80 e0       	ldi	r24, 0x00	; 0
    12ce:	62 e0       	ldi	r22, 0x02	; 2
    12d0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("L Ofst");
    12d4:	87 e6       	ldi	r24, 0x67	; 103
    12d6:	91 e0       	ldi	r25, 0x01	; 1
    12d8:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(0,3);
    12dc:	80 e0       	ldi	r24, 0x00	; 0
    12de:	63 e0       	ldi	r22, 0x03	; 3
    12e0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("U Load");
    12e4:	8e e6       	ldi	r24, 0x6E	; 110
    12e6:	91 e0       	ldi	r25, 0x01	; 1
    12e8:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(8,1);
    12ec:	88 e0       	ldi	r24, 0x08	; 8
    12ee:	61 e0       	ldi	r22, 0x01	; 1
    12f0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							sprintf(W_Span_Buf,"%07.3f", W_Span);
    12f4:	40 91 9b 02 	lds	r20, 0x029B
    12f8:	50 91 9c 02 	lds	r21, 0x029C
    12fc:	60 91 9d 02 	lds	r22, 0x029D
    1300:	70 91 9e 02 	lds	r23, 0x029E
    1304:	8d b7       	in	r24, 0x3d	; 61
    1306:	9e b7       	in	r25, 0x3e	; 62
    1308:	08 97       	sbiw	r24, 0x08	; 8
    130a:	0f b6       	in	r0, 0x3f	; 63
    130c:	f8 94       	cli
    130e:	9e bf       	out	0x3e, r25	; 62
    1310:	0f be       	out	0x3f, r0	; 63
    1312:	8d bf       	out	0x3d, r24	; 61
    1314:	ed b7       	in	r30, 0x3d	; 61
    1316:	fe b7       	in	r31, 0x3e	; 62
    1318:	31 96       	adiw	r30, 0x01	; 1
    131a:	ad b7       	in	r26, 0x3d	; 61
    131c:	be b7       	in	r27, 0x3e	; 62
    131e:	11 96       	adiw	r26, 0x01	; 1
    1320:	ac 92       	st	X, r10
    1322:	11 97       	sbiw	r26, 0x01	; 1
    1324:	12 96       	adiw	r26, 0x02	; 2
    1326:	1c 93       	st	X, r17
    1328:	e2 82       	std	Z+2, r14	; 0x02
    132a:	f3 82       	std	Z+3, r15	; 0x03
    132c:	44 83       	std	Z+4, r20	; 0x04
    132e:	55 83       	std	Z+5, r21	; 0x05
    1330:	66 83       	std	Z+6, r22	; 0x06
    1332:	77 83       	std	Z+7, r23	; 0x07
    1334:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
							lcd_puts(W_Span_Buf);
    1338:	2d b7       	in	r18, 0x3d	; 61
    133a:	3e b7       	in	r19, 0x3e	; 62
    133c:	28 5f       	subi	r18, 0xF8	; 248
    133e:	3f 4f       	sbci	r19, 0xFF	; 255
    1340:	0f b6       	in	r0, 0x3f	; 63
    1342:	f8 94       	cli
    1344:	3e bf       	out	0x3e, r19	; 62
    1346:	0f be       	out	0x3f, r0	; 63
    1348:	2d bf       	out	0x3d, r18	; 61
    134a:	8a 2d       	mov	r24, r10
    134c:	91 2f       	mov	r25, r17
    134e:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(8,2);
    1352:	88 e0       	ldi	r24, 0x08	; 8
    1354:	62 e0       	ldi	r22, 0x02	; 2
    1356:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							sprintf(L_Offset_Buf,"%07.3f", L_Offset);
    135a:	40 91 8f 02 	lds	r20, 0x028F
    135e:	50 91 90 02 	lds	r21, 0x0290
    1362:	60 91 91 02 	lds	r22, 0x0291
    1366:	70 91 92 02 	lds	r23, 0x0292
    136a:	8d b7       	in	r24, 0x3d	; 61
    136c:	9e b7       	in	r25, 0x3e	; 62
    136e:	08 97       	sbiw	r24, 0x08	; 8
    1370:	0f b6       	in	r0, 0x3f	; 63
    1372:	f8 94       	cli
    1374:	9e bf       	out	0x3e, r25	; 62
    1376:	0f be       	out	0x3f, r0	; 63
    1378:	8d bf       	out	0x3d, r24	; 61
    137a:	ed b7       	in	r30, 0x3d	; 61
    137c:	fe b7       	in	r31, 0x3e	; 62
    137e:	31 96       	adiw	r30, 0x01	; 1
    1380:	22 96       	adiw	r28, 0x02	; 2
    1382:	2f ad       	ldd	r18, Y+63	; 0x3f
    1384:	22 97       	sbiw	r28, 0x02	; 2
    1386:	ad b7       	in	r26, 0x3d	; 61
    1388:	be b7       	in	r27, 0x3e	; 62
    138a:	11 96       	adiw	r26, 0x01	; 1
    138c:	2c 93       	st	X, r18
    138e:	11 97       	sbiw	r26, 0x01	; 1
    1390:	12 96       	adiw	r26, 0x02	; 2
    1392:	cc 92       	st	X, r12
    1394:	e2 82       	std	Z+2, r14	; 0x02
    1396:	f3 82       	std	Z+3, r15	; 0x03
    1398:	44 83       	std	Z+4, r20	; 0x04
    139a:	55 83       	std	Z+5, r21	; 0x05
    139c:	66 83       	std	Z+6, r22	; 0x06
    139e:	77 83       	std	Z+7, r23	; 0x07
    13a0:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
							lcd_puts(L_Offset_Buf);
    13a4:	8d b7       	in	r24, 0x3d	; 61
    13a6:	9e b7       	in	r25, 0x3e	; 62
    13a8:	08 96       	adiw	r24, 0x08	; 8
    13aa:	0f b6       	in	r0, 0x3f	; 63
    13ac:	f8 94       	cli
    13ae:	9e bf       	out	0x3e, r25	; 62
    13b0:	0f be       	out	0x3f, r0	; 63
    13b2:	8d bf       	out	0x3d, r24	; 61
    13b4:	22 96       	adiw	r28, 0x02	; 2
    13b6:	8f ad       	ldd	r24, Y+63	; 0x3f
    13b8:	22 97       	sbiw	r28, 0x02	; 2
    13ba:	9c 2d       	mov	r25, r12
    13bc:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(8,3);
    13c0:	88 e0       	ldi	r24, 0x08	; 8
    13c2:	63 e0       	ldi	r22, 0x03	; 3
    13c4:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							sprintf(U_Load_Buf,"%07.3f", U_Load);
    13c8:	40 91 b9 02 	lds	r20, 0x02B9
    13cc:	50 91 ba 02 	lds	r21, 0x02BA
    13d0:	60 91 bb 02 	lds	r22, 0x02BB
    13d4:	70 91 bc 02 	lds	r23, 0x02BC
    13d8:	ad b7       	in	r26, 0x3d	; 61
    13da:	be b7       	in	r27, 0x3e	; 62
    13dc:	18 97       	sbiw	r26, 0x08	; 8
    13de:	0f b6       	in	r0, 0x3f	; 63
    13e0:	f8 94       	cli
    13e2:	be bf       	out	0x3e, r27	; 62
    13e4:	0f be       	out	0x3f, r0	; 63
    13e6:	ad bf       	out	0x3d, r26	; 61
    13e8:	ed b7       	in	r30, 0x3d	; 61
    13ea:	fe b7       	in	r31, 0x3e	; 62
    13ec:	31 96       	adiw	r30, 0x01	; 1
    13ee:	2f ad       	ldd	r18, Y+63	; 0x3f
    13f0:	11 96       	adiw	r26, 0x01	; 1
    13f2:	2c 93       	st	X, r18
    13f4:	11 97       	sbiw	r26, 0x01	; 1
    13f6:	21 96       	adiw	r28, 0x01	; 1
    13f8:	3f ad       	ldd	r19, Y+63	; 0x3f
    13fa:	21 97       	sbiw	r28, 0x01	; 1
    13fc:	12 96       	adiw	r26, 0x02	; 2
    13fe:	3c 93       	st	X, r19
    1400:	e2 82       	std	Z+2, r14	; 0x02
    1402:	f3 82       	std	Z+3, r15	; 0x03
    1404:	44 83       	std	Z+4, r20	; 0x04
    1406:	55 83       	std	Z+5, r21	; 0x05
    1408:	66 83       	std	Z+6, r22	; 0x06
    140a:	77 83       	std	Z+7, r23	; 0x07
    140c:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
							lcd_puts(U_Load_Buf);
    1410:	8d b7       	in	r24, 0x3d	; 61
    1412:	9e b7       	in	r25, 0x3e	; 62
    1414:	08 96       	adiw	r24, 0x08	; 8
    1416:	0f b6       	in	r0, 0x3f	; 63
    1418:	f8 94       	cli
    141a:	9e bf       	out	0x3e, r25	; 62
    141c:	0f be       	out	0x3f, r0	; 63
    141e:	8d bf       	out	0x3d, r24	; 61
    1420:	8f ad       	ldd	r24, Y+63	; 0x3f
    1422:	21 96       	adiw	r28, 0x01	; 1
    1424:	9f ad       	ldd	r25, Y+63	; 0x3f
    1426:	21 97       	sbiw	r28, 0x01	; 1
    1428:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
    142c:	1d ae       	std	Y+61, r1	; 0x3d
    142e:	0c 94 c2 26 	jmp	0x4d84	; 0x4d84 <__stack+0x3c85>
							ProcessDataPage1_Print_Falg = 1;
							ProcessDataPage2_Print_Falg = 0;
						 
					}
					//ProcessDataPage2_Print_Falg = 0;
					if((ProcessDataPageCursor >= 4)&&(ProcessDataPage2_Print_Falg == 0))
    1432:	9d ad       	ldd	r25, Y+61	; 0x3d
    1434:	99 23       	and	r25, r25
    1436:	09 f0       	breq	.+2      	; 0x143a <__stack+0x33b>
    1438:	95 c5       	rjmp	.+2858   	; 0x1f64 <__stack+0xe65>
					{
						USART0_Transmit_String("page 2");
    143a:	82 e8       	ldi	r24, 0x82	; 130
    143c:	91 e0       	ldi	r25, 0x01	; 1
    143e:	0e 94 ed 02 	call	0x5da	; 0x5da <USART0_Transmit_String>
							lcd_clrscr();
    1442:	0e 94 25 04 	call	0x84a	; 0x84a <lcd_clrscr>
							lcd_gotoxy(0,0);
    1446:	80 e0       	ldi	r24, 0x00	; 0
    1448:	60 e0       	ldi	r22, 0x00	; 0
    144a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("PROCESS DATA....");
    144e:	8f e4       	ldi	r24, 0x4F	; 79
    1450:	91 e0       	ldi	r25, 0x01	; 1
    1452:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(0,1);
    1456:	80 e0       	ldi	r24, 0x00	; 0
    1458:	61 e0       	ldi	r22, 0x01	; 1
    145a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("O Load");
    145e:	89 e8       	ldi	r24, 0x89	; 137
    1460:	91 e0       	ldi	r25, 0x01	; 1
    1462:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(0,2);
    1466:	80 e0       	ldi	r24, 0x00	; 0
    1468:	62 e0       	ldi	r22, 0x02	; 2
    146a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("C Fact");
    146e:	80 e9       	ldi	r24, 0x90	; 144
    1470:	91 e0       	ldi	r25, 0x01	; 1
    1472:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(0,3);
    1476:	80 e0       	ldi	r24, 0x00	; 0
    1478:	63 e0       	ldi	r22, 0x03	; 3
    147a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("Speed");
    147e:	87 e9       	ldi	r24, 0x97	; 151
    1480:	91 e0       	ldi	r25, 0x01	; 1
    1482:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(8,1);
    1486:	88 e0       	ldi	r24, 0x08	; 8
    1488:	61 e0       	ldi	r22, 0x01	; 1
    148a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							sprintf(O_Load_Buf,"%07.3f", O_Load);
    148e:	40 91 ad 02 	lds	r20, 0x02AD
    1492:	50 91 ae 02 	lds	r21, 0x02AE
    1496:	60 91 af 02 	lds	r22, 0x02AF
    149a:	70 91 b0 02 	lds	r23, 0x02B0
    149e:	ad b7       	in	r26, 0x3d	; 61
    14a0:	be b7       	in	r27, 0x3e	; 62
    14a2:	18 97       	sbiw	r26, 0x08	; 8
    14a4:	0f b6       	in	r0, 0x3f	; 63
    14a6:	f8 94       	cli
    14a8:	be bf       	out	0x3e, r27	; 62
    14aa:	0f be       	out	0x3f, r0	; 63
    14ac:	ad bf       	out	0x3d, r26	; 61
    14ae:	ed b7       	in	r30, 0x3d	; 61
    14b0:	fe b7       	in	r31, 0x3e	; 62
    14b2:	31 96       	adiw	r30, 0x01	; 1
    14b4:	12 96       	adiw	r26, 0x02	; 2
    14b6:	3c 92       	st	X, r3
    14b8:	2e 92       	st	-X, r2
    14ba:	11 97       	sbiw	r26, 0x01	; 1
    14bc:	e2 82       	std	Z+2, r14	; 0x02
    14be:	f3 82       	std	Z+3, r15	; 0x03
    14c0:	44 83       	std	Z+4, r20	; 0x04
    14c2:	55 83       	std	Z+5, r21	; 0x05
    14c4:	66 83       	std	Z+6, r22	; 0x06
    14c6:	77 83       	std	Z+7, r23	; 0x07
    14c8:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
							lcd_puts(O_Load_Buf);
    14cc:	2d b7       	in	r18, 0x3d	; 61
    14ce:	3e b7       	in	r19, 0x3e	; 62
    14d0:	28 5f       	subi	r18, 0xF8	; 248
    14d2:	3f 4f       	sbci	r19, 0xFF	; 255
    14d4:	0f b6       	in	r0, 0x3f	; 63
    14d6:	f8 94       	cli
    14d8:	3e bf       	out	0x3e, r19	; 62
    14da:	0f be       	out	0x3f, r0	; 63
    14dc:	2d bf       	out	0x3d, r18	; 61
    14de:	c1 01       	movw	r24, r2
    14e0:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(8,2);
    14e4:	88 e0       	ldi	r24, 0x08	; 8
    14e6:	62 e0       	ldi	r22, 0x02	; 2
    14e8:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							sprintf(C_Factor_Buf,"%07.3f", C_Factor);
    14ec:	40 91 ea 02 	lds	r20, 0x02EA
    14f0:	50 91 eb 02 	lds	r21, 0x02EB
    14f4:	60 91 ec 02 	lds	r22, 0x02EC
    14f8:	70 91 ed 02 	lds	r23, 0x02ED
    14fc:	8d b7       	in	r24, 0x3d	; 61
    14fe:	9e b7       	in	r25, 0x3e	; 62
    1500:	08 97       	sbiw	r24, 0x08	; 8
    1502:	0f b6       	in	r0, 0x3f	; 63
    1504:	f8 94       	cli
    1506:	9e bf       	out	0x3e, r25	; 62
    1508:	0f be       	out	0x3f, r0	; 63
    150a:	8d bf       	out	0x3d, r24	; 61
    150c:	ed b7       	in	r30, 0x3d	; 61
    150e:	fe b7       	in	r31, 0x3e	; 62
    1510:	31 96       	adiw	r30, 0x01	; 1
    1512:	ad b7       	in	r26, 0x3d	; 61
    1514:	be b7       	in	r27, 0x3e	; 62
    1516:	12 96       	adiw	r26, 0x02	; 2
    1518:	5c 92       	st	X, r5
    151a:	4e 92       	st	-X, r4
    151c:	11 97       	sbiw	r26, 0x01	; 1
    151e:	e2 82       	std	Z+2, r14	; 0x02
    1520:	f3 82       	std	Z+3, r15	; 0x03
    1522:	44 83       	std	Z+4, r20	; 0x04
    1524:	55 83       	std	Z+5, r21	; 0x05
    1526:	66 83       	std	Z+6, r22	; 0x06
    1528:	77 83       	std	Z+7, r23	; 0x07
    152a:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
							lcd_puts(C_Factor_Buf);
    152e:	2d b7       	in	r18, 0x3d	; 61
    1530:	3e b7       	in	r19, 0x3e	; 62
    1532:	28 5f       	subi	r18, 0xF8	; 248
    1534:	3f 4f       	sbci	r19, 0xFF	; 255
    1536:	0f b6       	in	r0, 0x3f	; 63
    1538:	f8 94       	cli
    153a:	3e bf       	out	0x3e, r19	; 62
    153c:	0f be       	out	0x3f, r0	; 63
    153e:	2d bf       	out	0x3d, r18	; 61
    1540:	c2 01       	movw	r24, r4
    1542:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(8,3);
    1546:	88 e0       	ldi	r24, 0x08	; 8
    1548:	63 e0       	ldi	r22, 0x03	; 3
    154a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							sprintf(Speed_Buf,"%07.3f", Speed);
    154e:	40 91 7e 02 	lds	r20, 0x027E
    1552:	50 91 7f 02 	lds	r21, 0x027F
    1556:	60 91 80 02 	lds	r22, 0x0280
    155a:	70 91 81 02 	lds	r23, 0x0281
    155e:	8d b7       	in	r24, 0x3d	; 61
    1560:	9e b7       	in	r25, 0x3e	; 62
    1562:	08 97       	sbiw	r24, 0x08	; 8
    1564:	0f b6       	in	r0, 0x3f	; 63
    1566:	f8 94       	cli
    1568:	9e bf       	out	0x3e, r25	; 62
    156a:	0f be       	out	0x3f, r0	; 63
    156c:	8d bf       	out	0x3d, r24	; 61
    156e:	ed b7       	in	r30, 0x3d	; 61
    1570:	fe b7       	in	r31, 0x3e	; 62
    1572:	31 96       	adiw	r30, 0x01	; 1
    1574:	ad b7       	in	r26, 0x3d	; 61
    1576:	be b7       	in	r27, 0x3e	; 62
    1578:	12 96       	adiw	r26, 0x02	; 2
    157a:	7c 92       	st	X, r7
    157c:	6e 92       	st	-X, r6
    157e:	11 97       	sbiw	r26, 0x01	; 1
    1580:	e2 82       	std	Z+2, r14	; 0x02
    1582:	f3 82       	std	Z+3, r15	; 0x03
    1584:	44 83       	std	Z+4, r20	; 0x04
    1586:	55 83       	std	Z+5, r21	; 0x05
    1588:	66 83       	std	Z+6, r22	; 0x06
    158a:	77 83       	std	Z+7, r23	; 0x07
    158c:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
							lcd_puts(Speed_Buf);
    1590:	2d b7       	in	r18, 0x3d	; 61
    1592:	3e b7       	in	r19, 0x3e	; 62
    1594:	28 5f       	subi	r18, 0xF8	; 248
    1596:	3f 4f       	sbci	r19, 0xFF	; 255
    1598:	0f b6       	in	r0, 0x3f	; 63
    159a:	f8 94       	cli
    159c:	3e bf       	out	0x3e, r19	; 62
    159e:	0f be       	out	0x3f, r0	; 63
    15a0:	2d bf       	out	0x3d, r18	; 61
    15a2:	c3 01       	movw	r24, r6
    15a4:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
    15a8:	00 e0       	ldi	r16, 0x00	; 0
    15aa:	31 e0       	ldi	r19, 0x01	; 1
    15ac:	3d af       	std	Y+61, r19	; 0x3d
    15ae:	da c4       	rjmp	.+2484   	; 0x1f64 <__stack+0xe65>
					if(ProcessDataPageCursor == 1)
					{
						   //lcd_gotoxy(8,1);
				           //lcd_command(LCD_DISP_ON_CURSOR_BLINK);
						   //USART0_Transmit_String(W_Span_Buf);
						    switch (ProcessDataLineCursor)  // Main Menu Switch statement
    15b0:	84 e0       	ldi	r24, 0x04	; 4
    15b2:	98 16       	cp	r9, r24
    15b4:	09 f4       	brne	.+2      	; 0x15b8 <__stack+0x4b9>
    15b6:	79 c2       	rjmp	.+1266   	; 0x1aaa <__stack+0x9ab>
    15b8:	89 15       	cp	r24, r9
    15ba:	60 f0       	brcs	.+24     	; 0x15d4 <__stack+0x4d5>
    15bc:	92 e0       	ldi	r25, 0x02	; 2
    15be:	99 16       	cp	r9, r25
    15c0:	09 f4       	brne	.+2      	; 0x15c4 <__stack+0x4c5>
    15c2:	da c0       	rjmp	.+436    	; 0x1778 <__stack+0x679>
    15c4:	99 15       	cp	r25, r9
    15c6:	08 f4       	brcc	.+2      	; 0x15ca <__stack+0x4cb>
    15c8:	aa c1       	rjmp	.+852    	; 0x191e <__stack+0x81f>
    15ca:	a1 e0       	ldi	r26, 0x01	; 1
    15cc:	9a 16       	cp	r9, r26
    15ce:	09 f0       	breq	.+2      	; 0x15d2 <__stack+0x4d3>
    15d0:	c8 c4       	rjmp	.+2448   	; 0x1f62 <__stack+0xe63>
    15d2:	0c c0       	rjmp	.+24     	; 0x15ec <__stack+0x4ed>
    15d4:	b6 e0       	ldi	r27, 0x06	; 6
    15d6:	9b 16       	cp	r9, r27
    15d8:	09 f4       	brne	.+2      	; 0x15dc <__stack+0x4dd>
    15da:	37 c3       	rjmp	.+1646   	; 0x1c4a <__stack+0xb4b>
    15dc:	9b 16       	cp	r9, r27
    15de:	08 f4       	brcc	.+2      	; 0x15e2 <__stack+0x4e3>
    15e0:	6e c2       	rjmp	.+1244   	; 0x1abe <__stack+0x9bf>
    15e2:	27 e0       	ldi	r18, 0x07	; 7
    15e4:	92 16       	cp	r9, r18
    15e6:	09 f0       	breq	.+2      	; 0x15ea <__stack+0x4eb>
    15e8:	bc c4       	rjmp	.+2424   	; 0x1f62 <__stack+0xe63>
    15ea:	f5 c3       	rjmp	.+2026   	; 0x1dd6 <__stack+0xcd7>
						    {
								case 1:  W_Span = atof(W_Span_Buf);	 
    15ec:	8a 2d       	mov	r24, r10
    15ee:	91 2f       	mov	r25, r17
    15f0:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    15f4:	60 93 9b 02 	sts	0x029B, r22
    15f8:	70 93 9c 02 	sts	0x029C, r23
    15fc:	80 93 9d 02 	sts	0x029D, r24
    1600:	90 93 9e 02 	sts	0x029E, r25
										 lcd_gotoxy(8,1);
    1604:	88 e0       	ldi	r24, 0x08	; 8
    1606:	61 e0       	ldi	r22, 0x01	; 1
    1608:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
										 sprintf(W_Span_Buf,"%07.3f", W_Span);
    160c:	40 91 9b 02 	lds	r20, 0x029B
    1610:	50 91 9c 02 	lds	r21, 0x029C
    1614:	60 91 9d 02 	lds	r22, 0x029D
    1618:	70 91 9e 02 	lds	r23, 0x029E
    161c:	8d b7       	in	r24, 0x3d	; 61
    161e:	9e b7       	in	r25, 0x3e	; 62
    1620:	08 97       	sbiw	r24, 0x08	; 8
    1622:	0f b6       	in	r0, 0x3f	; 63
    1624:	f8 94       	cli
    1626:	9e bf       	out	0x3e, r25	; 62
    1628:	0f be       	out	0x3f, r0	; 63
    162a:	8d bf       	out	0x3d, r24	; 61
    162c:	ed b7       	in	r30, 0x3d	; 61
    162e:	fe b7       	in	r31, 0x3e	; 62
    1630:	31 96       	adiw	r30, 0x01	; 1
    1632:	ad b7       	in	r26, 0x3d	; 61
    1634:	be b7       	in	r27, 0x3e	; 62
    1636:	11 96       	adiw	r26, 0x01	; 1
    1638:	ac 92       	st	X, r10
    163a:	11 97       	sbiw	r26, 0x01	; 1
    163c:	12 96       	adiw	r26, 0x02	; 2
    163e:	1c 93       	st	X, r17
    1640:	e2 82       	std	Z+2, r14	; 0x02
    1642:	f3 82       	std	Z+3, r15	; 0x03
    1644:	44 83       	std	Z+4, r20	; 0x04
    1646:	55 83       	std	Z+5, r21	; 0x05
    1648:	66 83       	std	Z+6, r22	; 0x06
    164a:	77 83       	std	Z+7, r23	; 0x07
    164c:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(W_Span_Buf);
    1650:	2d b7       	in	r18, 0x3d	; 61
    1652:	3e b7       	in	r19, 0x3e	; 62
    1654:	28 5f       	subi	r18, 0xF8	; 248
    1656:	3f 4f       	sbci	r19, 0xFF	; 255
    1658:	0f b6       	in	r0, 0x3f	; 63
    165a:	f8 94       	cli
    165c:	3e bf       	out	0x3e, r19	; 62
    165e:	0f be       	out	0x3f, r0	; 63
    1660:	2d bf       	out	0x3d, r18	; 61
    1662:	8a 2d       	mov	r24, r10
    1664:	91 2f       	mov	r25, r17
    1666:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(8,1);
    166a:	88 e0       	ldi	r24, 0x08	; 8
    166c:	61 e0       	ldi	r22, 0x01	; 1
    166e:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    1672:	8f e0       	ldi	r24, 0x0F	; 15
    1674:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										  
										  switch (key)  // Main Menu Switch statement
    1678:	80 91 68 03 	lds	r24, 0x0368
    167c:	90 91 69 03 	lds	r25, 0x0369
    1680:	84 33       	cpi	r24, 0x34	; 52
    1682:	91 05       	cpc	r25, r1
    1684:	09 f4       	brne	.+2      	; 0x1688 <__stack+0x589>
    1686:	41 c0       	rjmp	.+130    	; 0x170a <__stack+0x60b>
    1688:	85 33       	cpi	r24, 0x35	; 53
    168a:	91 05       	cpc	r25, r1
    168c:	8c f4       	brge	.+34     	; 0x16b0 <__stack+0x5b1>
    168e:	81 33       	cpi	r24, 0x31	; 49
    1690:	91 05       	cpc	r25, r1
    1692:	19 f1       	breq	.+70     	; 0x16da <__stack+0x5db>
    1694:	82 33       	cpi	r24, 0x32	; 50
    1696:	91 05       	cpc	r25, r1
    1698:	24 f4       	brge	.+8      	; 0x16a2 <__stack+0x5a3>
    169a:	c0 97       	sbiw	r24, 0x30	; 48
    169c:	09 f0       	breq	.+2      	; 0x16a0 <__stack+0x5a1>
    169e:	61 c4       	rjmp	.+2242   	; 0x1f62 <__stack+0xe63>
    16a0:	63 c0       	rjmp	.+198    	; 0x1768 <__stack+0x669>
    16a2:	82 33       	cpi	r24, 0x32	; 50
    16a4:	91 05       	cpc	r25, r1
    16a6:	09 f1       	breq	.+66     	; 0x16ea <__stack+0x5eb>
    16a8:	c3 97       	sbiw	r24, 0x33	; 51
    16aa:	09 f0       	breq	.+2      	; 0x16ae <__stack+0x5af>
    16ac:	5a c4       	rjmp	.+2228   	; 0x1f62 <__stack+0xe63>
    16ae:	25 c0       	rjmp	.+74     	; 0x16fa <__stack+0x5fb>
    16b0:	87 33       	cpi	r24, 0x37	; 55
    16b2:	91 05       	cpc	r25, r1
    16b4:	09 f4       	brne	.+2      	; 0x16b8 <__stack+0x5b9>
    16b6:	40 c0       	rjmp	.+128    	; 0x1738 <__stack+0x639>
    16b8:	88 33       	cpi	r24, 0x38	; 56
    16ba:	91 05       	cpc	r25, r1
    16bc:	3c f4       	brge	.+14     	; 0x16cc <__stack+0x5cd>
    16be:	85 33       	cpi	r24, 0x35	; 53
    16c0:	91 05       	cpc	r25, r1
    16c2:	51 f1       	breq	.+84     	; 0x1718 <__stack+0x619>
    16c4:	c6 97       	sbiw	r24, 0x36	; 54
    16c6:	09 f0       	breq	.+2      	; 0x16ca <__stack+0x5cb>
    16c8:	4c c4       	rjmp	.+2200   	; 0x1f62 <__stack+0xe63>
    16ca:	2e c0       	rjmp	.+92     	; 0x1728 <__stack+0x629>
    16cc:	88 33       	cpi	r24, 0x38	; 56
    16ce:	91 05       	cpc	r25, r1
    16d0:	d9 f1       	breq	.+118    	; 0x1748 <__stack+0x649>
    16d2:	c9 97       	sbiw	r24, 0x39	; 57
    16d4:	09 f0       	breq	.+2      	; 0x16d8 <__stack+0x5d9>
    16d6:	45 c4       	rjmp	.+2186   	; 0x1f62 <__stack+0xe63>
    16d8:	3f c0       	rjmp	.+126    	; 0x1758 <__stack+0x659>
										    {
											 
												case '1':lcd_command(LCD_DISP_ON);
    16da:	8c e0       	ldi	r24, 0x0C	; 12
    16dc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[0] = '1';
    16e0:	81 e3       	ldi	r24, 0x31	; 49
    16e2:	89 83       	std	Y+1, r24	; 0x01
    16e4:	01 e0       	ldi	r16, 0x01	; 1
    16e6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														 
														 
								        				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    16ea:	8c e0       	ldi	r24, 0x0C	; 12
    16ec:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[0] = '2';
    16f0:	82 e3       	ldi	r24, 0x32	; 50
    16f2:	89 83       	std	Y+1, r24	; 0x01
    16f4:	01 e0       	ldi	r16, 0x01	; 1
    16f6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    16fa:	8c e0       	ldi	r24, 0x0C	; 12
    16fc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[0] = '3';
    1700:	83 e3       	ldi	r24, 0x33	; 51
    1702:	89 83       	std	Y+1, r24	; 0x01
    1704:	01 e0       	ldi	r16, 0x01	; 1
    1706:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    170a:	8c e0       	ldi	r24, 0x0C	; 12
    170c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[0] = '4';
    1710:	89 82       	std	Y+1, r8	; 0x01
    1712:	01 e0       	ldi	r16, 0x01	; 1
    1714:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    1718:	8c e0       	ldi	r24, 0x0C	; 12
    171a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     W_Span_Buf[0] = '5';
    171e:	85 e3       	ldi	r24, 0x35	; 53
    1720:	89 83       	std	Y+1, r24	; 0x01
    1722:	01 e0       	ldi	r16, 0x01	; 1
    1724:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    1728:	8c e0       	ldi	r24, 0x0C	; 12
    172a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[0] = '6';
    172e:	86 e3       	ldi	r24, 0x36	; 54
    1730:	89 83       	std	Y+1, r24	; 0x01
    1732:	01 e0       	ldi	r16, 0x01	; 1
    1734:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    1738:	8c e0       	ldi	r24, 0x0C	; 12
    173a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[0] = '7';
    173e:	87 e3       	ldi	r24, 0x37	; 55
    1740:	89 83       	std	Y+1, r24	; 0x01
    1742:	01 e0       	ldi	r16, 0x01	; 1
    1744:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    1748:	8c e0       	ldi	r24, 0x0C	; 12
    174a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[0] = '8';
    174e:	88 e3       	ldi	r24, 0x38	; 56
    1750:	89 83       	std	Y+1, r24	; 0x01
    1752:	01 e0       	ldi	r16, 0x01	; 1
    1754:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    1758:	8c e0       	ldi	r24, 0x0C	; 12
    175a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[0] = '9';
    175e:	89 e3       	ldi	r24, 0x39	; 57
    1760:	89 83       	std	Y+1, r24	; 0x01
    1762:	01 e0       	ldi	r16, 0x01	; 1
    1764:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    1768:	8c e0       	ldi	r24, 0x0C	; 12
    176a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[0] = '0';
    176e:	80 e3       	ldi	r24, 0x30	; 48
    1770:	89 83       	std	Y+1, r24	; 0x01
    1772:	01 e0       	ldi	r16, 0x01	; 1
    1774:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
											 }	
																		
								         break;
								case 2:  W_Span = atof(W_Span_Buf);	 
    1778:	8a 2d       	mov	r24, r10
    177a:	91 2f       	mov	r25, r17
    177c:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    1780:	60 93 9b 02 	sts	0x029B, r22
    1784:	70 93 9c 02 	sts	0x029C, r23
    1788:	80 93 9d 02 	sts	0x029D, r24
    178c:	90 93 9e 02 	sts	0x029E, r25
										 lcd_gotoxy(8,1);
    1790:	88 e0       	ldi	r24, 0x08	; 8
    1792:	61 e0       	ldi	r22, 0x01	; 1
    1794:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
										 sprintf(W_Span_Buf,"%07.3f", W_Span);
    1798:	40 91 9b 02 	lds	r20, 0x029B
    179c:	50 91 9c 02 	lds	r21, 0x029C
    17a0:	60 91 9d 02 	lds	r22, 0x029D
    17a4:	70 91 9e 02 	lds	r23, 0x029E
    17a8:	8d b7       	in	r24, 0x3d	; 61
    17aa:	9e b7       	in	r25, 0x3e	; 62
    17ac:	08 97       	sbiw	r24, 0x08	; 8
    17ae:	0f b6       	in	r0, 0x3f	; 63
    17b0:	f8 94       	cli
    17b2:	9e bf       	out	0x3e, r25	; 62
    17b4:	0f be       	out	0x3f, r0	; 63
    17b6:	8d bf       	out	0x3d, r24	; 61
    17b8:	ed b7       	in	r30, 0x3d	; 61
    17ba:	fe b7       	in	r31, 0x3e	; 62
    17bc:	31 96       	adiw	r30, 0x01	; 1
    17be:	ad b7       	in	r26, 0x3d	; 61
    17c0:	be b7       	in	r27, 0x3e	; 62
    17c2:	11 96       	adiw	r26, 0x01	; 1
    17c4:	ac 92       	st	X, r10
    17c6:	11 97       	sbiw	r26, 0x01	; 1
    17c8:	12 96       	adiw	r26, 0x02	; 2
    17ca:	1c 93       	st	X, r17
    17cc:	e2 82       	std	Z+2, r14	; 0x02
    17ce:	f3 82       	std	Z+3, r15	; 0x03
    17d0:	44 83       	std	Z+4, r20	; 0x04
    17d2:	55 83       	std	Z+5, r21	; 0x05
    17d4:	66 83       	std	Z+6, r22	; 0x06
    17d6:	77 83       	std	Z+7, r23	; 0x07
    17d8:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(W_Span_Buf); 
    17dc:	2d b7       	in	r18, 0x3d	; 61
    17de:	3e b7       	in	r19, 0x3e	; 62
    17e0:	28 5f       	subi	r18, 0xF8	; 248
    17e2:	3f 4f       	sbci	r19, 0xFF	; 255
    17e4:	0f b6       	in	r0, 0x3f	; 63
    17e6:	f8 94       	cli
    17e8:	3e bf       	out	0x3e, r19	; 62
    17ea:	0f be       	out	0x3f, r0	; 63
    17ec:	2d bf       	out	0x3d, r18	; 61
    17ee:	8a 2d       	mov	r24, r10
    17f0:	91 2f       	mov	r25, r17
    17f2:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(9,1);
    17f6:	89 e0       	ldi	r24, 0x09	; 9
    17f8:	61 e0       	ldi	r22, 0x01	; 1
    17fa:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    17fe:	8f e0       	ldi	r24, 0x0F	; 15
    1800:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    1804:	80 91 68 03 	lds	r24, 0x0368
    1808:	90 91 69 03 	lds	r25, 0x0369
    180c:	84 33       	cpi	r24, 0x34	; 52
    180e:	91 05       	cpc	r25, r1
    1810:	09 f4       	brne	.+2      	; 0x1814 <__stack+0x715>
    1812:	4e c0       	rjmp	.+156    	; 0x18b0 <__stack+0x7b1>
    1814:	85 33       	cpi	r24, 0x35	; 53
    1816:	91 05       	cpc	r25, r1
    1818:	8c f4       	brge	.+34     	; 0x183c <__stack+0x73d>
    181a:	81 33       	cpi	r24, 0x31	; 49
    181c:	91 05       	cpc	r25, r1
    181e:	21 f1       	breq	.+72     	; 0x1868 <__stack+0x769>
    1820:	82 33       	cpi	r24, 0x32	; 50
    1822:	91 05       	cpc	r25, r1
    1824:	24 f4       	brge	.+8      	; 0x182e <__stack+0x72f>
    1826:	c0 97       	sbiw	r24, 0x30	; 48
    1828:	09 f0       	breq	.+2      	; 0x182c <__stack+0x72d>
    182a:	9b c3       	rjmp	.+1846   	; 0x1f62 <__stack+0xe63>
    182c:	70 c0       	rjmp	.+224    	; 0x190e <__stack+0x80f>
    182e:	82 33       	cpi	r24, 0x32	; 50
    1830:	91 05       	cpc	r25, r1
    1832:	71 f1       	breq	.+92     	; 0x1890 <__stack+0x791>
    1834:	c3 97       	sbiw	r24, 0x33	; 51
    1836:	09 f0       	breq	.+2      	; 0x183a <__stack+0x73b>
    1838:	94 c3       	rjmp	.+1832   	; 0x1f62 <__stack+0xe63>
    183a:	32 c0       	rjmp	.+100    	; 0x18a0 <__stack+0x7a1>
    183c:	87 33       	cpi	r24, 0x37	; 55
    183e:	91 05       	cpc	r25, r1
    1840:	09 f4       	brne	.+2      	; 0x1844 <__stack+0x745>
    1842:	4d c0       	rjmp	.+154    	; 0x18de <__stack+0x7df>
    1844:	88 33       	cpi	r24, 0x38	; 56
    1846:	91 05       	cpc	r25, r1
    1848:	3c f4       	brge	.+14     	; 0x1858 <__stack+0x759>
    184a:	85 33       	cpi	r24, 0x35	; 53
    184c:	91 05       	cpc	r25, r1
    184e:	b9 f1       	breq	.+110    	; 0x18be <__stack+0x7bf>
    1850:	c6 97       	sbiw	r24, 0x36	; 54
    1852:	09 f0       	breq	.+2      	; 0x1856 <__stack+0x757>
    1854:	86 c3       	rjmp	.+1804   	; 0x1f62 <__stack+0xe63>
    1856:	3b c0       	rjmp	.+118    	; 0x18ce <__stack+0x7cf>
    1858:	88 33       	cpi	r24, 0x38	; 56
    185a:	91 05       	cpc	r25, r1
    185c:	09 f4       	brne	.+2      	; 0x1860 <__stack+0x761>
    185e:	47 c0       	rjmp	.+142    	; 0x18ee <__stack+0x7ef>
    1860:	c9 97       	sbiw	r24, 0x39	; 57
    1862:	09 f0       	breq	.+2      	; 0x1866 <__stack+0x767>
    1864:	7e c3       	rjmp	.+1788   	; 0x1f62 <__stack+0xe63>
    1866:	4b c0       	rjmp	.+150    	; 0x18fe <__stack+0x7ff>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    1868:	8c e0       	ldi	r24, 0x0C	; 12
    186a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[1] = '1';
    186e:	81 e3       	ldi	r24, 0x31	; 49
    1870:	8a 83       	std	Y+2, r24	; 0x02
														 W_Span = atof(W_Span_Buf);	 
    1872:	8a 2d       	mov	r24, r10
    1874:	91 2f       	mov	r25, r17
    1876:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    187a:	60 93 9b 02 	sts	0x029B, r22
    187e:	70 93 9c 02 	sts	0x029C, r23
    1882:	80 93 9d 02 	sts	0x029D, r24
    1886:	90 93 9e 02 	sts	0x029E, r25
    188a:	01 e0       	ldi	r16, 0x01	; 1
    188c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    1890:	8c e0       	ldi	r24, 0x0C	; 12
    1892:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[1] = '2';
    1896:	82 e3       	ldi	r24, 0x32	; 50
    1898:	8a 83       	std	Y+2, r24	; 0x02
    189a:	01 e0       	ldi	r16, 0x01	; 1
    189c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    18a0:	8c e0       	ldi	r24, 0x0C	; 12
    18a2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[1] = '3';
    18a6:	83 e3       	ldi	r24, 0x33	; 51
    18a8:	8a 83       	std	Y+2, r24	; 0x02
    18aa:	01 e0       	ldi	r16, 0x01	; 1
    18ac:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    18b0:	8c e0       	ldi	r24, 0x0C	; 12
    18b2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[1] = '4';
    18b6:	8a 82       	std	Y+2, r8	; 0x02
    18b8:	01 e0       	ldi	r16, 0x01	; 1
    18ba:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    18be:	8c e0       	ldi	r24, 0x0C	; 12
    18c0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     W_Span_Buf[1] = '5';
    18c4:	85 e3       	ldi	r24, 0x35	; 53
    18c6:	8a 83       	std	Y+2, r24	; 0x02
    18c8:	01 e0       	ldi	r16, 0x01	; 1
    18ca:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    18ce:	8c e0       	ldi	r24, 0x0C	; 12
    18d0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[1] = '6';
    18d4:	86 e3       	ldi	r24, 0x36	; 54
    18d6:	8a 83       	std	Y+2, r24	; 0x02
    18d8:	01 e0       	ldi	r16, 0x01	; 1
    18da:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    18de:	8c e0       	ldi	r24, 0x0C	; 12
    18e0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[1] = '7';
    18e4:	87 e3       	ldi	r24, 0x37	; 55
    18e6:	8a 83       	std	Y+2, r24	; 0x02
    18e8:	01 e0       	ldi	r16, 0x01	; 1
    18ea:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    18ee:	8c e0       	ldi	r24, 0x0C	; 12
    18f0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[1] = '8';
    18f4:	88 e3       	ldi	r24, 0x38	; 56
    18f6:	8a 83       	std	Y+2, r24	; 0x02
    18f8:	01 e0       	ldi	r16, 0x01	; 1
    18fa:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    18fe:	8c e0       	ldi	r24, 0x0C	; 12
    1900:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[1] = '9';
    1904:	89 e3       	ldi	r24, 0x39	; 57
    1906:	8a 83       	std	Y+2, r24	; 0x02
    1908:	01 e0       	ldi	r16, 0x01	; 1
    190a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    190e:	8c e0       	ldi	r24, 0x0C	; 12
    1910:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[1] = '0';
    1914:	80 e3       	ldi	r24, 0x30	; 48
    1916:	8a 83       	std	Y+2, r24	; 0x02
    1918:	01 e0       	ldi	r16, 0x01	; 1
    191a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 3:  W_Span = atof(W_Span_Buf);	 
    191e:	8a 2d       	mov	r24, r10
    1920:	91 2f       	mov	r25, r17
    1922:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    1926:	60 93 9b 02 	sts	0x029B, r22
    192a:	70 93 9c 02 	sts	0x029C, r23
    192e:	80 93 9d 02 	sts	0x029D, r24
    1932:	90 93 9e 02 	sts	0x029E, r25
										 lcd_gotoxy(8,1);
    1936:	88 e0       	ldi	r24, 0x08	; 8
    1938:	61 e0       	ldi	r22, 0x01	; 1
    193a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
										 sprintf(W_Span_Buf,"%07.3f", W_Span);
    193e:	40 91 9b 02 	lds	r20, 0x029B
    1942:	50 91 9c 02 	lds	r21, 0x029C
    1946:	60 91 9d 02 	lds	r22, 0x029D
    194a:	70 91 9e 02 	lds	r23, 0x029E
    194e:	8d b7       	in	r24, 0x3d	; 61
    1950:	9e b7       	in	r25, 0x3e	; 62
    1952:	08 97       	sbiw	r24, 0x08	; 8
    1954:	0f b6       	in	r0, 0x3f	; 63
    1956:	f8 94       	cli
    1958:	9e bf       	out	0x3e, r25	; 62
    195a:	0f be       	out	0x3f, r0	; 63
    195c:	8d bf       	out	0x3d, r24	; 61
    195e:	ed b7       	in	r30, 0x3d	; 61
    1960:	fe b7       	in	r31, 0x3e	; 62
    1962:	31 96       	adiw	r30, 0x01	; 1
    1964:	ad b7       	in	r26, 0x3d	; 61
    1966:	be b7       	in	r27, 0x3e	; 62
    1968:	11 96       	adiw	r26, 0x01	; 1
    196a:	ac 92       	st	X, r10
    196c:	11 97       	sbiw	r26, 0x01	; 1
    196e:	12 96       	adiw	r26, 0x02	; 2
    1970:	1c 93       	st	X, r17
    1972:	e2 82       	std	Z+2, r14	; 0x02
    1974:	f3 82       	std	Z+3, r15	; 0x03
    1976:	44 83       	std	Z+4, r20	; 0x04
    1978:	55 83       	std	Z+5, r21	; 0x05
    197a:	66 83       	std	Z+6, r22	; 0x06
    197c:	77 83       	std	Z+7, r23	; 0x07
    197e:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(W_Span_Buf);
    1982:	2d b7       	in	r18, 0x3d	; 61
    1984:	3e b7       	in	r19, 0x3e	; 62
    1986:	28 5f       	subi	r18, 0xF8	; 248
    1988:	3f 4f       	sbci	r19, 0xFF	; 255
    198a:	0f b6       	in	r0, 0x3f	; 63
    198c:	f8 94       	cli
    198e:	3e bf       	out	0x3e, r19	; 62
    1990:	0f be       	out	0x3f, r0	; 63
    1992:	2d bf       	out	0x3d, r18	; 61
    1994:	8a 2d       	mov	r24, r10
    1996:	91 2f       	mov	r25, r17
    1998:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(10,1);
    199c:	8a e0       	ldi	r24, 0x0A	; 10
    199e:	61 e0       	ldi	r22, 0x01	; 1
    19a0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    19a4:	8f e0       	ldi	r24, 0x0F	; 15
    19a6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    19aa:	80 91 68 03 	lds	r24, 0x0368
    19ae:	90 91 69 03 	lds	r25, 0x0369
    19b2:	84 33       	cpi	r24, 0x34	; 52
    19b4:	91 05       	cpc	r25, r1
    19b6:	09 f4       	brne	.+2      	; 0x19ba <__stack+0x8bb>
    19b8:	41 c0       	rjmp	.+130    	; 0x1a3c <__stack+0x93d>
    19ba:	85 33       	cpi	r24, 0x35	; 53
    19bc:	91 05       	cpc	r25, r1
    19be:	8c f4       	brge	.+34     	; 0x19e2 <__stack+0x8e3>
    19c0:	81 33       	cpi	r24, 0x31	; 49
    19c2:	91 05       	cpc	r25, r1
    19c4:	19 f1       	breq	.+70     	; 0x1a0c <__stack+0x90d>
    19c6:	82 33       	cpi	r24, 0x32	; 50
    19c8:	91 05       	cpc	r25, r1
    19ca:	24 f4       	brge	.+8      	; 0x19d4 <__stack+0x8d5>
    19cc:	c0 97       	sbiw	r24, 0x30	; 48
    19ce:	09 f0       	breq	.+2      	; 0x19d2 <__stack+0x8d3>
    19d0:	c8 c2       	rjmp	.+1424   	; 0x1f62 <__stack+0xe63>
    19d2:	63 c0       	rjmp	.+198    	; 0x1a9a <__stack+0x99b>
    19d4:	82 33       	cpi	r24, 0x32	; 50
    19d6:	91 05       	cpc	r25, r1
    19d8:	09 f1       	breq	.+66     	; 0x1a1c <__stack+0x91d>
    19da:	c3 97       	sbiw	r24, 0x33	; 51
    19dc:	09 f0       	breq	.+2      	; 0x19e0 <__stack+0x8e1>
    19de:	c1 c2       	rjmp	.+1410   	; 0x1f62 <__stack+0xe63>
    19e0:	25 c0       	rjmp	.+74     	; 0x1a2c <__stack+0x92d>
    19e2:	87 33       	cpi	r24, 0x37	; 55
    19e4:	91 05       	cpc	r25, r1
    19e6:	09 f4       	brne	.+2      	; 0x19ea <__stack+0x8eb>
    19e8:	40 c0       	rjmp	.+128    	; 0x1a6a <__stack+0x96b>
    19ea:	88 33       	cpi	r24, 0x38	; 56
    19ec:	91 05       	cpc	r25, r1
    19ee:	3c f4       	brge	.+14     	; 0x19fe <__stack+0x8ff>
    19f0:	85 33       	cpi	r24, 0x35	; 53
    19f2:	91 05       	cpc	r25, r1
    19f4:	51 f1       	breq	.+84     	; 0x1a4a <__stack+0x94b>
    19f6:	c6 97       	sbiw	r24, 0x36	; 54
    19f8:	09 f0       	breq	.+2      	; 0x19fc <__stack+0x8fd>
    19fa:	b3 c2       	rjmp	.+1382   	; 0x1f62 <__stack+0xe63>
    19fc:	2e c0       	rjmp	.+92     	; 0x1a5a <__stack+0x95b>
    19fe:	88 33       	cpi	r24, 0x38	; 56
    1a00:	91 05       	cpc	r25, r1
    1a02:	d9 f1       	breq	.+118    	; 0x1a7a <__stack+0x97b>
    1a04:	c9 97       	sbiw	r24, 0x39	; 57
    1a06:	09 f0       	breq	.+2      	; 0x1a0a <__stack+0x90b>
    1a08:	ac c2       	rjmp	.+1368   	; 0x1f62 <__stack+0xe63>
    1a0a:	3f c0       	rjmp	.+126    	; 0x1a8a <__stack+0x98b>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    1a0c:	8c e0       	ldi	r24, 0x0C	; 12
    1a0e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[2] = '1';
    1a12:	81 e3       	ldi	r24, 0x31	; 49
    1a14:	8b 83       	std	Y+3, r24	; 0x03
    1a16:	01 e0       	ldi	r16, 0x01	; 1
    1a18:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    1a1c:	8c e0       	ldi	r24, 0x0C	; 12
    1a1e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[2] = '2';
    1a22:	82 e3       	ldi	r24, 0x32	; 50
    1a24:	8b 83       	std	Y+3, r24	; 0x03
    1a26:	01 e0       	ldi	r16, 0x01	; 1
    1a28:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    1a2c:	8c e0       	ldi	r24, 0x0C	; 12
    1a2e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[2] = '3';
    1a32:	83 e3       	ldi	r24, 0x33	; 51
    1a34:	8b 83       	std	Y+3, r24	; 0x03
    1a36:	01 e0       	ldi	r16, 0x01	; 1
    1a38:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    1a3c:	8c e0       	ldi	r24, 0x0C	; 12
    1a3e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[2] = '4';
    1a42:	8b 82       	std	Y+3, r8	; 0x03
    1a44:	01 e0       	ldi	r16, 0x01	; 1
    1a46:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    1a4a:	8c e0       	ldi	r24, 0x0C	; 12
    1a4c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     W_Span_Buf[2] = '5';
    1a50:	85 e3       	ldi	r24, 0x35	; 53
    1a52:	8b 83       	std	Y+3, r24	; 0x03
    1a54:	01 e0       	ldi	r16, 0x01	; 1
    1a56:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    1a5a:	8c e0       	ldi	r24, 0x0C	; 12
    1a5c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[2] = '6';
    1a60:	86 e3       	ldi	r24, 0x36	; 54
    1a62:	8b 83       	std	Y+3, r24	; 0x03
    1a64:	01 e0       	ldi	r16, 0x01	; 1
    1a66:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    1a6a:	8c e0       	ldi	r24, 0x0C	; 12
    1a6c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[2] = '7';
    1a70:	87 e3       	ldi	r24, 0x37	; 55
    1a72:	8b 83       	std	Y+3, r24	; 0x03
    1a74:	01 e0       	ldi	r16, 0x01	; 1
    1a76:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    1a7a:	8c e0       	ldi	r24, 0x0C	; 12
    1a7c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[2] = '8';
    1a80:	88 e3       	ldi	r24, 0x38	; 56
    1a82:	8b 83       	std	Y+3, r24	; 0x03
    1a84:	01 e0       	ldi	r16, 0x01	; 1
    1a86:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    1a8a:	8c e0       	ldi	r24, 0x0C	; 12
    1a8c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[2] = '9';
    1a90:	89 e3       	ldi	r24, 0x39	; 57
    1a92:	8b 83       	std	Y+3, r24	; 0x03
    1a94:	01 e0       	ldi	r16, 0x01	; 1
    1a96:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    1a9a:	8c e0       	ldi	r24, 0x0C	; 12
    1a9c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[2] = '0';
    1aa0:	80 e3       	ldi	r24, 0x30	; 48
    1aa2:	8b 83       	std	Y+3, r24	; 0x03
    1aa4:	01 e0       	ldi	r16, 0x01	; 1
    1aa6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 4:  lcd_gotoxy(11,1);
    1aaa:	8b e0       	ldi	r24, 0x0B	; 11
    1aac:	61 e0       	ldi	r22, 0x01	; 1
    1aae:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    1ab2:	8f e0       	ldi	r24, 0x0F	; 15
    1ab4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
    1ab8:	01 e0       	ldi	r16, 0x01	; 1
    1aba:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
								         break;
								case 5:  W_Span = atof(W_Span_Buf);	 
    1abe:	8a 2d       	mov	r24, r10
    1ac0:	91 2f       	mov	r25, r17
    1ac2:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    1ac6:	60 93 9b 02 	sts	0x029B, r22
    1aca:	70 93 9c 02 	sts	0x029C, r23
    1ace:	80 93 9d 02 	sts	0x029D, r24
    1ad2:	90 93 9e 02 	sts	0x029E, r25
										 lcd_gotoxy(8,1);
    1ad6:	88 e0       	ldi	r24, 0x08	; 8
    1ad8:	61 e0       	ldi	r22, 0x01	; 1
    1ada:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
										 sprintf(W_Span_Buf,"%07.3f", W_Span);
    1ade:	40 91 9b 02 	lds	r20, 0x029B
    1ae2:	50 91 9c 02 	lds	r21, 0x029C
    1ae6:	60 91 9d 02 	lds	r22, 0x029D
    1aea:	70 91 9e 02 	lds	r23, 0x029E
    1aee:	8d b7       	in	r24, 0x3d	; 61
    1af0:	9e b7       	in	r25, 0x3e	; 62
    1af2:	08 97       	sbiw	r24, 0x08	; 8
    1af4:	0f b6       	in	r0, 0x3f	; 63
    1af6:	f8 94       	cli
    1af8:	9e bf       	out	0x3e, r25	; 62
    1afa:	0f be       	out	0x3f, r0	; 63
    1afc:	8d bf       	out	0x3d, r24	; 61
    1afe:	ed b7       	in	r30, 0x3d	; 61
    1b00:	fe b7       	in	r31, 0x3e	; 62
    1b02:	31 96       	adiw	r30, 0x01	; 1
    1b04:	ad b7       	in	r26, 0x3d	; 61
    1b06:	be b7       	in	r27, 0x3e	; 62
    1b08:	11 96       	adiw	r26, 0x01	; 1
    1b0a:	ac 92       	st	X, r10
    1b0c:	11 97       	sbiw	r26, 0x01	; 1
    1b0e:	12 96       	adiw	r26, 0x02	; 2
    1b10:	1c 93       	st	X, r17
    1b12:	e2 82       	std	Z+2, r14	; 0x02
    1b14:	f3 82       	std	Z+3, r15	; 0x03
    1b16:	44 83       	std	Z+4, r20	; 0x04
    1b18:	55 83       	std	Z+5, r21	; 0x05
    1b1a:	66 83       	std	Z+6, r22	; 0x06
    1b1c:	77 83       	std	Z+7, r23	; 0x07
    1b1e:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(W_Span_Buf);
    1b22:	2d b7       	in	r18, 0x3d	; 61
    1b24:	3e b7       	in	r19, 0x3e	; 62
    1b26:	28 5f       	subi	r18, 0xF8	; 248
    1b28:	3f 4f       	sbci	r19, 0xFF	; 255
    1b2a:	0f b6       	in	r0, 0x3f	; 63
    1b2c:	f8 94       	cli
    1b2e:	3e bf       	out	0x3e, r19	; 62
    1b30:	0f be       	out	0x3f, r0	; 63
    1b32:	2d bf       	out	0x3d, r18	; 61
    1b34:	8a 2d       	mov	r24, r10
    1b36:	91 2f       	mov	r25, r17
    1b38:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(12,1);
    1b3c:	8c e0       	ldi	r24, 0x0C	; 12
    1b3e:	61 e0       	ldi	r22, 0x01	; 1
    1b40:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    1b44:	8f e0       	ldi	r24, 0x0F	; 15
    1b46:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    1b4a:	80 91 68 03 	lds	r24, 0x0368
    1b4e:	90 91 69 03 	lds	r25, 0x0369
    1b52:	84 33       	cpi	r24, 0x34	; 52
    1b54:	91 05       	cpc	r25, r1
    1b56:	09 f4       	brne	.+2      	; 0x1b5a <__stack+0xa5b>
    1b58:	41 c0       	rjmp	.+130    	; 0x1bdc <__stack+0xadd>
    1b5a:	85 33       	cpi	r24, 0x35	; 53
    1b5c:	91 05       	cpc	r25, r1
    1b5e:	8c f4       	brge	.+34     	; 0x1b82 <__stack+0xa83>
    1b60:	81 33       	cpi	r24, 0x31	; 49
    1b62:	91 05       	cpc	r25, r1
    1b64:	19 f1       	breq	.+70     	; 0x1bac <__stack+0xaad>
    1b66:	82 33       	cpi	r24, 0x32	; 50
    1b68:	91 05       	cpc	r25, r1
    1b6a:	24 f4       	brge	.+8      	; 0x1b74 <__stack+0xa75>
    1b6c:	c0 97       	sbiw	r24, 0x30	; 48
    1b6e:	09 f0       	breq	.+2      	; 0x1b72 <__stack+0xa73>
    1b70:	f8 c1       	rjmp	.+1008   	; 0x1f62 <__stack+0xe63>
    1b72:	63 c0       	rjmp	.+198    	; 0x1c3a <__stack+0xb3b>
    1b74:	82 33       	cpi	r24, 0x32	; 50
    1b76:	91 05       	cpc	r25, r1
    1b78:	09 f1       	breq	.+66     	; 0x1bbc <__stack+0xabd>
    1b7a:	c3 97       	sbiw	r24, 0x33	; 51
    1b7c:	09 f0       	breq	.+2      	; 0x1b80 <__stack+0xa81>
    1b7e:	f1 c1       	rjmp	.+994    	; 0x1f62 <__stack+0xe63>
    1b80:	25 c0       	rjmp	.+74     	; 0x1bcc <__stack+0xacd>
    1b82:	87 33       	cpi	r24, 0x37	; 55
    1b84:	91 05       	cpc	r25, r1
    1b86:	09 f4       	brne	.+2      	; 0x1b8a <__stack+0xa8b>
    1b88:	40 c0       	rjmp	.+128    	; 0x1c0a <__stack+0xb0b>
    1b8a:	88 33       	cpi	r24, 0x38	; 56
    1b8c:	91 05       	cpc	r25, r1
    1b8e:	3c f4       	brge	.+14     	; 0x1b9e <__stack+0xa9f>
    1b90:	85 33       	cpi	r24, 0x35	; 53
    1b92:	91 05       	cpc	r25, r1
    1b94:	51 f1       	breq	.+84     	; 0x1bea <__stack+0xaeb>
    1b96:	c6 97       	sbiw	r24, 0x36	; 54
    1b98:	09 f0       	breq	.+2      	; 0x1b9c <__stack+0xa9d>
    1b9a:	e3 c1       	rjmp	.+966    	; 0x1f62 <__stack+0xe63>
    1b9c:	2e c0       	rjmp	.+92     	; 0x1bfa <__stack+0xafb>
    1b9e:	88 33       	cpi	r24, 0x38	; 56
    1ba0:	91 05       	cpc	r25, r1
    1ba2:	d9 f1       	breq	.+118    	; 0x1c1a <__stack+0xb1b>
    1ba4:	c9 97       	sbiw	r24, 0x39	; 57
    1ba6:	09 f0       	breq	.+2      	; 0x1baa <__stack+0xaab>
    1ba8:	dc c1       	rjmp	.+952    	; 0x1f62 <__stack+0xe63>
    1baa:	3f c0       	rjmp	.+126    	; 0x1c2a <__stack+0xb2b>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    1bac:	8c e0       	ldi	r24, 0x0C	; 12
    1bae:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[4] = '1';
    1bb2:	81 e3       	ldi	r24, 0x31	; 49
    1bb4:	8d 83       	std	Y+5, r24	; 0x05
    1bb6:	01 e0       	ldi	r16, 0x01	; 1
    1bb8:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    1bbc:	8c e0       	ldi	r24, 0x0C	; 12
    1bbe:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[4] = '2';
    1bc2:	82 e3       	ldi	r24, 0x32	; 50
    1bc4:	8d 83       	std	Y+5, r24	; 0x05
    1bc6:	01 e0       	ldi	r16, 0x01	; 1
    1bc8:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    1bcc:	8c e0       	ldi	r24, 0x0C	; 12
    1bce:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[4] = '3';
    1bd2:	83 e3       	ldi	r24, 0x33	; 51
    1bd4:	8d 83       	std	Y+5, r24	; 0x05
    1bd6:	01 e0       	ldi	r16, 0x01	; 1
    1bd8:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    1bdc:	8c e0       	ldi	r24, 0x0C	; 12
    1bde:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[4] = '4';
    1be2:	8d 82       	std	Y+5, r8	; 0x05
    1be4:	01 e0       	ldi	r16, 0x01	; 1
    1be6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    1bea:	8c e0       	ldi	r24, 0x0C	; 12
    1bec:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     W_Span_Buf[4] = '5';
    1bf0:	85 e3       	ldi	r24, 0x35	; 53
    1bf2:	8d 83       	std	Y+5, r24	; 0x05
    1bf4:	01 e0       	ldi	r16, 0x01	; 1
    1bf6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    1bfa:	8c e0       	ldi	r24, 0x0C	; 12
    1bfc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[4] = '6';
    1c00:	86 e3       	ldi	r24, 0x36	; 54
    1c02:	8d 83       	std	Y+5, r24	; 0x05
    1c04:	01 e0       	ldi	r16, 0x01	; 1
    1c06:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    1c0a:	8c e0       	ldi	r24, 0x0C	; 12
    1c0c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[4] = '7';
    1c10:	87 e3       	ldi	r24, 0x37	; 55
    1c12:	8d 83       	std	Y+5, r24	; 0x05
    1c14:	01 e0       	ldi	r16, 0x01	; 1
    1c16:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    1c1a:	8c e0       	ldi	r24, 0x0C	; 12
    1c1c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[4] = '8';
    1c20:	88 e3       	ldi	r24, 0x38	; 56
    1c22:	8d 83       	std	Y+5, r24	; 0x05
    1c24:	01 e0       	ldi	r16, 0x01	; 1
    1c26:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    1c2a:	8c e0       	ldi	r24, 0x0C	; 12
    1c2c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[4] = '9';
    1c30:	89 e3       	ldi	r24, 0x39	; 57
    1c32:	8d 83       	std	Y+5, r24	; 0x05
    1c34:	01 e0       	ldi	r16, 0x01	; 1
    1c36:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    1c3a:	8c e0       	ldi	r24, 0x0C	; 12
    1c3c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[4] = '0';
    1c40:	80 e3       	ldi	r24, 0x30	; 48
    1c42:	8d 83       	std	Y+5, r24	; 0x05
    1c44:	01 e0       	ldi	r16, 0x01	; 1
    1c46:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 6:  W_Span = atof(W_Span_Buf);	 
    1c4a:	8a 2d       	mov	r24, r10
    1c4c:	91 2f       	mov	r25, r17
    1c4e:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    1c52:	60 93 9b 02 	sts	0x029B, r22
    1c56:	70 93 9c 02 	sts	0x029C, r23
    1c5a:	80 93 9d 02 	sts	0x029D, r24
    1c5e:	90 93 9e 02 	sts	0x029E, r25
										 lcd_gotoxy(8,1);
    1c62:	88 e0       	ldi	r24, 0x08	; 8
    1c64:	61 e0       	ldi	r22, 0x01	; 1
    1c66:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
										 sprintf(W_Span_Buf,"%07.3f", W_Span);
    1c6a:	40 91 9b 02 	lds	r20, 0x029B
    1c6e:	50 91 9c 02 	lds	r21, 0x029C
    1c72:	60 91 9d 02 	lds	r22, 0x029D
    1c76:	70 91 9e 02 	lds	r23, 0x029E
    1c7a:	8d b7       	in	r24, 0x3d	; 61
    1c7c:	9e b7       	in	r25, 0x3e	; 62
    1c7e:	08 97       	sbiw	r24, 0x08	; 8
    1c80:	0f b6       	in	r0, 0x3f	; 63
    1c82:	f8 94       	cli
    1c84:	9e bf       	out	0x3e, r25	; 62
    1c86:	0f be       	out	0x3f, r0	; 63
    1c88:	8d bf       	out	0x3d, r24	; 61
    1c8a:	ed b7       	in	r30, 0x3d	; 61
    1c8c:	fe b7       	in	r31, 0x3e	; 62
    1c8e:	31 96       	adiw	r30, 0x01	; 1
    1c90:	ad b7       	in	r26, 0x3d	; 61
    1c92:	be b7       	in	r27, 0x3e	; 62
    1c94:	11 96       	adiw	r26, 0x01	; 1
    1c96:	ac 92       	st	X, r10
    1c98:	11 97       	sbiw	r26, 0x01	; 1
    1c9a:	12 96       	adiw	r26, 0x02	; 2
    1c9c:	1c 93       	st	X, r17
    1c9e:	e2 82       	std	Z+2, r14	; 0x02
    1ca0:	f3 82       	std	Z+3, r15	; 0x03
    1ca2:	44 83       	std	Z+4, r20	; 0x04
    1ca4:	55 83       	std	Z+5, r21	; 0x05
    1ca6:	66 83       	std	Z+6, r22	; 0x06
    1ca8:	77 83       	std	Z+7, r23	; 0x07
    1caa:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(W_Span_Buf);
    1cae:	2d b7       	in	r18, 0x3d	; 61
    1cb0:	3e b7       	in	r19, 0x3e	; 62
    1cb2:	28 5f       	subi	r18, 0xF8	; 248
    1cb4:	3f 4f       	sbci	r19, 0xFF	; 255
    1cb6:	0f b6       	in	r0, 0x3f	; 63
    1cb8:	f8 94       	cli
    1cba:	3e bf       	out	0x3e, r19	; 62
    1cbc:	0f be       	out	0x3f, r0	; 63
    1cbe:	2d bf       	out	0x3d, r18	; 61
    1cc0:	8a 2d       	mov	r24, r10
    1cc2:	91 2f       	mov	r25, r17
    1cc4:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(13,1);
    1cc8:	8d e0       	ldi	r24, 0x0D	; 13
    1cca:	61 e0       	ldi	r22, 0x01	; 1
    1ccc:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    1cd0:	8f e0       	ldi	r24, 0x0F	; 15
    1cd2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    1cd6:	80 91 68 03 	lds	r24, 0x0368
    1cda:	90 91 69 03 	lds	r25, 0x0369
    1cde:	84 33       	cpi	r24, 0x34	; 52
    1ce0:	91 05       	cpc	r25, r1
    1ce2:	09 f4       	brne	.+2      	; 0x1ce6 <__stack+0xbe7>
    1ce4:	41 c0       	rjmp	.+130    	; 0x1d68 <__stack+0xc69>
    1ce6:	85 33       	cpi	r24, 0x35	; 53
    1ce8:	91 05       	cpc	r25, r1
    1cea:	8c f4       	brge	.+34     	; 0x1d0e <__stack+0xc0f>
    1cec:	81 33       	cpi	r24, 0x31	; 49
    1cee:	91 05       	cpc	r25, r1
    1cf0:	19 f1       	breq	.+70     	; 0x1d38 <__stack+0xc39>
    1cf2:	82 33       	cpi	r24, 0x32	; 50
    1cf4:	91 05       	cpc	r25, r1
    1cf6:	24 f4       	brge	.+8      	; 0x1d00 <__stack+0xc01>
    1cf8:	c0 97       	sbiw	r24, 0x30	; 48
    1cfa:	09 f0       	breq	.+2      	; 0x1cfe <__stack+0xbff>
    1cfc:	32 c1       	rjmp	.+612    	; 0x1f62 <__stack+0xe63>
    1cfe:	63 c0       	rjmp	.+198    	; 0x1dc6 <__stack+0xcc7>
    1d00:	82 33       	cpi	r24, 0x32	; 50
    1d02:	91 05       	cpc	r25, r1
    1d04:	09 f1       	breq	.+66     	; 0x1d48 <__stack+0xc49>
    1d06:	c3 97       	sbiw	r24, 0x33	; 51
    1d08:	09 f0       	breq	.+2      	; 0x1d0c <__stack+0xc0d>
    1d0a:	2b c1       	rjmp	.+598    	; 0x1f62 <__stack+0xe63>
    1d0c:	25 c0       	rjmp	.+74     	; 0x1d58 <__stack+0xc59>
    1d0e:	87 33       	cpi	r24, 0x37	; 55
    1d10:	91 05       	cpc	r25, r1
    1d12:	09 f4       	brne	.+2      	; 0x1d16 <__stack+0xc17>
    1d14:	40 c0       	rjmp	.+128    	; 0x1d96 <__stack+0xc97>
    1d16:	88 33       	cpi	r24, 0x38	; 56
    1d18:	91 05       	cpc	r25, r1
    1d1a:	3c f4       	brge	.+14     	; 0x1d2a <__stack+0xc2b>
    1d1c:	85 33       	cpi	r24, 0x35	; 53
    1d1e:	91 05       	cpc	r25, r1
    1d20:	51 f1       	breq	.+84     	; 0x1d76 <__stack+0xc77>
    1d22:	c6 97       	sbiw	r24, 0x36	; 54
    1d24:	09 f0       	breq	.+2      	; 0x1d28 <__stack+0xc29>
    1d26:	1d c1       	rjmp	.+570    	; 0x1f62 <__stack+0xe63>
    1d28:	2e c0       	rjmp	.+92     	; 0x1d86 <__stack+0xc87>
    1d2a:	88 33       	cpi	r24, 0x38	; 56
    1d2c:	91 05       	cpc	r25, r1
    1d2e:	d9 f1       	breq	.+118    	; 0x1da6 <__stack+0xca7>
    1d30:	c9 97       	sbiw	r24, 0x39	; 57
    1d32:	09 f0       	breq	.+2      	; 0x1d36 <__stack+0xc37>
    1d34:	16 c1       	rjmp	.+556    	; 0x1f62 <__stack+0xe63>
    1d36:	3f c0       	rjmp	.+126    	; 0x1db6 <__stack+0xcb7>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    1d38:	8c e0       	ldi	r24, 0x0C	; 12
    1d3a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[5] = '1';
    1d3e:	81 e3       	ldi	r24, 0x31	; 49
    1d40:	8e 83       	std	Y+6, r24	; 0x06
    1d42:	01 e0       	ldi	r16, 0x01	; 1
    1d44:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    1d48:	8c e0       	ldi	r24, 0x0C	; 12
    1d4a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[5] = '2';
    1d4e:	82 e3       	ldi	r24, 0x32	; 50
    1d50:	8e 83       	std	Y+6, r24	; 0x06
    1d52:	01 e0       	ldi	r16, 0x01	; 1
    1d54:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    1d58:	8c e0       	ldi	r24, 0x0C	; 12
    1d5a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[5] = '3';
    1d5e:	83 e3       	ldi	r24, 0x33	; 51
    1d60:	8e 83       	std	Y+6, r24	; 0x06
    1d62:	01 e0       	ldi	r16, 0x01	; 1
    1d64:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    1d68:	8c e0       	ldi	r24, 0x0C	; 12
    1d6a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[5] = '4';
    1d6e:	8e 82       	std	Y+6, r8	; 0x06
    1d70:	01 e0       	ldi	r16, 0x01	; 1
    1d72:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    1d76:	8c e0       	ldi	r24, 0x0C	; 12
    1d78:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     W_Span_Buf[5] = '5';
    1d7c:	85 e3       	ldi	r24, 0x35	; 53
    1d7e:	8e 83       	std	Y+6, r24	; 0x06
    1d80:	01 e0       	ldi	r16, 0x01	; 1
    1d82:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    1d86:	8c e0       	ldi	r24, 0x0C	; 12
    1d88:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[5] = '6';
    1d8c:	86 e3       	ldi	r24, 0x36	; 54
    1d8e:	8e 83       	std	Y+6, r24	; 0x06
    1d90:	01 e0       	ldi	r16, 0x01	; 1
    1d92:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    1d96:	8c e0       	ldi	r24, 0x0C	; 12
    1d98:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[5] = '7';
    1d9c:	87 e3       	ldi	r24, 0x37	; 55
    1d9e:	8e 83       	std	Y+6, r24	; 0x06
    1da0:	01 e0       	ldi	r16, 0x01	; 1
    1da2:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    1da6:	8c e0       	ldi	r24, 0x0C	; 12
    1da8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[5] = '8';
    1dac:	88 e3       	ldi	r24, 0x38	; 56
    1dae:	8e 83       	std	Y+6, r24	; 0x06
    1db0:	01 e0       	ldi	r16, 0x01	; 1
    1db2:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    1db6:	8c e0       	ldi	r24, 0x0C	; 12
    1db8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[5] = '9';
    1dbc:	89 e3       	ldi	r24, 0x39	; 57
    1dbe:	8e 83       	std	Y+6, r24	; 0x06
    1dc0:	01 e0       	ldi	r16, 0x01	; 1
    1dc2:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    1dc6:	8c e0       	ldi	r24, 0x0C	; 12
    1dc8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[5] = '0';
    1dcc:	80 e3       	ldi	r24, 0x30	; 48
    1dce:	8e 83       	std	Y+6, r24	; 0x06
    1dd0:	01 e0       	ldi	r16, 0x01	; 1
    1dd2:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 7:  W_Span = atof(W_Span_Buf);	 
    1dd6:	8a 2d       	mov	r24, r10
    1dd8:	91 2f       	mov	r25, r17
    1dda:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    1dde:	60 93 9b 02 	sts	0x029B, r22
    1de2:	70 93 9c 02 	sts	0x029C, r23
    1de6:	80 93 9d 02 	sts	0x029D, r24
    1dea:	90 93 9e 02 	sts	0x029E, r25
										 lcd_gotoxy(8,1);
    1dee:	88 e0       	ldi	r24, 0x08	; 8
    1df0:	61 e0       	ldi	r22, 0x01	; 1
    1df2:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
										 sprintf(W_Span_Buf,"%07.3f", W_Span);
    1df6:	40 91 9b 02 	lds	r20, 0x029B
    1dfa:	50 91 9c 02 	lds	r21, 0x029C
    1dfe:	60 91 9d 02 	lds	r22, 0x029D
    1e02:	70 91 9e 02 	lds	r23, 0x029E
    1e06:	8d b7       	in	r24, 0x3d	; 61
    1e08:	9e b7       	in	r25, 0x3e	; 62
    1e0a:	08 97       	sbiw	r24, 0x08	; 8
    1e0c:	0f b6       	in	r0, 0x3f	; 63
    1e0e:	f8 94       	cli
    1e10:	9e bf       	out	0x3e, r25	; 62
    1e12:	0f be       	out	0x3f, r0	; 63
    1e14:	8d bf       	out	0x3d, r24	; 61
    1e16:	ed b7       	in	r30, 0x3d	; 61
    1e18:	fe b7       	in	r31, 0x3e	; 62
    1e1a:	31 96       	adiw	r30, 0x01	; 1
    1e1c:	ad b7       	in	r26, 0x3d	; 61
    1e1e:	be b7       	in	r27, 0x3e	; 62
    1e20:	11 96       	adiw	r26, 0x01	; 1
    1e22:	ac 92       	st	X, r10
    1e24:	11 97       	sbiw	r26, 0x01	; 1
    1e26:	12 96       	adiw	r26, 0x02	; 2
    1e28:	1c 93       	st	X, r17
    1e2a:	e2 82       	std	Z+2, r14	; 0x02
    1e2c:	f3 82       	std	Z+3, r15	; 0x03
    1e2e:	44 83       	std	Z+4, r20	; 0x04
    1e30:	55 83       	std	Z+5, r21	; 0x05
    1e32:	66 83       	std	Z+6, r22	; 0x06
    1e34:	77 83       	std	Z+7, r23	; 0x07
    1e36:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(W_Span_Buf);
    1e3a:	2d b7       	in	r18, 0x3d	; 61
    1e3c:	3e b7       	in	r19, 0x3e	; 62
    1e3e:	28 5f       	subi	r18, 0xF8	; 248
    1e40:	3f 4f       	sbci	r19, 0xFF	; 255
    1e42:	0f b6       	in	r0, 0x3f	; 63
    1e44:	f8 94       	cli
    1e46:	3e bf       	out	0x3e, r19	; 62
    1e48:	0f be       	out	0x3f, r0	; 63
    1e4a:	2d bf       	out	0x3d, r18	; 61
    1e4c:	8a 2d       	mov	r24, r10
    1e4e:	91 2f       	mov	r25, r17
    1e50:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(14,1);
    1e54:	8e e0       	ldi	r24, 0x0E	; 14
    1e56:	61 e0       	ldi	r22, 0x01	; 1
    1e58:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    1e5c:	8f e0       	ldi	r24, 0x0F	; 15
    1e5e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    1e62:	80 91 68 03 	lds	r24, 0x0368
    1e66:	90 91 69 03 	lds	r25, 0x0369
    1e6a:	84 33       	cpi	r24, 0x34	; 52
    1e6c:	91 05       	cpc	r25, r1
    1e6e:	09 f4       	brne	.+2      	; 0x1e72 <__stack+0xd73>
    1e70:	41 c0       	rjmp	.+130    	; 0x1ef4 <__stack+0xdf5>
    1e72:	85 33       	cpi	r24, 0x35	; 53
    1e74:	91 05       	cpc	r25, r1
    1e76:	8c f4       	brge	.+34     	; 0x1e9a <__stack+0xd9b>
    1e78:	81 33       	cpi	r24, 0x31	; 49
    1e7a:	91 05       	cpc	r25, r1
    1e7c:	19 f1       	breq	.+70     	; 0x1ec4 <__stack+0xdc5>
    1e7e:	82 33       	cpi	r24, 0x32	; 50
    1e80:	91 05       	cpc	r25, r1
    1e82:	24 f4       	brge	.+8      	; 0x1e8c <__stack+0xd8d>
    1e84:	c0 97       	sbiw	r24, 0x30	; 48
    1e86:	09 f0       	breq	.+2      	; 0x1e8a <__stack+0xd8b>
    1e88:	6c c0       	rjmp	.+216    	; 0x1f62 <__stack+0xe63>
    1e8a:	63 c0       	rjmp	.+198    	; 0x1f52 <__stack+0xe53>
    1e8c:	82 33       	cpi	r24, 0x32	; 50
    1e8e:	91 05       	cpc	r25, r1
    1e90:	09 f1       	breq	.+66     	; 0x1ed4 <__stack+0xdd5>
    1e92:	c3 97       	sbiw	r24, 0x33	; 51
    1e94:	09 f0       	breq	.+2      	; 0x1e98 <__stack+0xd99>
    1e96:	65 c0       	rjmp	.+202    	; 0x1f62 <__stack+0xe63>
    1e98:	25 c0       	rjmp	.+74     	; 0x1ee4 <__stack+0xde5>
    1e9a:	87 33       	cpi	r24, 0x37	; 55
    1e9c:	91 05       	cpc	r25, r1
    1e9e:	09 f4       	brne	.+2      	; 0x1ea2 <__stack+0xda3>
    1ea0:	40 c0       	rjmp	.+128    	; 0x1f22 <__stack+0xe23>
    1ea2:	88 33       	cpi	r24, 0x38	; 56
    1ea4:	91 05       	cpc	r25, r1
    1ea6:	3c f4       	brge	.+14     	; 0x1eb6 <__stack+0xdb7>
    1ea8:	85 33       	cpi	r24, 0x35	; 53
    1eaa:	91 05       	cpc	r25, r1
    1eac:	51 f1       	breq	.+84     	; 0x1f02 <__stack+0xe03>
    1eae:	c6 97       	sbiw	r24, 0x36	; 54
    1eb0:	09 f0       	breq	.+2      	; 0x1eb4 <__stack+0xdb5>
    1eb2:	57 c0       	rjmp	.+174    	; 0x1f62 <__stack+0xe63>
    1eb4:	2e c0       	rjmp	.+92     	; 0x1f12 <__stack+0xe13>
    1eb6:	88 33       	cpi	r24, 0x38	; 56
    1eb8:	91 05       	cpc	r25, r1
    1eba:	d9 f1       	breq	.+118    	; 0x1f32 <__stack+0xe33>
    1ebc:	c9 97       	sbiw	r24, 0x39	; 57
    1ebe:	09 f0       	breq	.+2      	; 0x1ec2 <__stack+0xdc3>
    1ec0:	50 c0       	rjmp	.+160    	; 0x1f62 <__stack+0xe63>
    1ec2:	3f c0       	rjmp	.+126    	; 0x1f42 <__stack+0xe43>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    1ec4:	8c e0       	ldi	r24, 0x0C	; 12
    1ec6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[6] = '1';
    1eca:	81 e3       	ldi	r24, 0x31	; 49
    1ecc:	8f 83       	std	Y+7, r24	; 0x07
    1ece:	01 e0       	ldi	r16, 0x01	; 1
    1ed0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    1ed4:	8c e0       	ldi	r24, 0x0C	; 12
    1ed6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[6] = '2';
    1eda:	82 e3       	ldi	r24, 0x32	; 50
    1edc:	8f 83       	std	Y+7, r24	; 0x07
    1ede:	01 e0       	ldi	r16, 0x01	; 1
    1ee0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    1ee4:	8c e0       	ldi	r24, 0x0C	; 12
    1ee6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[6] = '3';
    1eea:	83 e3       	ldi	r24, 0x33	; 51
    1eec:	8f 83       	std	Y+7, r24	; 0x07
    1eee:	01 e0       	ldi	r16, 0x01	; 1
    1ef0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    1ef4:	8c e0       	ldi	r24, 0x0C	; 12
    1ef6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[6] = '4';
    1efa:	8f 82       	std	Y+7, r8	; 0x07
    1efc:	01 e0       	ldi	r16, 0x01	; 1
    1efe:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    1f02:	8c e0       	ldi	r24, 0x0C	; 12
    1f04:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     W_Span_Buf[6] = '5';
    1f08:	85 e3       	ldi	r24, 0x35	; 53
    1f0a:	8f 83       	std	Y+7, r24	; 0x07
    1f0c:	01 e0       	ldi	r16, 0x01	; 1
    1f0e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    1f12:	8c e0       	ldi	r24, 0x0C	; 12
    1f14:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 W_Span_Buf[6] = '6';
    1f18:	86 e3       	ldi	r24, 0x36	; 54
    1f1a:	8f 83       	std	Y+7, r24	; 0x07
    1f1c:	01 e0       	ldi	r16, 0x01	; 1
    1f1e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    1f22:	8c e0       	ldi	r24, 0x0C	; 12
    1f24:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[6] = '7';
    1f28:	87 e3       	ldi	r24, 0x37	; 55
    1f2a:	8f 83       	std	Y+7, r24	; 0x07
    1f2c:	01 e0       	ldi	r16, 0x01	; 1
    1f2e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    1f32:	8c e0       	ldi	r24, 0x0C	; 12
    1f34:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[6] = '8';
    1f38:	88 e3       	ldi	r24, 0x38	; 56
    1f3a:	8f 83       	std	Y+7, r24	; 0x07
    1f3c:	01 e0       	ldi	r16, 0x01	; 1
    1f3e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    1f42:	8c e0       	ldi	r24, 0x0C	; 12
    1f44:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[6] = '9';
    1f48:	89 e3       	ldi	r24, 0x39	; 57
    1f4a:	8f 83       	std	Y+7, r24	; 0x07
    1f4c:	01 e0       	ldi	r16, 0x01	; 1
    1f4e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    1f52:	8c e0       	ldi	r24, 0x0C	; 12
    1f54:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         W_Span_Buf[6] = '0';
    1f58:	80 e3       	ldi	r24, 0x30	; 48
    1f5a:	8f 83       	std	Y+7, r24	; 0x07
    1f5c:	01 e0       	ldi	r16, 0x01	; 1
    1f5e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    1f62:	01 e0       	ldi	r16, 0x01	; 1
								         break;
					        } 
		 
						    
					}
					if(ProcessDataPageCursor == 2)
    1f64:	3e ad       	ldd	r19, Y+62	; 0x3e
    1f66:	32 30       	cpi	r19, 0x02	; 2
    1f68:	09 f0       	breq	.+2      	; 0x1f6c <__stack+0xe6d>
    1f6a:	bd c4       	rjmp	.+2426   	; 0x28e6 <__stack+0x17e7>
					{
							//lcd_gotoxy(8,2);
				          	//lcd_command(LCD_DISP_ON_CURSOR_BLINK);
						   // USART0_Transmit_String(L_Offset_Buf);
						    switch (ProcessDataLineCursor)  // Main Menu Switch statement
    1f6c:	84 e0       	ldi	r24, 0x04	; 4
    1f6e:	98 16       	cp	r9, r24
    1f70:	09 f4       	brne	.+2      	; 0x1f74 <__stack+0xe75>
    1f72:	67 c2       	rjmp	.+1230   	; 0x2442 <__stack+0x1343>
    1f74:	89 15       	cp	r24, r9
    1f76:	68 f0       	brcs	.+26     	; 0x1f92 <__stack+0xe93>
    1f78:	92 e0       	ldi	r25, 0x02	; 2
    1f7a:	99 16       	cp	r9, r25
    1f7c:	09 f4       	brne	.+2      	; 0x1f80 <__stack+0xe81>
    1f7e:	db c0       	rjmp	.+438    	; 0x2136 <__stack+0x1037>
    1f80:	99 15       	cp	r25, r9
    1f82:	08 f4       	brcc	.+2      	; 0x1f86 <__stack+0xe87>
    1f84:	9b c1       	rjmp	.+822    	; 0x22bc <__stack+0x11bd>
    1f86:	a1 e0       	ldi	r26, 0x01	; 1
    1f88:	9a 16       	cp	r9, r26
    1f8a:	11 f0       	breq	.+4      	; 0x1f90 <__stack+0xe91>
    1f8c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    1f90:	0d c0       	rjmp	.+26     	; 0x1fac <__stack+0xead>
    1f92:	b6 e0       	ldi	r27, 0x06	; 6
    1f94:	9b 16       	cp	r9, r27
    1f96:	09 f4       	brne	.+2      	; 0x1f9a <__stack+0xe9b>
    1f98:	20 c3       	rjmp	.+1600   	; 0x25da <__stack+0x14db>
    1f9a:	9b 16       	cp	r9, r27
    1f9c:	08 f4       	brcc	.+2      	; 0x1fa0 <__stack+0xea1>
    1f9e:	5a c2       	rjmp	.+1204   	; 0x2454 <__stack+0x1355>
    1fa0:	27 e0       	ldi	r18, 0x07	; 7
    1fa2:	92 16       	cp	r9, r18
    1fa4:	11 f0       	breq	.+4      	; 0x1faa <__stack+0xeab>
    1fa6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    1faa:	da c3       	rjmp	.+1972   	; 0x2760 <__stack+0x1661>
						    {
								case 1:  L_Offset = atof(L_Offset_Buf);	 
    1fac:	22 96       	adiw	r28, 0x02	; 2
    1fae:	8f ad       	ldd	r24, Y+63	; 0x3f
    1fb0:	22 97       	sbiw	r28, 0x02	; 2
    1fb2:	9c 2d       	mov	r25, r12
    1fb4:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    1fb8:	60 93 8f 02 	sts	0x028F, r22
    1fbc:	70 93 90 02 	sts	0x0290, r23
    1fc0:	80 93 91 02 	sts	0x0291, r24
    1fc4:	90 93 92 02 	sts	0x0292, r25
										 lcd_gotoxy(8,2);
    1fc8:	88 e0       	ldi	r24, 0x08	; 8
    1fca:	62 e0       	ldi	r22, 0x02	; 2
    1fcc:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(L_Offset_Buf,"%07.3f", L_Offset);
    1fd0:	40 91 8f 02 	lds	r20, 0x028F
    1fd4:	50 91 90 02 	lds	r21, 0x0290
    1fd8:	60 91 91 02 	lds	r22, 0x0291
    1fdc:	70 91 92 02 	lds	r23, 0x0292
    1fe0:	8d b7       	in	r24, 0x3d	; 61
    1fe2:	9e b7       	in	r25, 0x3e	; 62
    1fe4:	08 97       	sbiw	r24, 0x08	; 8
    1fe6:	0f b6       	in	r0, 0x3f	; 63
    1fe8:	f8 94       	cli
    1fea:	9e bf       	out	0x3e, r25	; 62
    1fec:	0f be       	out	0x3f, r0	; 63
    1fee:	8d bf       	out	0x3d, r24	; 61
    1ff0:	ed b7       	in	r30, 0x3d	; 61
    1ff2:	fe b7       	in	r31, 0x3e	; 62
    1ff4:	31 96       	adiw	r30, 0x01	; 1
    1ff6:	22 96       	adiw	r28, 0x02	; 2
    1ff8:	2f ad       	ldd	r18, Y+63	; 0x3f
    1ffa:	22 97       	sbiw	r28, 0x02	; 2
    1ffc:	ad b7       	in	r26, 0x3d	; 61
    1ffe:	be b7       	in	r27, 0x3e	; 62
    2000:	11 96       	adiw	r26, 0x01	; 1
    2002:	2c 93       	st	X, r18
    2004:	11 97       	sbiw	r26, 0x01	; 1
    2006:	12 96       	adiw	r26, 0x02	; 2
    2008:	cc 92       	st	X, r12
    200a:	e2 82       	std	Z+2, r14	; 0x02
    200c:	f3 82       	std	Z+3, r15	; 0x03
    200e:	44 83       	std	Z+4, r20	; 0x04
    2010:	55 83       	std	Z+5, r21	; 0x05
    2012:	66 83       	std	Z+6, r22	; 0x06
    2014:	77 83       	std	Z+7, r23	; 0x07
    2016:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(L_Offset_Buf);
    201a:	8d b7       	in	r24, 0x3d	; 61
    201c:	9e b7       	in	r25, 0x3e	; 62
    201e:	08 96       	adiw	r24, 0x08	; 8
    2020:	0f b6       	in	r0, 0x3f	; 63
    2022:	f8 94       	cli
    2024:	9e bf       	out	0x3e, r25	; 62
    2026:	0f be       	out	0x3f, r0	; 63
    2028:	8d bf       	out	0x3d, r24	; 61
    202a:	22 96       	adiw	r28, 0x02	; 2
    202c:	8f ad       	ldd	r24, Y+63	; 0x3f
    202e:	22 97       	sbiw	r28, 0x02	; 2
    2030:	9c 2d       	mov	r25, r12
    2032:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(8,2);
    2036:	88 e0       	ldi	r24, 0x08	; 8
    2038:	62 e0       	ldi	r22, 0x02	; 2
    203a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				          				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    203e:	8f e0       	ldi	r24, 0x0F	; 15
    2040:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										  switch (key)  // Main Menu Switch statement
    2044:	80 91 68 03 	lds	r24, 0x0368
    2048:	90 91 69 03 	lds	r25, 0x0369
    204c:	84 33       	cpi	r24, 0x34	; 52
    204e:	91 05       	cpc	r25, r1
    2050:	09 f4       	brne	.+2      	; 0x2054 <__stack+0xf55>
    2052:	41 c0       	rjmp	.+130    	; 0x20d6 <__stack+0xfd7>
    2054:	85 33       	cpi	r24, 0x35	; 53
    2056:	91 05       	cpc	r25, r1
    2058:	9c f4       	brge	.+38     	; 0x2080 <__stack+0xf81>
    205a:	81 33       	cpi	r24, 0x31	; 49
    205c:	91 05       	cpc	r25, r1
    205e:	31 f1       	breq	.+76     	; 0x20ac <__stack+0xfad>
    2060:	82 33       	cpi	r24, 0x32	; 50
    2062:	91 05       	cpc	r25, r1
    2064:	2c f4       	brge	.+10     	; 0x2070 <__stack+0xf71>
    2066:	c0 97       	sbiw	r24, 0x30	; 48
    2068:	11 f0       	breq	.+4      	; 0x206e <__stack+0xf6f>
    206a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    206e:	5c c0       	rjmp	.+184    	; 0x2128 <__stack+0x1029>
    2070:	82 33       	cpi	r24, 0x32	; 50
    2072:	91 05       	cpc	r25, r1
    2074:	11 f1       	breq	.+68     	; 0x20ba <__stack+0xfbb>
    2076:	c3 97       	sbiw	r24, 0x33	; 51
    2078:	11 f0       	breq	.+4      	; 0x207e <__stack+0xf7f>
    207a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    207e:	24 c0       	rjmp	.+72     	; 0x20c8 <__stack+0xfc9>
    2080:	87 33       	cpi	r24, 0x37	; 55
    2082:	91 05       	cpc	r25, r1
    2084:	e1 f1       	breq	.+120    	; 0x20fe <__stack+0xfff>
    2086:	88 33       	cpi	r24, 0x38	; 56
    2088:	91 05       	cpc	r25, r1
    208a:	44 f4       	brge	.+16     	; 0x209c <__stack+0xf9d>
    208c:	85 33       	cpi	r24, 0x35	; 53
    208e:	91 05       	cpc	r25, r1
    2090:	41 f1       	breq	.+80     	; 0x20e2 <__stack+0xfe3>
    2092:	c6 97       	sbiw	r24, 0x36	; 54
    2094:	11 f0       	breq	.+4      	; 0x209a <__stack+0xf9b>
    2096:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    209a:	2a c0       	rjmp	.+84     	; 0x20f0 <__stack+0xff1>
    209c:	88 33       	cpi	r24, 0x38	; 56
    209e:	91 05       	cpc	r25, r1
    20a0:	a9 f1       	breq	.+106    	; 0x210c <__stack+0x100d>
    20a2:	c9 97       	sbiw	r24, 0x39	; 57
    20a4:	11 f0       	breq	.+4      	; 0x20aa <__stack+0xfab>
    20a6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    20aa:	37 c0       	rjmp	.+110    	; 0x211a <__stack+0x101b>
										    {
											 
												case '1':lcd_command(LCD_DISP_ON);
    20ac:	8c e0       	ldi	r24, 0x0C	; 12
    20ae:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[0] = '1';
    20b2:	81 e3       	ldi	r24, 0x31	; 49
    20b4:	8b 87       	std	Y+11, r24	; 0x0b
    20b6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    20ba:	8c e0       	ldi	r24, 0x0C	; 12
    20bc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[0] = '2';
    20c0:	82 e3       	ldi	r24, 0x32	; 50
    20c2:	8b 87       	std	Y+11, r24	; 0x0b
    20c4:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    20c8:	8c e0       	ldi	r24, 0x0C	; 12
    20ca:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[0] = '3';
    20ce:	83 e3       	ldi	r24, 0x33	; 51
    20d0:	8b 87       	std	Y+11, r24	; 0x0b
    20d2:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    20d6:	8c e0       	ldi	r24, 0x0C	; 12
    20d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[0] = '4';
    20dc:	8b 86       	std	Y+11, r8	; 0x0b
    20de:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    20e2:	8c e0       	ldi	r24, 0x0C	; 12
    20e4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     L_Offset_Buf[0] = '5';
    20e8:	85 e3       	ldi	r24, 0x35	; 53
    20ea:	8b 87       	std	Y+11, r24	; 0x0b
    20ec:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    20f0:	8c e0       	ldi	r24, 0x0C	; 12
    20f2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[0] = '6';
    20f6:	86 e3       	ldi	r24, 0x36	; 54
    20f8:	8b 87       	std	Y+11, r24	; 0x0b
    20fa:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    20fe:	8c e0       	ldi	r24, 0x0C	; 12
    2100:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[0] = '7';
    2104:	87 e3       	ldi	r24, 0x37	; 55
    2106:	8b 87       	std	Y+11, r24	; 0x0b
    2108:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    210c:	8c e0       	ldi	r24, 0x0C	; 12
    210e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[0] = '8';
    2112:	88 e3       	ldi	r24, 0x38	; 56
    2114:	8b 87       	std	Y+11, r24	; 0x0b
    2116:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    211a:	8c e0       	ldi	r24, 0x0C	; 12
    211c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[0] = '9';
    2120:	89 e3       	ldi	r24, 0x39	; 57
    2122:	8b 87       	std	Y+11, r24	; 0x0b
    2124:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    2128:	8c e0       	ldi	r24, 0x0C	; 12
    212a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[0] = '0';
    212e:	80 e3       	ldi	r24, 0x30	; 48
    2130:	8b 87       	std	Y+11, r24	; 0x0b
    2132:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
											 }									
								         break;
								case 2:  L_Offset = atof(L_Offset_Buf);	 
    2136:	22 96       	adiw	r28, 0x02	; 2
    2138:	8f ad       	ldd	r24, Y+63	; 0x3f
    213a:	22 97       	sbiw	r28, 0x02	; 2
    213c:	9c 2d       	mov	r25, r12
    213e:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    2142:	60 93 8f 02 	sts	0x028F, r22
    2146:	70 93 90 02 	sts	0x0290, r23
    214a:	80 93 91 02 	sts	0x0291, r24
    214e:	90 93 92 02 	sts	0x0292, r25
										 lcd_gotoxy(8,2);
    2152:	88 e0       	ldi	r24, 0x08	; 8
    2154:	62 e0       	ldi	r22, 0x02	; 2
    2156:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(L_Offset_Buf,"%07.3f", L_Offset);
    215a:	40 91 8f 02 	lds	r20, 0x028F
    215e:	50 91 90 02 	lds	r21, 0x0290
    2162:	60 91 91 02 	lds	r22, 0x0291
    2166:	70 91 92 02 	lds	r23, 0x0292
    216a:	ad b7       	in	r26, 0x3d	; 61
    216c:	be b7       	in	r27, 0x3e	; 62
    216e:	18 97       	sbiw	r26, 0x08	; 8
    2170:	0f b6       	in	r0, 0x3f	; 63
    2172:	f8 94       	cli
    2174:	be bf       	out	0x3e, r27	; 62
    2176:	0f be       	out	0x3f, r0	; 63
    2178:	ad bf       	out	0x3d, r26	; 61
    217a:	ed b7       	in	r30, 0x3d	; 61
    217c:	fe b7       	in	r31, 0x3e	; 62
    217e:	31 96       	adiw	r30, 0x01	; 1
    2180:	22 96       	adiw	r28, 0x02	; 2
    2182:	2f ad       	ldd	r18, Y+63	; 0x3f
    2184:	22 97       	sbiw	r28, 0x02	; 2
    2186:	11 96       	adiw	r26, 0x01	; 1
    2188:	2c 93       	st	X, r18
    218a:	11 97       	sbiw	r26, 0x01	; 1
    218c:	12 96       	adiw	r26, 0x02	; 2
    218e:	cc 92       	st	X, r12
    2190:	e2 82       	std	Z+2, r14	; 0x02
    2192:	f3 82       	std	Z+3, r15	; 0x03
    2194:	44 83       	std	Z+4, r20	; 0x04
    2196:	55 83       	std	Z+5, r21	; 0x05
    2198:	66 83       	std	Z+6, r22	; 0x06
    219a:	77 83       	std	Z+7, r23	; 0x07
    219c:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(L_Offset_Buf);
    21a0:	8d b7       	in	r24, 0x3d	; 61
    21a2:	9e b7       	in	r25, 0x3e	; 62
    21a4:	08 96       	adiw	r24, 0x08	; 8
    21a6:	0f b6       	in	r0, 0x3f	; 63
    21a8:	f8 94       	cli
    21aa:	9e bf       	out	0x3e, r25	; 62
    21ac:	0f be       	out	0x3f, r0	; 63
    21ae:	8d bf       	out	0x3d, r24	; 61
    21b0:	22 96       	adiw	r28, 0x02	; 2
    21b2:	8f ad       	ldd	r24, Y+63	; 0x3f
    21b4:	22 97       	sbiw	r28, 0x02	; 2
    21b6:	9c 2d       	mov	r25, r12
    21b8:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(9,2);
    21bc:	89 e0       	ldi	r24, 0x09	; 9
    21be:	62 e0       	ldi	r22, 0x02	; 2
    21c0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    21c4:	8f e0       	ldi	r24, 0x0F	; 15
    21c6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    21ca:	80 91 68 03 	lds	r24, 0x0368
    21ce:	90 91 69 03 	lds	r25, 0x0369
    21d2:	84 33       	cpi	r24, 0x34	; 52
    21d4:	91 05       	cpc	r25, r1
    21d6:	09 f4       	brne	.+2      	; 0x21da <__stack+0x10db>
    21d8:	41 c0       	rjmp	.+130    	; 0x225c <__stack+0x115d>
    21da:	85 33       	cpi	r24, 0x35	; 53
    21dc:	91 05       	cpc	r25, r1
    21de:	9c f4       	brge	.+38     	; 0x2206 <__stack+0x1107>
    21e0:	81 33       	cpi	r24, 0x31	; 49
    21e2:	91 05       	cpc	r25, r1
    21e4:	31 f1       	breq	.+76     	; 0x2232 <__stack+0x1133>
    21e6:	82 33       	cpi	r24, 0x32	; 50
    21e8:	91 05       	cpc	r25, r1
    21ea:	2c f4       	brge	.+10     	; 0x21f6 <__stack+0x10f7>
    21ec:	c0 97       	sbiw	r24, 0x30	; 48
    21ee:	11 f0       	breq	.+4      	; 0x21f4 <__stack+0x10f5>
    21f0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    21f4:	5c c0       	rjmp	.+184    	; 0x22ae <__stack+0x11af>
    21f6:	82 33       	cpi	r24, 0x32	; 50
    21f8:	91 05       	cpc	r25, r1
    21fa:	11 f1       	breq	.+68     	; 0x2240 <__stack+0x1141>
    21fc:	c3 97       	sbiw	r24, 0x33	; 51
    21fe:	11 f0       	breq	.+4      	; 0x2204 <__stack+0x1105>
    2200:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2204:	24 c0       	rjmp	.+72     	; 0x224e <__stack+0x114f>
    2206:	87 33       	cpi	r24, 0x37	; 55
    2208:	91 05       	cpc	r25, r1
    220a:	e1 f1       	breq	.+120    	; 0x2284 <__stack+0x1185>
    220c:	88 33       	cpi	r24, 0x38	; 56
    220e:	91 05       	cpc	r25, r1
    2210:	44 f4       	brge	.+16     	; 0x2222 <__stack+0x1123>
    2212:	85 33       	cpi	r24, 0x35	; 53
    2214:	91 05       	cpc	r25, r1
    2216:	41 f1       	breq	.+80     	; 0x2268 <__stack+0x1169>
    2218:	c6 97       	sbiw	r24, 0x36	; 54
    221a:	11 f0       	breq	.+4      	; 0x2220 <__stack+0x1121>
    221c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2220:	2a c0       	rjmp	.+84     	; 0x2276 <__stack+0x1177>
    2222:	88 33       	cpi	r24, 0x38	; 56
    2224:	91 05       	cpc	r25, r1
    2226:	a9 f1       	breq	.+106    	; 0x2292 <__stack+0x1193>
    2228:	c9 97       	sbiw	r24, 0x39	; 57
    222a:	11 f0       	breq	.+4      	; 0x2230 <__stack+0x1131>
    222c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2230:	37 c0       	rjmp	.+110    	; 0x22a0 <__stack+0x11a1>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    2232:	8c e0       	ldi	r24, 0x0C	; 12
    2234:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[1] = '1';
    2238:	81 e3       	ldi	r24, 0x31	; 49
    223a:	8c 87       	std	Y+12, r24	; 0x0c
    223c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    2240:	8c e0       	ldi	r24, 0x0C	; 12
    2242:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[1] = '2';
    2246:	82 e3       	ldi	r24, 0x32	; 50
    2248:	8c 87       	std	Y+12, r24	; 0x0c
    224a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    224e:	8c e0       	ldi	r24, 0x0C	; 12
    2250:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[1] = '3';
    2254:	83 e3       	ldi	r24, 0x33	; 51
    2256:	8c 87       	std	Y+12, r24	; 0x0c
    2258:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    225c:	8c e0       	ldi	r24, 0x0C	; 12
    225e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[1] = '4';
    2262:	8c 86       	std	Y+12, r8	; 0x0c
    2264:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    2268:	8c e0       	ldi	r24, 0x0C	; 12
    226a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     L_Offset_Buf[1] = '5';
    226e:	85 e3       	ldi	r24, 0x35	; 53
    2270:	8c 87       	std	Y+12, r24	; 0x0c
    2272:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    2276:	8c e0       	ldi	r24, 0x0C	; 12
    2278:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[1] = '6';
    227c:	86 e3       	ldi	r24, 0x36	; 54
    227e:	8c 87       	std	Y+12, r24	; 0x0c
    2280:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    2284:	8c e0       	ldi	r24, 0x0C	; 12
    2286:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[1] = '7';
    228a:	87 e3       	ldi	r24, 0x37	; 55
    228c:	8c 87       	std	Y+12, r24	; 0x0c
    228e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    2292:	8c e0       	ldi	r24, 0x0C	; 12
    2294:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[1] = '8';
    2298:	88 e3       	ldi	r24, 0x38	; 56
    229a:	8c 87       	std	Y+12, r24	; 0x0c
    229c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    22a0:	8c e0       	ldi	r24, 0x0C	; 12
    22a2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[1] = '9';
    22a6:	89 e3       	ldi	r24, 0x39	; 57
    22a8:	8c 87       	std	Y+12, r24	; 0x0c
    22aa:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    22ae:	8c e0       	ldi	r24, 0x0C	; 12
    22b0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[1] = '0';
    22b4:	80 e3       	ldi	r24, 0x30	; 48
    22b6:	8c 87       	std	Y+12, r24	; 0x0c
    22b8:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 3:  L_Offset = atof(L_Offset_Buf);	 
    22bc:	22 96       	adiw	r28, 0x02	; 2
    22be:	8f ad       	ldd	r24, Y+63	; 0x3f
    22c0:	22 97       	sbiw	r28, 0x02	; 2
    22c2:	9c 2d       	mov	r25, r12
    22c4:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    22c8:	60 93 8f 02 	sts	0x028F, r22
    22cc:	70 93 90 02 	sts	0x0290, r23
    22d0:	80 93 91 02 	sts	0x0291, r24
    22d4:	90 93 92 02 	sts	0x0292, r25
										 lcd_gotoxy(8,2);
    22d8:	88 e0       	ldi	r24, 0x08	; 8
    22da:	62 e0       	ldi	r22, 0x02	; 2
    22dc:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(L_Offset_Buf,"%07.3f", L_Offset);
    22e0:	40 91 8f 02 	lds	r20, 0x028F
    22e4:	50 91 90 02 	lds	r21, 0x0290
    22e8:	60 91 91 02 	lds	r22, 0x0291
    22ec:	70 91 92 02 	lds	r23, 0x0292
    22f0:	ad b7       	in	r26, 0x3d	; 61
    22f2:	be b7       	in	r27, 0x3e	; 62
    22f4:	18 97       	sbiw	r26, 0x08	; 8
    22f6:	0f b6       	in	r0, 0x3f	; 63
    22f8:	f8 94       	cli
    22fa:	be bf       	out	0x3e, r27	; 62
    22fc:	0f be       	out	0x3f, r0	; 63
    22fe:	ad bf       	out	0x3d, r26	; 61
    2300:	ed b7       	in	r30, 0x3d	; 61
    2302:	fe b7       	in	r31, 0x3e	; 62
    2304:	31 96       	adiw	r30, 0x01	; 1
    2306:	22 96       	adiw	r28, 0x02	; 2
    2308:	2f ad       	ldd	r18, Y+63	; 0x3f
    230a:	22 97       	sbiw	r28, 0x02	; 2
    230c:	11 96       	adiw	r26, 0x01	; 1
    230e:	2c 93       	st	X, r18
    2310:	11 97       	sbiw	r26, 0x01	; 1
    2312:	12 96       	adiw	r26, 0x02	; 2
    2314:	cc 92       	st	X, r12
    2316:	e2 82       	std	Z+2, r14	; 0x02
    2318:	f3 82       	std	Z+3, r15	; 0x03
    231a:	44 83       	std	Z+4, r20	; 0x04
    231c:	55 83       	std	Z+5, r21	; 0x05
    231e:	66 83       	std	Z+6, r22	; 0x06
    2320:	77 83       	std	Z+7, r23	; 0x07
    2322:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(L_Offset_Buf);
    2326:	8d b7       	in	r24, 0x3d	; 61
    2328:	9e b7       	in	r25, 0x3e	; 62
    232a:	08 96       	adiw	r24, 0x08	; 8
    232c:	0f b6       	in	r0, 0x3f	; 63
    232e:	f8 94       	cli
    2330:	9e bf       	out	0x3e, r25	; 62
    2332:	0f be       	out	0x3f, r0	; 63
    2334:	8d bf       	out	0x3d, r24	; 61
    2336:	22 96       	adiw	r28, 0x02	; 2
    2338:	8f ad       	ldd	r24, Y+63	; 0x3f
    233a:	22 97       	sbiw	r28, 0x02	; 2
    233c:	9c 2d       	mov	r25, r12
    233e:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(10,2);
    2342:	8a e0       	ldi	r24, 0x0A	; 10
    2344:	62 e0       	ldi	r22, 0x02	; 2
    2346:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    234a:	8f e0       	ldi	r24, 0x0F	; 15
    234c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    2350:	80 91 68 03 	lds	r24, 0x0368
    2354:	90 91 69 03 	lds	r25, 0x0369
    2358:	84 33       	cpi	r24, 0x34	; 52
    235a:	91 05       	cpc	r25, r1
    235c:	09 f4       	brne	.+2      	; 0x2360 <__stack+0x1261>
    235e:	41 c0       	rjmp	.+130    	; 0x23e2 <__stack+0x12e3>
    2360:	85 33       	cpi	r24, 0x35	; 53
    2362:	91 05       	cpc	r25, r1
    2364:	9c f4       	brge	.+38     	; 0x238c <__stack+0x128d>
    2366:	81 33       	cpi	r24, 0x31	; 49
    2368:	91 05       	cpc	r25, r1
    236a:	31 f1       	breq	.+76     	; 0x23b8 <__stack+0x12b9>
    236c:	82 33       	cpi	r24, 0x32	; 50
    236e:	91 05       	cpc	r25, r1
    2370:	2c f4       	brge	.+10     	; 0x237c <__stack+0x127d>
    2372:	c0 97       	sbiw	r24, 0x30	; 48
    2374:	11 f0       	breq	.+4      	; 0x237a <__stack+0x127b>
    2376:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    237a:	5c c0       	rjmp	.+184    	; 0x2434 <__stack+0x1335>
    237c:	82 33       	cpi	r24, 0x32	; 50
    237e:	91 05       	cpc	r25, r1
    2380:	11 f1       	breq	.+68     	; 0x23c6 <__stack+0x12c7>
    2382:	c3 97       	sbiw	r24, 0x33	; 51
    2384:	11 f0       	breq	.+4      	; 0x238a <__stack+0x128b>
    2386:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    238a:	24 c0       	rjmp	.+72     	; 0x23d4 <__stack+0x12d5>
    238c:	87 33       	cpi	r24, 0x37	; 55
    238e:	91 05       	cpc	r25, r1
    2390:	e1 f1       	breq	.+120    	; 0x240a <__stack+0x130b>
    2392:	88 33       	cpi	r24, 0x38	; 56
    2394:	91 05       	cpc	r25, r1
    2396:	44 f4       	brge	.+16     	; 0x23a8 <__stack+0x12a9>
    2398:	85 33       	cpi	r24, 0x35	; 53
    239a:	91 05       	cpc	r25, r1
    239c:	41 f1       	breq	.+80     	; 0x23ee <__stack+0x12ef>
    239e:	c6 97       	sbiw	r24, 0x36	; 54
    23a0:	11 f0       	breq	.+4      	; 0x23a6 <__stack+0x12a7>
    23a2:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    23a6:	2a c0       	rjmp	.+84     	; 0x23fc <__stack+0x12fd>
    23a8:	88 33       	cpi	r24, 0x38	; 56
    23aa:	91 05       	cpc	r25, r1
    23ac:	a9 f1       	breq	.+106    	; 0x2418 <__stack+0x1319>
    23ae:	c9 97       	sbiw	r24, 0x39	; 57
    23b0:	11 f0       	breq	.+4      	; 0x23b6 <__stack+0x12b7>
    23b2:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    23b6:	37 c0       	rjmp	.+110    	; 0x2426 <__stack+0x1327>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    23b8:	8c e0       	ldi	r24, 0x0C	; 12
    23ba:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[2] = '1';
    23be:	81 e3       	ldi	r24, 0x31	; 49
    23c0:	8d 87       	std	Y+13, r24	; 0x0d
    23c2:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    23c6:	8c e0       	ldi	r24, 0x0C	; 12
    23c8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[2] = '2';
    23cc:	82 e3       	ldi	r24, 0x32	; 50
    23ce:	8d 87       	std	Y+13, r24	; 0x0d
    23d0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    23d4:	8c e0       	ldi	r24, 0x0C	; 12
    23d6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[2] = '3';
    23da:	83 e3       	ldi	r24, 0x33	; 51
    23dc:	8d 87       	std	Y+13, r24	; 0x0d
    23de:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    23e2:	8c e0       	ldi	r24, 0x0C	; 12
    23e4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[2] = '4';
    23e8:	8d 86       	std	Y+13, r8	; 0x0d
    23ea:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    23ee:	8c e0       	ldi	r24, 0x0C	; 12
    23f0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     L_Offset_Buf[2] = '5';
    23f4:	85 e3       	ldi	r24, 0x35	; 53
    23f6:	8d 87       	std	Y+13, r24	; 0x0d
    23f8:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    23fc:	8c e0       	ldi	r24, 0x0C	; 12
    23fe:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[2] = '6';
    2402:	86 e3       	ldi	r24, 0x36	; 54
    2404:	8d 87       	std	Y+13, r24	; 0x0d
    2406:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    240a:	8c e0       	ldi	r24, 0x0C	; 12
    240c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[2] = '7';
    2410:	87 e3       	ldi	r24, 0x37	; 55
    2412:	8d 87       	std	Y+13, r24	; 0x0d
    2414:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    2418:	8c e0       	ldi	r24, 0x0C	; 12
    241a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[2] = '8';
    241e:	88 e3       	ldi	r24, 0x38	; 56
    2420:	8d 87       	std	Y+13, r24	; 0x0d
    2422:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    2426:	8c e0       	ldi	r24, 0x0C	; 12
    2428:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[2] = '9';
    242c:	89 e3       	ldi	r24, 0x39	; 57
    242e:	8d 87       	std	Y+13, r24	; 0x0d
    2430:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    2434:	8c e0       	ldi	r24, 0x0C	; 12
    2436:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[2] = '0';
    243a:	80 e3       	ldi	r24, 0x30	; 48
    243c:	8d 87       	std	Y+13, r24	; 0x0d
    243e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 4:  lcd_gotoxy(11,2);
    2442:	8b e0       	ldi	r24, 0x0B	; 11
    2444:	62 e0       	ldi	r22, 0x02	; 2
    2446:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    244a:	8f e0       	ldi	r24, 0x0F	; 15
    244c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
    2450:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
								         break;
								case 5: L_Offset = atof(L_Offset_Buf);	 
    2454:	22 96       	adiw	r28, 0x02	; 2
    2456:	8f ad       	ldd	r24, Y+63	; 0x3f
    2458:	22 97       	sbiw	r28, 0x02	; 2
    245a:	9c 2d       	mov	r25, r12
    245c:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    2460:	60 93 8f 02 	sts	0x028F, r22
    2464:	70 93 90 02 	sts	0x0290, r23
    2468:	80 93 91 02 	sts	0x0291, r24
    246c:	90 93 92 02 	sts	0x0292, r25
										 lcd_gotoxy(8,2);
    2470:	88 e0       	ldi	r24, 0x08	; 8
    2472:	62 e0       	ldi	r22, 0x02	; 2
    2474:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(L_Offset_Buf,"%07.3f", L_Offset);
    2478:	40 91 8f 02 	lds	r20, 0x028F
    247c:	50 91 90 02 	lds	r21, 0x0290
    2480:	60 91 91 02 	lds	r22, 0x0291
    2484:	70 91 92 02 	lds	r23, 0x0292
    2488:	ad b7       	in	r26, 0x3d	; 61
    248a:	be b7       	in	r27, 0x3e	; 62
    248c:	18 97       	sbiw	r26, 0x08	; 8
    248e:	0f b6       	in	r0, 0x3f	; 63
    2490:	f8 94       	cli
    2492:	be bf       	out	0x3e, r27	; 62
    2494:	0f be       	out	0x3f, r0	; 63
    2496:	ad bf       	out	0x3d, r26	; 61
    2498:	ed b7       	in	r30, 0x3d	; 61
    249a:	fe b7       	in	r31, 0x3e	; 62
    249c:	31 96       	adiw	r30, 0x01	; 1
    249e:	22 96       	adiw	r28, 0x02	; 2
    24a0:	2f ad       	ldd	r18, Y+63	; 0x3f
    24a2:	22 97       	sbiw	r28, 0x02	; 2
    24a4:	11 96       	adiw	r26, 0x01	; 1
    24a6:	2c 93       	st	X, r18
    24a8:	11 97       	sbiw	r26, 0x01	; 1
    24aa:	12 96       	adiw	r26, 0x02	; 2
    24ac:	cc 92       	st	X, r12
    24ae:	e2 82       	std	Z+2, r14	; 0x02
    24b0:	f3 82       	std	Z+3, r15	; 0x03
    24b2:	44 83       	std	Z+4, r20	; 0x04
    24b4:	55 83       	std	Z+5, r21	; 0x05
    24b6:	66 83       	std	Z+6, r22	; 0x06
    24b8:	77 83       	std	Z+7, r23	; 0x07
    24ba:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(L_Offset_Buf);
    24be:	8d b7       	in	r24, 0x3d	; 61
    24c0:	9e b7       	in	r25, 0x3e	; 62
    24c2:	08 96       	adiw	r24, 0x08	; 8
    24c4:	0f b6       	in	r0, 0x3f	; 63
    24c6:	f8 94       	cli
    24c8:	9e bf       	out	0x3e, r25	; 62
    24ca:	0f be       	out	0x3f, r0	; 63
    24cc:	8d bf       	out	0x3d, r24	; 61
    24ce:	22 96       	adiw	r28, 0x02	; 2
    24d0:	8f ad       	ldd	r24, Y+63	; 0x3f
    24d2:	22 97       	sbiw	r28, 0x02	; 2
    24d4:	9c 2d       	mov	r25, r12
    24d6:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(12,2);
    24da:	8c e0       	ldi	r24, 0x0C	; 12
    24dc:	62 e0       	ldi	r22, 0x02	; 2
    24de:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    24e2:	8f e0       	ldi	r24, 0x0F	; 15
    24e4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    24e8:	80 91 68 03 	lds	r24, 0x0368
    24ec:	90 91 69 03 	lds	r25, 0x0369
    24f0:	84 33       	cpi	r24, 0x34	; 52
    24f2:	91 05       	cpc	r25, r1
    24f4:	09 f4       	brne	.+2      	; 0x24f8 <__stack+0x13f9>
    24f6:	41 c0       	rjmp	.+130    	; 0x257a <__stack+0x147b>
    24f8:	85 33       	cpi	r24, 0x35	; 53
    24fa:	91 05       	cpc	r25, r1
    24fc:	9c f4       	brge	.+38     	; 0x2524 <__stack+0x1425>
    24fe:	81 33       	cpi	r24, 0x31	; 49
    2500:	91 05       	cpc	r25, r1
    2502:	31 f1       	breq	.+76     	; 0x2550 <__stack+0x1451>
    2504:	82 33       	cpi	r24, 0x32	; 50
    2506:	91 05       	cpc	r25, r1
    2508:	2c f4       	brge	.+10     	; 0x2514 <__stack+0x1415>
    250a:	c0 97       	sbiw	r24, 0x30	; 48
    250c:	11 f0       	breq	.+4      	; 0x2512 <__stack+0x1413>
    250e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2512:	5c c0       	rjmp	.+184    	; 0x25cc <__stack+0x14cd>
    2514:	82 33       	cpi	r24, 0x32	; 50
    2516:	91 05       	cpc	r25, r1
    2518:	11 f1       	breq	.+68     	; 0x255e <__stack+0x145f>
    251a:	c3 97       	sbiw	r24, 0x33	; 51
    251c:	11 f0       	breq	.+4      	; 0x2522 <__stack+0x1423>
    251e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2522:	24 c0       	rjmp	.+72     	; 0x256c <__stack+0x146d>
    2524:	87 33       	cpi	r24, 0x37	; 55
    2526:	91 05       	cpc	r25, r1
    2528:	e1 f1       	breq	.+120    	; 0x25a2 <__stack+0x14a3>
    252a:	88 33       	cpi	r24, 0x38	; 56
    252c:	91 05       	cpc	r25, r1
    252e:	44 f4       	brge	.+16     	; 0x2540 <__stack+0x1441>
    2530:	85 33       	cpi	r24, 0x35	; 53
    2532:	91 05       	cpc	r25, r1
    2534:	41 f1       	breq	.+80     	; 0x2586 <__stack+0x1487>
    2536:	c6 97       	sbiw	r24, 0x36	; 54
    2538:	11 f0       	breq	.+4      	; 0x253e <__stack+0x143f>
    253a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    253e:	2a c0       	rjmp	.+84     	; 0x2594 <__stack+0x1495>
    2540:	88 33       	cpi	r24, 0x38	; 56
    2542:	91 05       	cpc	r25, r1
    2544:	a9 f1       	breq	.+106    	; 0x25b0 <__stack+0x14b1>
    2546:	c9 97       	sbiw	r24, 0x39	; 57
    2548:	11 f0       	breq	.+4      	; 0x254e <__stack+0x144f>
    254a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    254e:	37 c0       	rjmp	.+110    	; 0x25be <__stack+0x14bf>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    2550:	8c e0       	ldi	r24, 0x0C	; 12
    2552:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[4] = '1';
    2556:	81 e3       	ldi	r24, 0x31	; 49
    2558:	8f 87       	std	Y+15, r24	; 0x0f
    255a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    255e:	8c e0       	ldi	r24, 0x0C	; 12
    2560:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[4] = '2';
    2564:	82 e3       	ldi	r24, 0x32	; 50
    2566:	8f 87       	std	Y+15, r24	; 0x0f
    2568:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    256c:	8c e0       	ldi	r24, 0x0C	; 12
    256e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[4] = '3';
    2572:	83 e3       	ldi	r24, 0x33	; 51
    2574:	8f 87       	std	Y+15, r24	; 0x0f
    2576:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    257a:	8c e0       	ldi	r24, 0x0C	; 12
    257c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[4] = '4';
    2580:	8f 86       	std	Y+15, r8	; 0x0f
    2582:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    2586:	8c e0       	ldi	r24, 0x0C	; 12
    2588:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     L_Offset_Buf[4] = '5';
    258c:	85 e3       	ldi	r24, 0x35	; 53
    258e:	8f 87       	std	Y+15, r24	; 0x0f
    2590:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    2594:	8c e0       	ldi	r24, 0x0C	; 12
    2596:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[4] = '6';
    259a:	86 e3       	ldi	r24, 0x36	; 54
    259c:	8f 87       	std	Y+15, r24	; 0x0f
    259e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    25a2:	8c e0       	ldi	r24, 0x0C	; 12
    25a4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[4] = '7';
    25a8:	87 e3       	ldi	r24, 0x37	; 55
    25aa:	8f 87       	std	Y+15, r24	; 0x0f
    25ac:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    25b0:	8c e0       	ldi	r24, 0x0C	; 12
    25b2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[4] = '8';
    25b6:	88 e3       	ldi	r24, 0x38	; 56
    25b8:	8f 87       	std	Y+15, r24	; 0x0f
    25ba:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    25be:	8c e0       	ldi	r24, 0x0C	; 12
    25c0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[4] = '9';
    25c4:	89 e3       	ldi	r24, 0x39	; 57
    25c6:	8f 87       	std	Y+15, r24	; 0x0f
    25c8:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    25cc:	8c e0       	ldi	r24, 0x0C	; 12
    25ce:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[4] = '0';
    25d2:	80 e3       	ldi	r24, 0x30	; 48
    25d4:	8f 87       	std	Y+15, r24	; 0x0f
    25d6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 6:  L_Offset = atof(L_Offset_Buf);	 
    25da:	22 96       	adiw	r28, 0x02	; 2
    25dc:	8f ad       	ldd	r24, Y+63	; 0x3f
    25de:	22 97       	sbiw	r28, 0x02	; 2
    25e0:	9c 2d       	mov	r25, r12
    25e2:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    25e6:	60 93 8f 02 	sts	0x028F, r22
    25ea:	70 93 90 02 	sts	0x0290, r23
    25ee:	80 93 91 02 	sts	0x0291, r24
    25f2:	90 93 92 02 	sts	0x0292, r25
										 lcd_gotoxy(8,2);
    25f6:	88 e0       	ldi	r24, 0x08	; 8
    25f8:	62 e0       	ldi	r22, 0x02	; 2
    25fa:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(L_Offset_Buf,"%07.3f", L_Offset);
    25fe:	40 91 8f 02 	lds	r20, 0x028F
    2602:	50 91 90 02 	lds	r21, 0x0290
    2606:	60 91 91 02 	lds	r22, 0x0291
    260a:	70 91 92 02 	lds	r23, 0x0292
    260e:	ad b7       	in	r26, 0x3d	; 61
    2610:	be b7       	in	r27, 0x3e	; 62
    2612:	18 97       	sbiw	r26, 0x08	; 8
    2614:	0f b6       	in	r0, 0x3f	; 63
    2616:	f8 94       	cli
    2618:	be bf       	out	0x3e, r27	; 62
    261a:	0f be       	out	0x3f, r0	; 63
    261c:	ad bf       	out	0x3d, r26	; 61
    261e:	ed b7       	in	r30, 0x3d	; 61
    2620:	fe b7       	in	r31, 0x3e	; 62
    2622:	31 96       	adiw	r30, 0x01	; 1
    2624:	22 96       	adiw	r28, 0x02	; 2
    2626:	2f ad       	ldd	r18, Y+63	; 0x3f
    2628:	22 97       	sbiw	r28, 0x02	; 2
    262a:	11 96       	adiw	r26, 0x01	; 1
    262c:	2c 93       	st	X, r18
    262e:	11 97       	sbiw	r26, 0x01	; 1
    2630:	12 96       	adiw	r26, 0x02	; 2
    2632:	cc 92       	st	X, r12
    2634:	e2 82       	std	Z+2, r14	; 0x02
    2636:	f3 82       	std	Z+3, r15	; 0x03
    2638:	44 83       	std	Z+4, r20	; 0x04
    263a:	55 83       	std	Z+5, r21	; 0x05
    263c:	66 83       	std	Z+6, r22	; 0x06
    263e:	77 83       	std	Z+7, r23	; 0x07
    2640:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(L_Offset_Buf);
    2644:	8d b7       	in	r24, 0x3d	; 61
    2646:	9e b7       	in	r25, 0x3e	; 62
    2648:	08 96       	adiw	r24, 0x08	; 8
    264a:	0f b6       	in	r0, 0x3f	; 63
    264c:	f8 94       	cli
    264e:	9e bf       	out	0x3e, r25	; 62
    2650:	0f be       	out	0x3f, r0	; 63
    2652:	8d bf       	out	0x3d, r24	; 61
    2654:	22 96       	adiw	r28, 0x02	; 2
    2656:	8f ad       	ldd	r24, Y+63	; 0x3f
    2658:	22 97       	sbiw	r28, 0x02	; 2
    265a:	9c 2d       	mov	r25, r12
    265c:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(13,2);
    2660:	8d e0       	ldi	r24, 0x0D	; 13
    2662:	62 e0       	ldi	r22, 0x02	; 2
    2664:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    2668:	8f e0       	ldi	r24, 0x0F	; 15
    266a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    266e:	80 91 68 03 	lds	r24, 0x0368
    2672:	90 91 69 03 	lds	r25, 0x0369
    2676:	84 33       	cpi	r24, 0x34	; 52
    2678:	91 05       	cpc	r25, r1
    267a:	09 f4       	brne	.+2      	; 0x267e <__stack+0x157f>
    267c:	41 c0       	rjmp	.+130    	; 0x2700 <__stack+0x1601>
    267e:	85 33       	cpi	r24, 0x35	; 53
    2680:	91 05       	cpc	r25, r1
    2682:	9c f4       	brge	.+38     	; 0x26aa <__stack+0x15ab>
    2684:	81 33       	cpi	r24, 0x31	; 49
    2686:	91 05       	cpc	r25, r1
    2688:	31 f1       	breq	.+76     	; 0x26d6 <__stack+0x15d7>
    268a:	82 33       	cpi	r24, 0x32	; 50
    268c:	91 05       	cpc	r25, r1
    268e:	2c f4       	brge	.+10     	; 0x269a <__stack+0x159b>
    2690:	c0 97       	sbiw	r24, 0x30	; 48
    2692:	11 f0       	breq	.+4      	; 0x2698 <__stack+0x1599>
    2694:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2698:	5c c0       	rjmp	.+184    	; 0x2752 <__stack+0x1653>
    269a:	82 33       	cpi	r24, 0x32	; 50
    269c:	91 05       	cpc	r25, r1
    269e:	11 f1       	breq	.+68     	; 0x26e4 <__stack+0x15e5>
    26a0:	c3 97       	sbiw	r24, 0x33	; 51
    26a2:	11 f0       	breq	.+4      	; 0x26a8 <__stack+0x15a9>
    26a4:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    26a8:	24 c0       	rjmp	.+72     	; 0x26f2 <__stack+0x15f3>
    26aa:	87 33       	cpi	r24, 0x37	; 55
    26ac:	91 05       	cpc	r25, r1
    26ae:	e1 f1       	breq	.+120    	; 0x2728 <__stack+0x1629>
    26b0:	88 33       	cpi	r24, 0x38	; 56
    26b2:	91 05       	cpc	r25, r1
    26b4:	44 f4       	brge	.+16     	; 0x26c6 <__stack+0x15c7>
    26b6:	85 33       	cpi	r24, 0x35	; 53
    26b8:	91 05       	cpc	r25, r1
    26ba:	41 f1       	breq	.+80     	; 0x270c <__stack+0x160d>
    26bc:	c6 97       	sbiw	r24, 0x36	; 54
    26be:	11 f0       	breq	.+4      	; 0x26c4 <__stack+0x15c5>
    26c0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    26c4:	2a c0       	rjmp	.+84     	; 0x271a <__stack+0x161b>
    26c6:	88 33       	cpi	r24, 0x38	; 56
    26c8:	91 05       	cpc	r25, r1
    26ca:	a9 f1       	breq	.+106    	; 0x2736 <__stack+0x1637>
    26cc:	c9 97       	sbiw	r24, 0x39	; 57
    26ce:	11 f0       	breq	.+4      	; 0x26d4 <__stack+0x15d5>
    26d0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    26d4:	37 c0       	rjmp	.+110    	; 0x2744 <__stack+0x1645>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    26d6:	8c e0       	ldi	r24, 0x0C	; 12
    26d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[5] = '1';
    26dc:	81 e3       	ldi	r24, 0x31	; 49
    26de:	88 8b       	std	Y+16, r24	; 0x10
    26e0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    26e4:	8c e0       	ldi	r24, 0x0C	; 12
    26e6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[5] = '2';
    26ea:	82 e3       	ldi	r24, 0x32	; 50
    26ec:	88 8b       	std	Y+16, r24	; 0x10
    26ee:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    26f2:	8c e0       	ldi	r24, 0x0C	; 12
    26f4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[5] = '3';
    26f8:	83 e3       	ldi	r24, 0x33	; 51
    26fa:	88 8b       	std	Y+16, r24	; 0x10
    26fc:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    2700:	8c e0       	ldi	r24, 0x0C	; 12
    2702:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[5] = '4';
    2706:	88 8a       	std	Y+16, r8	; 0x10
    2708:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    270c:	8c e0       	ldi	r24, 0x0C	; 12
    270e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     L_Offset_Buf[5] = '5';
    2712:	85 e3       	ldi	r24, 0x35	; 53
    2714:	88 8b       	std	Y+16, r24	; 0x10
    2716:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    271a:	8c e0       	ldi	r24, 0x0C	; 12
    271c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[5] = '6';
    2720:	86 e3       	ldi	r24, 0x36	; 54
    2722:	88 8b       	std	Y+16, r24	; 0x10
    2724:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    2728:	8c e0       	ldi	r24, 0x0C	; 12
    272a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[5] = '7';
    272e:	87 e3       	ldi	r24, 0x37	; 55
    2730:	88 8b       	std	Y+16, r24	; 0x10
    2732:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    2736:	8c e0       	ldi	r24, 0x0C	; 12
    2738:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[5] = '8';
    273c:	88 e3       	ldi	r24, 0x38	; 56
    273e:	88 8b       	std	Y+16, r24	; 0x10
    2740:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    2744:	8c e0       	ldi	r24, 0x0C	; 12
    2746:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[5] = '9';
    274a:	89 e3       	ldi	r24, 0x39	; 57
    274c:	88 8b       	std	Y+16, r24	; 0x10
    274e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    2752:	8c e0       	ldi	r24, 0x0C	; 12
    2754:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[5] = '0';
    2758:	80 e3       	ldi	r24, 0x30	; 48
    275a:	88 8b       	std	Y+16, r24	; 0x10
    275c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 7:  L_Offset = atof(L_Offset_Buf);	 
    2760:	22 96       	adiw	r28, 0x02	; 2
    2762:	8f ad       	ldd	r24, Y+63	; 0x3f
    2764:	22 97       	sbiw	r28, 0x02	; 2
    2766:	9c 2d       	mov	r25, r12
    2768:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    276c:	60 93 8f 02 	sts	0x028F, r22
    2770:	70 93 90 02 	sts	0x0290, r23
    2774:	80 93 91 02 	sts	0x0291, r24
    2778:	90 93 92 02 	sts	0x0292, r25
										 lcd_gotoxy(8,2);
    277c:	88 e0       	ldi	r24, 0x08	; 8
    277e:	62 e0       	ldi	r22, 0x02	; 2
    2780:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(L_Offset_Buf,"%07.3f", L_Offset);
    2784:	40 91 8f 02 	lds	r20, 0x028F
    2788:	50 91 90 02 	lds	r21, 0x0290
    278c:	60 91 91 02 	lds	r22, 0x0291
    2790:	70 91 92 02 	lds	r23, 0x0292
    2794:	ad b7       	in	r26, 0x3d	; 61
    2796:	be b7       	in	r27, 0x3e	; 62
    2798:	18 97       	sbiw	r26, 0x08	; 8
    279a:	0f b6       	in	r0, 0x3f	; 63
    279c:	f8 94       	cli
    279e:	be bf       	out	0x3e, r27	; 62
    27a0:	0f be       	out	0x3f, r0	; 63
    27a2:	ad bf       	out	0x3d, r26	; 61
    27a4:	ed b7       	in	r30, 0x3d	; 61
    27a6:	fe b7       	in	r31, 0x3e	; 62
    27a8:	31 96       	adiw	r30, 0x01	; 1
    27aa:	22 96       	adiw	r28, 0x02	; 2
    27ac:	2f ad       	ldd	r18, Y+63	; 0x3f
    27ae:	22 97       	sbiw	r28, 0x02	; 2
    27b0:	11 96       	adiw	r26, 0x01	; 1
    27b2:	2c 93       	st	X, r18
    27b4:	11 97       	sbiw	r26, 0x01	; 1
    27b6:	12 96       	adiw	r26, 0x02	; 2
    27b8:	cc 92       	st	X, r12
    27ba:	e2 82       	std	Z+2, r14	; 0x02
    27bc:	f3 82       	std	Z+3, r15	; 0x03
    27be:	44 83       	std	Z+4, r20	; 0x04
    27c0:	55 83       	std	Z+5, r21	; 0x05
    27c2:	66 83       	std	Z+6, r22	; 0x06
    27c4:	77 83       	std	Z+7, r23	; 0x07
    27c6:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(L_Offset_Buf);
    27ca:	8d b7       	in	r24, 0x3d	; 61
    27cc:	9e b7       	in	r25, 0x3e	; 62
    27ce:	08 96       	adiw	r24, 0x08	; 8
    27d0:	0f b6       	in	r0, 0x3f	; 63
    27d2:	f8 94       	cli
    27d4:	9e bf       	out	0x3e, r25	; 62
    27d6:	0f be       	out	0x3f, r0	; 63
    27d8:	8d bf       	out	0x3d, r24	; 61
    27da:	22 96       	adiw	r28, 0x02	; 2
    27dc:	8f ad       	ldd	r24, Y+63	; 0x3f
    27de:	22 97       	sbiw	r28, 0x02	; 2
    27e0:	9c 2d       	mov	r25, r12
    27e2:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(14,2);
    27e6:	8e e0       	ldi	r24, 0x0E	; 14
    27e8:	62 e0       	ldi	r22, 0x02	; 2
    27ea:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    27ee:	8f e0       	ldi	r24, 0x0F	; 15
    27f0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    27f4:	80 91 68 03 	lds	r24, 0x0368
    27f8:	90 91 69 03 	lds	r25, 0x0369
    27fc:	84 33       	cpi	r24, 0x34	; 52
    27fe:	91 05       	cpc	r25, r1
    2800:	09 f4       	brne	.+2      	; 0x2804 <__stack+0x1705>
    2802:	41 c0       	rjmp	.+130    	; 0x2886 <__stack+0x1787>
    2804:	85 33       	cpi	r24, 0x35	; 53
    2806:	91 05       	cpc	r25, r1
    2808:	9c f4       	brge	.+38     	; 0x2830 <__stack+0x1731>
    280a:	81 33       	cpi	r24, 0x31	; 49
    280c:	91 05       	cpc	r25, r1
    280e:	31 f1       	breq	.+76     	; 0x285c <__stack+0x175d>
    2810:	82 33       	cpi	r24, 0x32	; 50
    2812:	91 05       	cpc	r25, r1
    2814:	2c f4       	brge	.+10     	; 0x2820 <__stack+0x1721>
    2816:	c0 97       	sbiw	r24, 0x30	; 48
    2818:	11 f0       	breq	.+4      	; 0x281e <__stack+0x171f>
    281a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    281e:	5c c0       	rjmp	.+184    	; 0x28d8 <__stack+0x17d9>
    2820:	82 33       	cpi	r24, 0x32	; 50
    2822:	91 05       	cpc	r25, r1
    2824:	11 f1       	breq	.+68     	; 0x286a <__stack+0x176b>
    2826:	c3 97       	sbiw	r24, 0x33	; 51
    2828:	11 f0       	breq	.+4      	; 0x282e <__stack+0x172f>
    282a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    282e:	24 c0       	rjmp	.+72     	; 0x2878 <__stack+0x1779>
    2830:	87 33       	cpi	r24, 0x37	; 55
    2832:	91 05       	cpc	r25, r1
    2834:	e1 f1       	breq	.+120    	; 0x28ae <__stack+0x17af>
    2836:	88 33       	cpi	r24, 0x38	; 56
    2838:	91 05       	cpc	r25, r1
    283a:	44 f4       	brge	.+16     	; 0x284c <__stack+0x174d>
    283c:	85 33       	cpi	r24, 0x35	; 53
    283e:	91 05       	cpc	r25, r1
    2840:	41 f1       	breq	.+80     	; 0x2892 <__stack+0x1793>
    2842:	c6 97       	sbiw	r24, 0x36	; 54
    2844:	11 f0       	breq	.+4      	; 0x284a <__stack+0x174b>
    2846:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    284a:	2a c0       	rjmp	.+84     	; 0x28a0 <__stack+0x17a1>
    284c:	88 33       	cpi	r24, 0x38	; 56
    284e:	91 05       	cpc	r25, r1
    2850:	a9 f1       	breq	.+106    	; 0x28bc <__stack+0x17bd>
    2852:	c9 97       	sbiw	r24, 0x39	; 57
    2854:	11 f0       	breq	.+4      	; 0x285a <__stack+0x175b>
    2856:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    285a:	37 c0       	rjmp	.+110    	; 0x28ca <__stack+0x17cb>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    285c:	8c e0       	ldi	r24, 0x0C	; 12
    285e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[6] = '1';
    2862:	81 e3       	ldi	r24, 0x31	; 49
    2864:	89 8b       	std	Y+17, r24	; 0x11
    2866:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    286a:	8c e0       	ldi	r24, 0x0C	; 12
    286c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[6] = '2';
    2870:	82 e3       	ldi	r24, 0x32	; 50
    2872:	89 8b       	std	Y+17, r24	; 0x11
    2874:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    2878:	8c e0       	ldi	r24, 0x0C	; 12
    287a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[6] = '3';
    287e:	83 e3       	ldi	r24, 0x33	; 51
    2880:	89 8b       	std	Y+17, r24	; 0x11
    2882:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    2886:	8c e0       	ldi	r24, 0x0C	; 12
    2888:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[6] = '4';
    288c:	89 8a       	std	Y+17, r8	; 0x11
    288e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    2892:	8c e0       	ldi	r24, 0x0C	; 12
    2894:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     L_Offset_Buf[6] = '5';
    2898:	85 e3       	ldi	r24, 0x35	; 53
    289a:	89 8b       	std	Y+17, r24	; 0x11
    289c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    28a0:	8c e0       	ldi	r24, 0x0C	; 12
    28a2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 L_Offset_Buf[6] = '6';
    28a6:	86 e3       	ldi	r24, 0x36	; 54
    28a8:	89 8b       	std	Y+17, r24	; 0x11
    28aa:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    28ae:	8c e0       	ldi	r24, 0x0C	; 12
    28b0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[6] = '7';
    28b4:	87 e3       	ldi	r24, 0x37	; 55
    28b6:	89 8b       	std	Y+17, r24	; 0x11
    28b8:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    28bc:	8c e0       	ldi	r24, 0x0C	; 12
    28be:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[6] = '8';
    28c2:	88 e3       	ldi	r24, 0x38	; 56
    28c4:	89 8b       	std	Y+17, r24	; 0x11
    28c6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    28ca:	8c e0       	ldi	r24, 0x0C	; 12
    28cc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[6] = '9';
    28d0:	89 e3       	ldi	r24, 0x39	; 57
    28d2:	89 8b       	std	Y+17, r24	; 0x11
    28d4:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    28d8:	8c e0       	ldi	r24, 0x0C	; 12
    28da:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         L_Offset_Buf[6] = '0';
    28de:	80 e3       	ldi	r24, 0x30	; 48
    28e0:	89 8b       	std	Y+17, r24	; 0x11
    28e2:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
										  }	
								         break;
					        } 
						    
					}
					if(ProcessDataPageCursor == 3)
    28e6:	9e ad       	ldd	r25, Y+62	; 0x3e
    28e8:	93 30       	cpi	r25, 0x03	; 3
    28ea:	09 f0       	breq	.+2      	; 0x28ee <__stack+0x17ef>
    28ec:	c1 c4       	rjmp	.+2434   	; 0x3270 <__stack+0x2171>
					{
						    
						    switch (ProcessDataLineCursor)  // Main Menu Switch statement
    28ee:	a4 e0       	ldi	r26, 0x04	; 4
    28f0:	9a 16       	cp	r9, r26
    28f2:	09 f4       	brne	.+2      	; 0x28f6 <__stack+0x17f7>
    28f4:	68 c2       	rjmp	.+1232   	; 0x2dc6 <__stack+0x1cc7>
    28f6:	a9 15       	cp	r26, r9
    28f8:	68 f0       	brcs	.+26     	; 0x2914 <__stack+0x1815>
    28fa:	b2 e0       	ldi	r27, 0x02	; 2
    28fc:	9b 16       	cp	r9, r27
    28fe:	09 f4       	brne	.+2      	; 0x2902 <__stack+0x1803>
    2900:	da c0       	rjmp	.+436    	; 0x2ab6 <__stack+0x19b7>
    2902:	b9 15       	cp	r27, r9
    2904:	08 f4       	brcc	.+2      	; 0x2908 <__stack+0x1809>
    2906:	9b c1       	rjmp	.+822    	; 0x2c3e <__stack+0x1b3f>
    2908:	21 e0       	ldi	r18, 0x01	; 1
    290a:	92 16       	cp	r9, r18
    290c:	11 f0       	breq	.+4      	; 0x2912 <__stack+0x1813>
    290e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2912:	0d c0       	rjmp	.+26     	; 0x292e <__stack+0x182f>
    2914:	36 e0       	ldi	r19, 0x06	; 6
    2916:	93 16       	cp	r9, r19
    2918:	09 f4       	brne	.+2      	; 0x291c <__stack+0x181d>
    291a:	22 c3       	rjmp	.+1604   	; 0x2f60 <__stack+0x1e61>
    291c:	93 16       	cp	r9, r19
    291e:	08 f4       	brcc	.+2      	; 0x2922 <__stack+0x1823>
    2920:	5b c2       	rjmp	.+1206   	; 0x2dd8 <__stack+0x1cd9>
    2922:	87 e0       	ldi	r24, 0x07	; 7
    2924:	98 16       	cp	r9, r24
    2926:	11 f0       	breq	.+4      	; 0x292c <__stack+0x182d>
    2928:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    292c:	dd c3       	rjmp	.+1978   	; 0x30e8 <__stack+0x1fe9>
						    {
								case 1:  U_Load = atof(U_Load_Buf);	 
    292e:	8f ad       	ldd	r24, Y+63	; 0x3f
    2930:	21 96       	adiw	r28, 0x01	; 1
    2932:	9f ad       	ldd	r25, Y+63	; 0x3f
    2934:	21 97       	sbiw	r28, 0x01	; 1
    2936:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    293a:	60 93 b9 02 	sts	0x02B9, r22
    293e:	70 93 ba 02 	sts	0x02BA, r23
    2942:	80 93 bb 02 	sts	0x02BB, r24
    2946:	90 93 bc 02 	sts	0x02BC, r25
										 lcd_gotoxy(8,3);
    294a:	88 e0       	ldi	r24, 0x08	; 8
    294c:	63 e0       	ldi	r22, 0x03	; 3
    294e:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(U_Load_Buf,"%07.3f", U_Load);
    2952:	40 91 b9 02 	lds	r20, 0x02B9
    2956:	50 91 ba 02 	lds	r21, 0x02BA
    295a:	60 91 bb 02 	lds	r22, 0x02BB
    295e:	70 91 bc 02 	lds	r23, 0x02BC
    2962:	ad b7       	in	r26, 0x3d	; 61
    2964:	be b7       	in	r27, 0x3e	; 62
    2966:	18 97       	sbiw	r26, 0x08	; 8
    2968:	0f b6       	in	r0, 0x3f	; 63
    296a:	f8 94       	cli
    296c:	be bf       	out	0x3e, r27	; 62
    296e:	0f be       	out	0x3f, r0	; 63
    2970:	ad bf       	out	0x3d, r26	; 61
    2972:	ed b7       	in	r30, 0x3d	; 61
    2974:	fe b7       	in	r31, 0x3e	; 62
    2976:	31 96       	adiw	r30, 0x01	; 1
    2978:	2f ad       	ldd	r18, Y+63	; 0x3f
    297a:	11 96       	adiw	r26, 0x01	; 1
    297c:	2c 93       	st	X, r18
    297e:	11 97       	sbiw	r26, 0x01	; 1
    2980:	21 96       	adiw	r28, 0x01	; 1
    2982:	3f ad       	ldd	r19, Y+63	; 0x3f
    2984:	21 97       	sbiw	r28, 0x01	; 1
    2986:	12 96       	adiw	r26, 0x02	; 2
    2988:	3c 93       	st	X, r19
    298a:	e2 82       	std	Z+2, r14	; 0x02
    298c:	f3 82       	std	Z+3, r15	; 0x03
    298e:	44 83       	std	Z+4, r20	; 0x04
    2990:	55 83       	std	Z+5, r21	; 0x05
    2992:	66 83       	std	Z+6, r22	; 0x06
    2994:	77 83       	std	Z+7, r23	; 0x07
    2996:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(U_Load_Buf);
    299a:	8d b7       	in	r24, 0x3d	; 61
    299c:	9e b7       	in	r25, 0x3e	; 62
    299e:	08 96       	adiw	r24, 0x08	; 8
    29a0:	0f b6       	in	r0, 0x3f	; 63
    29a2:	f8 94       	cli
    29a4:	9e bf       	out	0x3e, r25	; 62
    29a6:	0f be       	out	0x3f, r0	; 63
    29a8:	8d bf       	out	0x3d, r24	; 61
    29aa:	8f ad       	ldd	r24, Y+63	; 0x3f
    29ac:	21 96       	adiw	r28, 0x01	; 1
    29ae:	9f ad       	ldd	r25, Y+63	; 0x3f
    29b0:	21 97       	sbiw	r28, 0x01	; 1
    29b2:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(8,3);
    29b6:	88 e0       	ldi	r24, 0x08	; 8
    29b8:	63 e0       	ldi	r22, 0x03	; 3
    29ba:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				          				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    29be:	8f e0       	ldi	r24, 0x0F	; 15
    29c0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										  switch (key)  // Main Menu Switch statement
    29c4:	80 91 68 03 	lds	r24, 0x0368
    29c8:	90 91 69 03 	lds	r25, 0x0369
    29cc:	84 33       	cpi	r24, 0x34	; 52
    29ce:	91 05       	cpc	r25, r1
    29d0:	09 f4       	brne	.+2      	; 0x29d4 <__stack+0x18d5>
    29d2:	41 c0       	rjmp	.+130    	; 0x2a56 <__stack+0x1957>
    29d4:	85 33       	cpi	r24, 0x35	; 53
    29d6:	91 05       	cpc	r25, r1
    29d8:	9c f4       	brge	.+38     	; 0x2a00 <__stack+0x1901>
    29da:	81 33       	cpi	r24, 0x31	; 49
    29dc:	91 05       	cpc	r25, r1
    29de:	31 f1       	breq	.+76     	; 0x2a2c <__stack+0x192d>
    29e0:	82 33       	cpi	r24, 0x32	; 50
    29e2:	91 05       	cpc	r25, r1
    29e4:	2c f4       	brge	.+10     	; 0x29f0 <__stack+0x18f1>
    29e6:	c0 97       	sbiw	r24, 0x30	; 48
    29e8:	11 f0       	breq	.+4      	; 0x29ee <__stack+0x18ef>
    29ea:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    29ee:	5c c0       	rjmp	.+184    	; 0x2aa8 <__stack+0x19a9>
    29f0:	82 33       	cpi	r24, 0x32	; 50
    29f2:	91 05       	cpc	r25, r1
    29f4:	11 f1       	breq	.+68     	; 0x2a3a <__stack+0x193b>
    29f6:	c3 97       	sbiw	r24, 0x33	; 51
    29f8:	11 f0       	breq	.+4      	; 0x29fe <__stack+0x18ff>
    29fa:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    29fe:	24 c0       	rjmp	.+72     	; 0x2a48 <__stack+0x1949>
    2a00:	87 33       	cpi	r24, 0x37	; 55
    2a02:	91 05       	cpc	r25, r1
    2a04:	e1 f1       	breq	.+120    	; 0x2a7e <__stack+0x197f>
    2a06:	88 33       	cpi	r24, 0x38	; 56
    2a08:	91 05       	cpc	r25, r1
    2a0a:	44 f4       	brge	.+16     	; 0x2a1c <__stack+0x191d>
    2a0c:	85 33       	cpi	r24, 0x35	; 53
    2a0e:	91 05       	cpc	r25, r1
    2a10:	41 f1       	breq	.+80     	; 0x2a62 <__stack+0x1963>
    2a12:	c6 97       	sbiw	r24, 0x36	; 54
    2a14:	11 f0       	breq	.+4      	; 0x2a1a <__stack+0x191b>
    2a16:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2a1a:	2a c0       	rjmp	.+84     	; 0x2a70 <__stack+0x1971>
    2a1c:	88 33       	cpi	r24, 0x38	; 56
    2a1e:	91 05       	cpc	r25, r1
    2a20:	a9 f1       	breq	.+106    	; 0x2a8c <__stack+0x198d>
    2a22:	c9 97       	sbiw	r24, 0x39	; 57
    2a24:	11 f0       	breq	.+4      	; 0x2a2a <__stack+0x192b>
    2a26:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2a2a:	37 c0       	rjmp	.+110    	; 0x2a9a <__stack+0x199b>
										    {
											 
												case '1':lcd_command(LCD_DISP_ON);
    2a2c:	8c e0       	ldi	r24, 0x0C	; 12
    2a2e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[0] = '1';
    2a32:	81 e3       	ldi	r24, 0x31	; 49
    2a34:	8d 8b       	std	Y+21, r24	; 0x15
    2a36:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    2a3a:	8c e0       	ldi	r24, 0x0C	; 12
    2a3c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[0] = '2';
    2a40:	82 e3       	ldi	r24, 0x32	; 50
    2a42:	8d 8b       	std	Y+21, r24	; 0x15
    2a44:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    2a48:	8c e0       	ldi	r24, 0x0C	; 12
    2a4a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[0] = '3';
    2a4e:	83 e3       	ldi	r24, 0x33	; 51
    2a50:	8d 8b       	std	Y+21, r24	; 0x15
    2a52:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    2a56:	8c e0       	ldi	r24, 0x0C	; 12
    2a58:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[0] = '4';
    2a5c:	8d 8a       	std	Y+21, r8	; 0x15
    2a5e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    2a62:	8c e0       	ldi	r24, 0x0C	; 12
    2a64:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     U_Load_Buf[0] = '5';
    2a68:	85 e3       	ldi	r24, 0x35	; 53
    2a6a:	8d 8b       	std	Y+21, r24	; 0x15
    2a6c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    2a70:	8c e0       	ldi	r24, 0x0C	; 12
    2a72:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[0] = '6';
    2a76:	86 e3       	ldi	r24, 0x36	; 54
    2a78:	8d 8b       	std	Y+21, r24	; 0x15
    2a7a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    2a7e:	8c e0       	ldi	r24, 0x0C	; 12
    2a80:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[0] = '7';
    2a84:	87 e3       	ldi	r24, 0x37	; 55
    2a86:	8d 8b       	std	Y+21, r24	; 0x15
    2a88:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    2a8c:	8c e0       	ldi	r24, 0x0C	; 12
    2a8e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[0] = '8';
    2a92:	88 e3       	ldi	r24, 0x38	; 56
    2a94:	8d 8b       	std	Y+21, r24	; 0x15
    2a96:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    2a9a:	8c e0       	ldi	r24, 0x0C	; 12
    2a9c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[0] = '9';
    2aa0:	89 e3       	ldi	r24, 0x39	; 57
    2aa2:	8d 8b       	std	Y+21, r24	; 0x15
    2aa4:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    2aa8:	8c e0       	ldi	r24, 0x0C	; 12
    2aaa:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[0] = '0';
    2aae:	80 e3       	ldi	r24, 0x30	; 48
    2ab0:	8d 8b       	std	Y+21, r24	; 0x15
    2ab2:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
											 }									
								         break;
								case 2:  U_Load = atof(U_Load_Buf);	 
    2ab6:	8f ad       	ldd	r24, Y+63	; 0x3f
    2ab8:	21 96       	adiw	r28, 0x01	; 1
    2aba:	9f ad       	ldd	r25, Y+63	; 0x3f
    2abc:	21 97       	sbiw	r28, 0x01	; 1
    2abe:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    2ac2:	60 93 b9 02 	sts	0x02B9, r22
    2ac6:	70 93 ba 02 	sts	0x02BA, r23
    2aca:	80 93 bb 02 	sts	0x02BB, r24
    2ace:	90 93 bc 02 	sts	0x02BC, r25
										 lcd_gotoxy(8,3);
    2ad2:	88 e0       	ldi	r24, 0x08	; 8
    2ad4:	63 e0       	ldi	r22, 0x03	; 3
    2ad6:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(U_Load_Buf,"%07.3f", U_Load);
    2ada:	40 91 b9 02 	lds	r20, 0x02B9
    2ade:	50 91 ba 02 	lds	r21, 0x02BA
    2ae2:	60 91 bb 02 	lds	r22, 0x02BB
    2ae6:	70 91 bc 02 	lds	r23, 0x02BC
    2aea:	ad b7       	in	r26, 0x3d	; 61
    2aec:	be b7       	in	r27, 0x3e	; 62
    2aee:	18 97       	sbiw	r26, 0x08	; 8
    2af0:	0f b6       	in	r0, 0x3f	; 63
    2af2:	f8 94       	cli
    2af4:	be bf       	out	0x3e, r27	; 62
    2af6:	0f be       	out	0x3f, r0	; 63
    2af8:	ad bf       	out	0x3d, r26	; 61
    2afa:	ed b7       	in	r30, 0x3d	; 61
    2afc:	fe b7       	in	r31, 0x3e	; 62
    2afe:	31 96       	adiw	r30, 0x01	; 1
    2b00:	2f ad       	ldd	r18, Y+63	; 0x3f
    2b02:	11 96       	adiw	r26, 0x01	; 1
    2b04:	2c 93       	st	X, r18
    2b06:	11 97       	sbiw	r26, 0x01	; 1
    2b08:	21 96       	adiw	r28, 0x01	; 1
    2b0a:	3f ad       	ldd	r19, Y+63	; 0x3f
    2b0c:	21 97       	sbiw	r28, 0x01	; 1
    2b0e:	12 96       	adiw	r26, 0x02	; 2
    2b10:	3c 93       	st	X, r19
    2b12:	e2 82       	std	Z+2, r14	; 0x02
    2b14:	f3 82       	std	Z+3, r15	; 0x03
    2b16:	44 83       	std	Z+4, r20	; 0x04
    2b18:	55 83       	std	Z+5, r21	; 0x05
    2b1a:	66 83       	std	Z+6, r22	; 0x06
    2b1c:	77 83       	std	Z+7, r23	; 0x07
    2b1e:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(U_Load_Buf);
    2b22:	8d b7       	in	r24, 0x3d	; 61
    2b24:	9e b7       	in	r25, 0x3e	; 62
    2b26:	08 96       	adiw	r24, 0x08	; 8
    2b28:	0f b6       	in	r0, 0x3f	; 63
    2b2a:	f8 94       	cli
    2b2c:	9e bf       	out	0x3e, r25	; 62
    2b2e:	0f be       	out	0x3f, r0	; 63
    2b30:	8d bf       	out	0x3d, r24	; 61
    2b32:	8f ad       	ldd	r24, Y+63	; 0x3f
    2b34:	21 96       	adiw	r28, 0x01	; 1
    2b36:	9f ad       	ldd	r25, Y+63	; 0x3f
    2b38:	21 97       	sbiw	r28, 0x01	; 1
    2b3a:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(9,3);
    2b3e:	89 e0       	ldi	r24, 0x09	; 9
    2b40:	63 e0       	ldi	r22, 0x03	; 3
    2b42:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    2b46:	8f e0       	ldi	r24, 0x0F	; 15
    2b48:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    2b4c:	80 91 68 03 	lds	r24, 0x0368
    2b50:	90 91 69 03 	lds	r25, 0x0369
    2b54:	84 33       	cpi	r24, 0x34	; 52
    2b56:	91 05       	cpc	r25, r1
    2b58:	09 f4       	brne	.+2      	; 0x2b5c <__stack+0x1a5d>
    2b5a:	41 c0       	rjmp	.+130    	; 0x2bde <__stack+0x1adf>
    2b5c:	85 33       	cpi	r24, 0x35	; 53
    2b5e:	91 05       	cpc	r25, r1
    2b60:	9c f4       	brge	.+38     	; 0x2b88 <__stack+0x1a89>
    2b62:	81 33       	cpi	r24, 0x31	; 49
    2b64:	91 05       	cpc	r25, r1
    2b66:	31 f1       	breq	.+76     	; 0x2bb4 <__stack+0x1ab5>
    2b68:	82 33       	cpi	r24, 0x32	; 50
    2b6a:	91 05       	cpc	r25, r1
    2b6c:	2c f4       	brge	.+10     	; 0x2b78 <__stack+0x1a79>
    2b6e:	c0 97       	sbiw	r24, 0x30	; 48
    2b70:	11 f0       	breq	.+4      	; 0x2b76 <__stack+0x1a77>
    2b72:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2b76:	5c c0       	rjmp	.+184    	; 0x2c30 <__stack+0x1b31>
    2b78:	82 33       	cpi	r24, 0x32	; 50
    2b7a:	91 05       	cpc	r25, r1
    2b7c:	11 f1       	breq	.+68     	; 0x2bc2 <__stack+0x1ac3>
    2b7e:	c3 97       	sbiw	r24, 0x33	; 51
    2b80:	11 f0       	breq	.+4      	; 0x2b86 <__stack+0x1a87>
    2b82:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2b86:	24 c0       	rjmp	.+72     	; 0x2bd0 <__stack+0x1ad1>
    2b88:	87 33       	cpi	r24, 0x37	; 55
    2b8a:	91 05       	cpc	r25, r1
    2b8c:	e1 f1       	breq	.+120    	; 0x2c06 <__stack+0x1b07>
    2b8e:	88 33       	cpi	r24, 0x38	; 56
    2b90:	91 05       	cpc	r25, r1
    2b92:	44 f4       	brge	.+16     	; 0x2ba4 <__stack+0x1aa5>
    2b94:	85 33       	cpi	r24, 0x35	; 53
    2b96:	91 05       	cpc	r25, r1
    2b98:	41 f1       	breq	.+80     	; 0x2bea <__stack+0x1aeb>
    2b9a:	c6 97       	sbiw	r24, 0x36	; 54
    2b9c:	11 f0       	breq	.+4      	; 0x2ba2 <__stack+0x1aa3>
    2b9e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2ba2:	2a c0       	rjmp	.+84     	; 0x2bf8 <__stack+0x1af9>
    2ba4:	88 33       	cpi	r24, 0x38	; 56
    2ba6:	91 05       	cpc	r25, r1
    2ba8:	a9 f1       	breq	.+106    	; 0x2c14 <__stack+0x1b15>
    2baa:	c9 97       	sbiw	r24, 0x39	; 57
    2bac:	11 f0       	breq	.+4      	; 0x2bb2 <__stack+0x1ab3>
    2bae:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2bb2:	37 c0       	rjmp	.+110    	; 0x2c22 <__stack+0x1b23>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    2bb4:	8c e0       	ldi	r24, 0x0C	; 12
    2bb6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[1] = '1';
    2bba:	81 e3       	ldi	r24, 0x31	; 49
    2bbc:	8e 8b       	std	Y+22, r24	; 0x16
    2bbe:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    2bc2:	8c e0       	ldi	r24, 0x0C	; 12
    2bc4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[1] = '2';
    2bc8:	82 e3       	ldi	r24, 0x32	; 50
    2bca:	8e 8b       	std	Y+22, r24	; 0x16
    2bcc:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    2bd0:	8c e0       	ldi	r24, 0x0C	; 12
    2bd2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[1] = '3';
    2bd6:	83 e3       	ldi	r24, 0x33	; 51
    2bd8:	8e 8b       	std	Y+22, r24	; 0x16
    2bda:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    2bde:	8c e0       	ldi	r24, 0x0C	; 12
    2be0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[1] = '4';
    2be4:	8e 8a       	std	Y+22, r8	; 0x16
    2be6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    2bea:	8c e0       	ldi	r24, 0x0C	; 12
    2bec:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     U_Load_Buf[1] = '5';
    2bf0:	85 e3       	ldi	r24, 0x35	; 53
    2bf2:	8e 8b       	std	Y+22, r24	; 0x16
    2bf4:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    2bf8:	8c e0       	ldi	r24, 0x0C	; 12
    2bfa:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[1] = '6';
    2bfe:	86 e3       	ldi	r24, 0x36	; 54
    2c00:	8e 8b       	std	Y+22, r24	; 0x16
    2c02:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    2c06:	8c e0       	ldi	r24, 0x0C	; 12
    2c08:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[1] = '7';
    2c0c:	87 e3       	ldi	r24, 0x37	; 55
    2c0e:	8e 8b       	std	Y+22, r24	; 0x16
    2c10:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    2c14:	8c e0       	ldi	r24, 0x0C	; 12
    2c16:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[1] = '8';
    2c1a:	88 e3       	ldi	r24, 0x38	; 56
    2c1c:	8e 8b       	std	Y+22, r24	; 0x16
    2c1e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    2c22:	8c e0       	ldi	r24, 0x0C	; 12
    2c24:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[1] = '9';
    2c28:	89 e3       	ldi	r24, 0x39	; 57
    2c2a:	8e 8b       	std	Y+22, r24	; 0x16
    2c2c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    2c30:	8c e0       	ldi	r24, 0x0C	; 12
    2c32:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[1] = '0';
    2c36:	80 e3       	ldi	r24, 0x30	; 48
    2c38:	8e 8b       	std	Y+22, r24	; 0x16
    2c3a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 3:  U_Load = atof(U_Load_Buf);	 
    2c3e:	8f ad       	ldd	r24, Y+63	; 0x3f
    2c40:	21 96       	adiw	r28, 0x01	; 1
    2c42:	9f ad       	ldd	r25, Y+63	; 0x3f
    2c44:	21 97       	sbiw	r28, 0x01	; 1
    2c46:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    2c4a:	60 93 b9 02 	sts	0x02B9, r22
    2c4e:	70 93 ba 02 	sts	0x02BA, r23
    2c52:	80 93 bb 02 	sts	0x02BB, r24
    2c56:	90 93 bc 02 	sts	0x02BC, r25
										 lcd_gotoxy(8,3);
    2c5a:	88 e0       	ldi	r24, 0x08	; 8
    2c5c:	63 e0       	ldi	r22, 0x03	; 3
    2c5e:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(U_Load_Buf,"%07.3f", U_Load);
    2c62:	40 91 b9 02 	lds	r20, 0x02B9
    2c66:	50 91 ba 02 	lds	r21, 0x02BA
    2c6a:	60 91 bb 02 	lds	r22, 0x02BB
    2c6e:	70 91 bc 02 	lds	r23, 0x02BC
    2c72:	ad b7       	in	r26, 0x3d	; 61
    2c74:	be b7       	in	r27, 0x3e	; 62
    2c76:	18 97       	sbiw	r26, 0x08	; 8
    2c78:	0f b6       	in	r0, 0x3f	; 63
    2c7a:	f8 94       	cli
    2c7c:	be bf       	out	0x3e, r27	; 62
    2c7e:	0f be       	out	0x3f, r0	; 63
    2c80:	ad bf       	out	0x3d, r26	; 61
    2c82:	ed b7       	in	r30, 0x3d	; 61
    2c84:	fe b7       	in	r31, 0x3e	; 62
    2c86:	31 96       	adiw	r30, 0x01	; 1
    2c88:	2f ad       	ldd	r18, Y+63	; 0x3f
    2c8a:	11 96       	adiw	r26, 0x01	; 1
    2c8c:	2c 93       	st	X, r18
    2c8e:	11 97       	sbiw	r26, 0x01	; 1
    2c90:	21 96       	adiw	r28, 0x01	; 1
    2c92:	3f ad       	ldd	r19, Y+63	; 0x3f
    2c94:	21 97       	sbiw	r28, 0x01	; 1
    2c96:	12 96       	adiw	r26, 0x02	; 2
    2c98:	3c 93       	st	X, r19
    2c9a:	e2 82       	std	Z+2, r14	; 0x02
    2c9c:	f3 82       	std	Z+3, r15	; 0x03
    2c9e:	44 83       	std	Z+4, r20	; 0x04
    2ca0:	55 83       	std	Z+5, r21	; 0x05
    2ca2:	66 83       	std	Z+6, r22	; 0x06
    2ca4:	77 83       	std	Z+7, r23	; 0x07
    2ca6:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(U_Load_Buf);
    2caa:	8d b7       	in	r24, 0x3d	; 61
    2cac:	9e b7       	in	r25, 0x3e	; 62
    2cae:	08 96       	adiw	r24, 0x08	; 8
    2cb0:	0f b6       	in	r0, 0x3f	; 63
    2cb2:	f8 94       	cli
    2cb4:	9e bf       	out	0x3e, r25	; 62
    2cb6:	0f be       	out	0x3f, r0	; 63
    2cb8:	8d bf       	out	0x3d, r24	; 61
    2cba:	8f ad       	ldd	r24, Y+63	; 0x3f
    2cbc:	21 96       	adiw	r28, 0x01	; 1
    2cbe:	9f ad       	ldd	r25, Y+63	; 0x3f
    2cc0:	21 97       	sbiw	r28, 0x01	; 1
    2cc2:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(10,3);
    2cc6:	8a e0       	ldi	r24, 0x0A	; 10
    2cc8:	63 e0       	ldi	r22, 0x03	; 3
    2cca:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    2cce:	8f e0       	ldi	r24, 0x0F	; 15
    2cd0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    2cd4:	80 91 68 03 	lds	r24, 0x0368
    2cd8:	90 91 69 03 	lds	r25, 0x0369
    2cdc:	84 33       	cpi	r24, 0x34	; 52
    2cde:	91 05       	cpc	r25, r1
    2ce0:	09 f4       	brne	.+2      	; 0x2ce4 <__stack+0x1be5>
    2ce2:	41 c0       	rjmp	.+130    	; 0x2d66 <__stack+0x1c67>
    2ce4:	85 33       	cpi	r24, 0x35	; 53
    2ce6:	91 05       	cpc	r25, r1
    2ce8:	9c f4       	brge	.+38     	; 0x2d10 <__stack+0x1c11>
    2cea:	81 33       	cpi	r24, 0x31	; 49
    2cec:	91 05       	cpc	r25, r1
    2cee:	31 f1       	breq	.+76     	; 0x2d3c <__stack+0x1c3d>
    2cf0:	82 33       	cpi	r24, 0x32	; 50
    2cf2:	91 05       	cpc	r25, r1
    2cf4:	2c f4       	brge	.+10     	; 0x2d00 <__stack+0x1c01>
    2cf6:	c0 97       	sbiw	r24, 0x30	; 48
    2cf8:	11 f0       	breq	.+4      	; 0x2cfe <__stack+0x1bff>
    2cfa:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2cfe:	5c c0       	rjmp	.+184    	; 0x2db8 <__stack+0x1cb9>
    2d00:	82 33       	cpi	r24, 0x32	; 50
    2d02:	91 05       	cpc	r25, r1
    2d04:	11 f1       	breq	.+68     	; 0x2d4a <__stack+0x1c4b>
    2d06:	c3 97       	sbiw	r24, 0x33	; 51
    2d08:	11 f0       	breq	.+4      	; 0x2d0e <__stack+0x1c0f>
    2d0a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2d0e:	24 c0       	rjmp	.+72     	; 0x2d58 <__stack+0x1c59>
    2d10:	87 33       	cpi	r24, 0x37	; 55
    2d12:	91 05       	cpc	r25, r1
    2d14:	e1 f1       	breq	.+120    	; 0x2d8e <__stack+0x1c8f>
    2d16:	88 33       	cpi	r24, 0x38	; 56
    2d18:	91 05       	cpc	r25, r1
    2d1a:	44 f4       	brge	.+16     	; 0x2d2c <__stack+0x1c2d>
    2d1c:	85 33       	cpi	r24, 0x35	; 53
    2d1e:	91 05       	cpc	r25, r1
    2d20:	41 f1       	breq	.+80     	; 0x2d72 <__stack+0x1c73>
    2d22:	c6 97       	sbiw	r24, 0x36	; 54
    2d24:	11 f0       	breq	.+4      	; 0x2d2a <__stack+0x1c2b>
    2d26:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2d2a:	2a c0       	rjmp	.+84     	; 0x2d80 <__stack+0x1c81>
    2d2c:	88 33       	cpi	r24, 0x38	; 56
    2d2e:	91 05       	cpc	r25, r1
    2d30:	a9 f1       	breq	.+106    	; 0x2d9c <__stack+0x1c9d>
    2d32:	c9 97       	sbiw	r24, 0x39	; 57
    2d34:	11 f0       	breq	.+4      	; 0x2d3a <__stack+0x1c3b>
    2d36:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2d3a:	37 c0       	rjmp	.+110    	; 0x2daa <__stack+0x1cab>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    2d3c:	8c e0       	ldi	r24, 0x0C	; 12
    2d3e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[2] = '1';
    2d42:	81 e3       	ldi	r24, 0x31	; 49
    2d44:	8f 8b       	std	Y+23, r24	; 0x17
    2d46:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    2d4a:	8c e0       	ldi	r24, 0x0C	; 12
    2d4c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[2] = '2';
    2d50:	82 e3       	ldi	r24, 0x32	; 50
    2d52:	8f 8b       	std	Y+23, r24	; 0x17
    2d54:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    2d58:	8c e0       	ldi	r24, 0x0C	; 12
    2d5a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[2] = '3';
    2d5e:	83 e3       	ldi	r24, 0x33	; 51
    2d60:	8f 8b       	std	Y+23, r24	; 0x17
    2d62:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    2d66:	8c e0       	ldi	r24, 0x0C	; 12
    2d68:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[2] = '4';
    2d6c:	8f 8a       	std	Y+23, r8	; 0x17
    2d6e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    2d72:	8c e0       	ldi	r24, 0x0C	; 12
    2d74:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     U_Load_Buf[2] = '5';
    2d78:	85 e3       	ldi	r24, 0x35	; 53
    2d7a:	8f 8b       	std	Y+23, r24	; 0x17
    2d7c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    2d80:	8c e0       	ldi	r24, 0x0C	; 12
    2d82:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[2] = '6';
    2d86:	86 e3       	ldi	r24, 0x36	; 54
    2d88:	8f 8b       	std	Y+23, r24	; 0x17
    2d8a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    2d8e:	8c e0       	ldi	r24, 0x0C	; 12
    2d90:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[2] = '7';
    2d94:	87 e3       	ldi	r24, 0x37	; 55
    2d96:	8f 8b       	std	Y+23, r24	; 0x17
    2d98:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    2d9c:	8c e0       	ldi	r24, 0x0C	; 12
    2d9e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[2] = '8';
    2da2:	88 e3       	ldi	r24, 0x38	; 56
    2da4:	8f 8b       	std	Y+23, r24	; 0x17
    2da6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    2daa:	8c e0       	ldi	r24, 0x0C	; 12
    2dac:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[2] = '9';
    2db0:	89 e3       	ldi	r24, 0x39	; 57
    2db2:	8f 8b       	std	Y+23, r24	; 0x17
    2db4:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    2db8:	8c e0       	ldi	r24, 0x0C	; 12
    2dba:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[2] = '0';
    2dbe:	80 e3       	ldi	r24, 0x30	; 48
    2dc0:	8f 8b       	std	Y+23, r24	; 0x17
    2dc2:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 4:  lcd_gotoxy(11,3);
    2dc6:	8b e0       	ldi	r24, 0x0B	; 11
    2dc8:	63 e0       	ldi	r22, 0x03	; 3
    2dca:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    2dce:	8f e0       	ldi	r24, 0x0F	; 15
    2dd0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
    2dd4:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
								         break;
								case 5:  U_Load = atof(U_Load_Buf);	 
    2dd8:	8f ad       	ldd	r24, Y+63	; 0x3f
    2dda:	21 96       	adiw	r28, 0x01	; 1
    2ddc:	9f ad       	ldd	r25, Y+63	; 0x3f
    2dde:	21 97       	sbiw	r28, 0x01	; 1
    2de0:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    2de4:	60 93 b9 02 	sts	0x02B9, r22
    2de8:	70 93 ba 02 	sts	0x02BA, r23
    2dec:	80 93 bb 02 	sts	0x02BB, r24
    2df0:	90 93 bc 02 	sts	0x02BC, r25
										 lcd_gotoxy(8,3);
    2df4:	88 e0       	ldi	r24, 0x08	; 8
    2df6:	63 e0       	ldi	r22, 0x03	; 3
    2df8:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(U_Load_Buf,"%07.3f", U_Load);
    2dfc:	40 91 b9 02 	lds	r20, 0x02B9
    2e00:	50 91 ba 02 	lds	r21, 0x02BA
    2e04:	60 91 bb 02 	lds	r22, 0x02BB
    2e08:	70 91 bc 02 	lds	r23, 0x02BC
    2e0c:	ad b7       	in	r26, 0x3d	; 61
    2e0e:	be b7       	in	r27, 0x3e	; 62
    2e10:	18 97       	sbiw	r26, 0x08	; 8
    2e12:	0f b6       	in	r0, 0x3f	; 63
    2e14:	f8 94       	cli
    2e16:	be bf       	out	0x3e, r27	; 62
    2e18:	0f be       	out	0x3f, r0	; 63
    2e1a:	ad bf       	out	0x3d, r26	; 61
    2e1c:	ed b7       	in	r30, 0x3d	; 61
    2e1e:	fe b7       	in	r31, 0x3e	; 62
    2e20:	31 96       	adiw	r30, 0x01	; 1
    2e22:	2f ad       	ldd	r18, Y+63	; 0x3f
    2e24:	11 96       	adiw	r26, 0x01	; 1
    2e26:	2c 93       	st	X, r18
    2e28:	11 97       	sbiw	r26, 0x01	; 1
    2e2a:	21 96       	adiw	r28, 0x01	; 1
    2e2c:	3f ad       	ldd	r19, Y+63	; 0x3f
    2e2e:	21 97       	sbiw	r28, 0x01	; 1
    2e30:	12 96       	adiw	r26, 0x02	; 2
    2e32:	3c 93       	st	X, r19
    2e34:	e2 82       	std	Z+2, r14	; 0x02
    2e36:	f3 82       	std	Z+3, r15	; 0x03
    2e38:	44 83       	std	Z+4, r20	; 0x04
    2e3a:	55 83       	std	Z+5, r21	; 0x05
    2e3c:	66 83       	std	Z+6, r22	; 0x06
    2e3e:	77 83       	std	Z+7, r23	; 0x07
    2e40:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(U_Load_Buf);
    2e44:	8d b7       	in	r24, 0x3d	; 61
    2e46:	9e b7       	in	r25, 0x3e	; 62
    2e48:	08 96       	adiw	r24, 0x08	; 8
    2e4a:	0f b6       	in	r0, 0x3f	; 63
    2e4c:	f8 94       	cli
    2e4e:	9e bf       	out	0x3e, r25	; 62
    2e50:	0f be       	out	0x3f, r0	; 63
    2e52:	8d bf       	out	0x3d, r24	; 61
    2e54:	8f ad       	ldd	r24, Y+63	; 0x3f
    2e56:	21 96       	adiw	r28, 0x01	; 1
    2e58:	9f ad       	ldd	r25, Y+63	; 0x3f
    2e5a:	21 97       	sbiw	r28, 0x01	; 1
    2e5c:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(12,3);
    2e60:	8c e0       	ldi	r24, 0x0C	; 12
    2e62:	63 e0       	ldi	r22, 0x03	; 3
    2e64:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    2e68:	8f e0       	ldi	r24, 0x0F	; 15
    2e6a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    2e6e:	80 91 68 03 	lds	r24, 0x0368
    2e72:	90 91 69 03 	lds	r25, 0x0369
    2e76:	84 33       	cpi	r24, 0x34	; 52
    2e78:	91 05       	cpc	r25, r1
    2e7a:	09 f4       	brne	.+2      	; 0x2e7e <__stack+0x1d7f>
    2e7c:	41 c0       	rjmp	.+130    	; 0x2f00 <__stack+0x1e01>
    2e7e:	85 33       	cpi	r24, 0x35	; 53
    2e80:	91 05       	cpc	r25, r1
    2e82:	9c f4       	brge	.+38     	; 0x2eaa <__stack+0x1dab>
    2e84:	81 33       	cpi	r24, 0x31	; 49
    2e86:	91 05       	cpc	r25, r1
    2e88:	31 f1       	breq	.+76     	; 0x2ed6 <__stack+0x1dd7>
    2e8a:	82 33       	cpi	r24, 0x32	; 50
    2e8c:	91 05       	cpc	r25, r1
    2e8e:	2c f4       	brge	.+10     	; 0x2e9a <__stack+0x1d9b>
    2e90:	c0 97       	sbiw	r24, 0x30	; 48
    2e92:	11 f0       	breq	.+4      	; 0x2e98 <__stack+0x1d99>
    2e94:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2e98:	5c c0       	rjmp	.+184    	; 0x2f52 <__stack+0x1e53>
    2e9a:	82 33       	cpi	r24, 0x32	; 50
    2e9c:	91 05       	cpc	r25, r1
    2e9e:	11 f1       	breq	.+68     	; 0x2ee4 <__stack+0x1de5>
    2ea0:	c3 97       	sbiw	r24, 0x33	; 51
    2ea2:	11 f0       	breq	.+4      	; 0x2ea8 <__stack+0x1da9>
    2ea4:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2ea8:	24 c0       	rjmp	.+72     	; 0x2ef2 <__stack+0x1df3>
    2eaa:	87 33       	cpi	r24, 0x37	; 55
    2eac:	91 05       	cpc	r25, r1
    2eae:	e1 f1       	breq	.+120    	; 0x2f28 <__stack+0x1e29>
    2eb0:	88 33       	cpi	r24, 0x38	; 56
    2eb2:	91 05       	cpc	r25, r1
    2eb4:	44 f4       	brge	.+16     	; 0x2ec6 <__stack+0x1dc7>
    2eb6:	85 33       	cpi	r24, 0x35	; 53
    2eb8:	91 05       	cpc	r25, r1
    2eba:	41 f1       	breq	.+80     	; 0x2f0c <__stack+0x1e0d>
    2ebc:	c6 97       	sbiw	r24, 0x36	; 54
    2ebe:	11 f0       	breq	.+4      	; 0x2ec4 <__stack+0x1dc5>
    2ec0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2ec4:	2a c0       	rjmp	.+84     	; 0x2f1a <__stack+0x1e1b>
    2ec6:	88 33       	cpi	r24, 0x38	; 56
    2ec8:	91 05       	cpc	r25, r1
    2eca:	a9 f1       	breq	.+106    	; 0x2f36 <__stack+0x1e37>
    2ecc:	c9 97       	sbiw	r24, 0x39	; 57
    2ece:	11 f0       	breq	.+4      	; 0x2ed4 <__stack+0x1dd5>
    2ed0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    2ed4:	37 c0       	rjmp	.+110    	; 0x2f44 <__stack+0x1e45>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    2ed6:	8c e0       	ldi	r24, 0x0C	; 12
    2ed8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[4] = '1';
    2edc:	81 e3       	ldi	r24, 0x31	; 49
    2ede:	89 8f       	std	Y+25, r24	; 0x19
    2ee0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    2ee4:	8c e0       	ldi	r24, 0x0C	; 12
    2ee6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[4] = '2';
    2eea:	82 e3       	ldi	r24, 0x32	; 50
    2eec:	89 8f       	std	Y+25, r24	; 0x19
    2eee:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    2ef2:	8c e0       	ldi	r24, 0x0C	; 12
    2ef4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[4] = '3';
    2ef8:	83 e3       	ldi	r24, 0x33	; 51
    2efa:	89 8f       	std	Y+25, r24	; 0x19
    2efc:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    2f00:	8c e0       	ldi	r24, 0x0C	; 12
    2f02:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[4] = '4';
    2f06:	89 8e       	std	Y+25, r8	; 0x19
    2f08:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    2f0c:	8c e0       	ldi	r24, 0x0C	; 12
    2f0e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     U_Load_Buf[4] = '5';
    2f12:	85 e3       	ldi	r24, 0x35	; 53
    2f14:	89 8f       	std	Y+25, r24	; 0x19
    2f16:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    2f1a:	8c e0       	ldi	r24, 0x0C	; 12
    2f1c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[4] = '6';
    2f20:	86 e3       	ldi	r24, 0x36	; 54
    2f22:	89 8f       	std	Y+25, r24	; 0x19
    2f24:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    2f28:	8c e0       	ldi	r24, 0x0C	; 12
    2f2a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[4] = '7';
    2f2e:	87 e3       	ldi	r24, 0x37	; 55
    2f30:	89 8f       	std	Y+25, r24	; 0x19
    2f32:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    2f36:	8c e0       	ldi	r24, 0x0C	; 12
    2f38:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[4] = '8';
    2f3c:	88 e3       	ldi	r24, 0x38	; 56
    2f3e:	89 8f       	std	Y+25, r24	; 0x19
    2f40:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    2f44:	8c e0       	ldi	r24, 0x0C	; 12
    2f46:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[4] = '9';
    2f4a:	89 e3       	ldi	r24, 0x39	; 57
    2f4c:	89 8f       	std	Y+25, r24	; 0x19
    2f4e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    2f52:	8c e0       	ldi	r24, 0x0C	; 12
    2f54:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[4] = '0';
    2f58:	80 e3       	ldi	r24, 0x30	; 48
    2f5a:	89 8f       	std	Y+25, r24	; 0x19
    2f5c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 6:  U_Load = atof(U_Load_Buf);	 
    2f60:	8f ad       	ldd	r24, Y+63	; 0x3f
    2f62:	21 96       	adiw	r28, 0x01	; 1
    2f64:	9f ad       	ldd	r25, Y+63	; 0x3f
    2f66:	21 97       	sbiw	r28, 0x01	; 1
    2f68:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    2f6c:	60 93 b9 02 	sts	0x02B9, r22
    2f70:	70 93 ba 02 	sts	0x02BA, r23
    2f74:	80 93 bb 02 	sts	0x02BB, r24
    2f78:	90 93 bc 02 	sts	0x02BC, r25
										 lcd_gotoxy(8,3);
    2f7c:	88 e0       	ldi	r24, 0x08	; 8
    2f7e:	63 e0       	ldi	r22, 0x03	; 3
    2f80:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(U_Load_Buf,"%07.3f", U_Load);
    2f84:	40 91 b9 02 	lds	r20, 0x02B9
    2f88:	50 91 ba 02 	lds	r21, 0x02BA
    2f8c:	60 91 bb 02 	lds	r22, 0x02BB
    2f90:	70 91 bc 02 	lds	r23, 0x02BC
    2f94:	ad b7       	in	r26, 0x3d	; 61
    2f96:	be b7       	in	r27, 0x3e	; 62
    2f98:	18 97       	sbiw	r26, 0x08	; 8
    2f9a:	0f b6       	in	r0, 0x3f	; 63
    2f9c:	f8 94       	cli
    2f9e:	be bf       	out	0x3e, r27	; 62
    2fa0:	0f be       	out	0x3f, r0	; 63
    2fa2:	ad bf       	out	0x3d, r26	; 61
    2fa4:	ed b7       	in	r30, 0x3d	; 61
    2fa6:	fe b7       	in	r31, 0x3e	; 62
    2fa8:	31 96       	adiw	r30, 0x01	; 1
    2faa:	2f ad       	ldd	r18, Y+63	; 0x3f
    2fac:	11 96       	adiw	r26, 0x01	; 1
    2fae:	2c 93       	st	X, r18
    2fb0:	11 97       	sbiw	r26, 0x01	; 1
    2fb2:	21 96       	adiw	r28, 0x01	; 1
    2fb4:	3f ad       	ldd	r19, Y+63	; 0x3f
    2fb6:	21 97       	sbiw	r28, 0x01	; 1
    2fb8:	12 96       	adiw	r26, 0x02	; 2
    2fba:	3c 93       	st	X, r19
    2fbc:	e2 82       	std	Z+2, r14	; 0x02
    2fbe:	f3 82       	std	Z+3, r15	; 0x03
    2fc0:	44 83       	std	Z+4, r20	; 0x04
    2fc2:	55 83       	std	Z+5, r21	; 0x05
    2fc4:	66 83       	std	Z+6, r22	; 0x06
    2fc6:	77 83       	std	Z+7, r23	; 0x07
    2fc8:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(U_Load_Buf);
    2fcc:	8d b7       	in	r24, 0x3d	; 61
    2fce:	9e b7       	in	r25, 0x3e	; 62
    2fd0:	08 96       	adiw	r24, 0x08	; 8
    2fd2:	0f b6       	in	r0, 0x3f	; 63
    2fd4:	f8 94       	cli
    2fd6:	9e bf       	out	0x3e, r25	; 62
    2fd8:	0f be       	out	0x3f, r0	; 63
    2fda:	8d bf       	out	0x3d, r24	; 61
    2fdc:	8f ad       	ldd	r24, Y+63	; 0x3f
    2fde:	21 96       	adiw	r28, 0x01	; 1
    2fe0:	9f ad       	ldd	r25, Y+63	; 0x3f
    2fe2:	21 97       	sbiw	r28, 0x01	; 1
    2fe4:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(13,3);
    2fe8:	8d e0       	ldi	r24, 0x0D	; 13
    2fea:	63 e0       	ldi	r22, 0x03	; 3
    2fec:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    2ff0:	8f e0       	ldi	r24, 0x0F	; 15
    2ff2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    2ff6:	80 91 68 03 	lds	r24, 0x0368
    2ffa:	90 91 69 03 	lds	r25, 0x0369
    2ffe:	84 33       	cpi	r24, 0x34	; 52
    3000:	91 05       	cpc	r25, r1
    3002:	09 f4       	brne	.+2      	; 0x3006 <__stack+0x1f07>
    3004:	41 c0       	rjmp	.+130    	; 0x3088 <__stack+0x1f89>
    3006:	85 33       	cpi	r24, 0x35	; 53
    3008:	91 05       	cpc	r25, r1
    300a:	9c f4       	brge	.+38     	; 0x3032 <__stack+0x1f33>
    300c:	81 33       	cpi	r24, 0x31	; 49
    300e:	91 05       	cpc	r25, r1
    3010:	31 f1       	breq	.+76     	; 0x305e <__stack+0x1f5f>
    3012:	82 33       	cpi	r24, 0x32	; 50
    3014:	91 05       	cpc	r25, r1
    3016:	2c f4       	brge	.+10     	; 0x3022 <__stack+0x1f23>
    3018:	c0 97       	sbiw	r24, 0x30	; 48
    301a:	11 f0       	breq	.+4      	; 0x3020 <__stack+0x1f21>
    301c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3020:	5c c0       	rjmp	.+184    	; 0x30da <__stack+0x1fdb>
    3022:	82 33       	cpi	r24, 0x32	; 50
    3024:	91 05       	cpc	r25, r1
    3026:	11 f1       	breq	.+68     	; 0x306c <__stack+0x1f6d>
    3028:	c3 97       	sbiw	r24, 0x33	; 51
    302a:	11 f0       	breq	.+4      	; 0x3030 <__stack+0x1f31>
    302c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3030:	24 c0       	rjmp	.+72     	; 0x307a <__stack+0x1f7b>
    3032:	87 33       	cpi	r24, 0x37	; 55
    3034:	91 05       	cpc	r25, r1
    3036:	e1 f1       	breq	.+120    	; 0x30b0 <__stack+0x1fb1>
    3038:	88 33       	cpi	r24, 0x38	; 56
    303a:	91 05       	cpc	r25, r1
    303c:	44 f4       	brge	.+16     	; 0x304e <__stack+0x1f4f>
    303e:	85 33       	cpi	r24, 0x35	; 53
    3040:	91 05       	cpc	r25, r1
    3042:	41 f1       	breq	.+80     	; 0x3094 <__stack+0x1f95>
    3044:	c6 97       	sbiw	r24, 0x36	; 54
    3046:	11 f0       	breq	.+4      	; 0x304c <__stack+0x1f4d>
    3048:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    304c:	2a c0       	rjmp	.+84     	; 0x30a2 <__stack+0x1fa3>
    304e:	88 33       	cpi	r24, 0x38	; 56
    3050:	91 05       	cpc	r25, r1
    3052:	a9 f1       	breq	.+106    	; 0x30be <__stack+0x1fbf>
    3054:	c9 97       	sbiw	r24, 0x39	; 57
    3056:	11 f0       	breq	.+4      	; 0x305c <__stack+0x1f5d>
    3058:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    305c:	37 c0       	rjmp	.+110    	; 0x30cc <__stack+0x1fcd>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    305e:	8c e0       	ldi	r24, 0x0C	; 12
    3060:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[5] = '1';
    3064:	81 e3       	ldi	r24, 0x31	; 49
    3066:	8a 8f       	std	Y+26, r24	; 0x1a
    3068:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    306c:	8c e0       	ldi	r24, 0x0C	; 12
    306e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[5] = '2';
    3072:	82 e3       	ldi	r24, 0x32	; 50
    3074:	8a 8f       	std	Y+26, r24	; 0x1a
    3076:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    307a:	8c e0       	ldi	r24, 0x0C	; 12
    307c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[5] = '3';
    3080:	83 e3       	ldi	r24, 0x33	; 51
    3082:	8a 8f       	std	Y+26, r24	; 0x1a
    3084:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    3088:	8c e0       	ldi	r24, 0x0C	; 12
    308a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[5] = '4';
    308e:	8a 8e       	std	Y+26, r8	; 0x1a
    3090:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    3094:	8c e0       	ldi	r24, 0x0C	; 12
    3096:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     U_Load_Buf[5] = '5';
    309a:	85 e3       	ldi	r24, 0x35	; 53
    309c:	8a 8f       	std	Y+26, r24	; 0x1a
    309e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    30a2:	8c e0       	ldi	r24, 0x0C	; 12
    30a4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[5] = '6';
    30a8:	86 e3       	ldi	r24, 0x36	; 54
    30aa:	8a 8f       	std	Y+26, r24	; 0x1a
    30ac:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    30b0:	8c e0       	ldi	r24, 0x0C	; 12
    30b2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[5] = '7';
    30b6:	87 e3       	ldi	r24, 0x37	; 55
    30b8:	8a 8f       	std	Y+26, r24	; 0x1a
    30ba:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    30be:	8c e0       	ldi	r24, 0x0C	; 12
    30c0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[5] = '8';
    30c4:	88 e3       	ldi	r24, 0x38	; 56
    30c6:	8a 8f       	std	Y+26, r24	; 0x1a
    30c8:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    30cc:	8c e0       	ldi	r24, 0x0C	; 12
    30ce:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[5] = '9';
    30d2:	89 e3       	ldi	r24, 0x39	; 57
    30d4:	8a 8f       	std	Y+26, r24	; 0x1a
    30d6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    30da:	8c e0       	ldi	r24, 0x0C	; 12
    30dc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[5] = '0';
    30e0:	80 e3       	ldi	r24, 0x30	; 48
    30e2:	8a 8f       	std	Y+26, r24	; 0x1a
    30e4:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 7:  U_Load = atof(U_Load_Buf);	 
    30e8:	8f ad       	ldd	r24, Y+63	; 0x3f
    30ea:	21 96       	adiw	r28, 0x01	; 1
    30ec:	9f ad       	ldd	r25, Y+63	; 0x3f
    30ee:	21 97       	sbiw	r28, 0x01	; 1
    30f0:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    30f4:	60 93 b9 02 	sts	0x02B9, r22
    30f8:	70 93 ba 02 	sts	0x02BA, r23
    30fc:	80 93 bb 02 	sts	0x02BB, r24
    3100:	90 93 bc 02 	sts	0x02BC, r25
										 lcd_gotoxy(8,3);
    3104:	88 e0       	ldi	r24, 0x08	; 8
    3106:	63 e0       	ldi	r22, 0x03	; 3
    3108:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(U_Load_Buf,"%07.3f", U_Load);
    310c:	40 91 b9 02 	lds	r20, 0x02B9
    3110:	50 91 ba 02 	lds	r21, 0x02BA
    3114:	60 91 bb 02 	lds	r22, 0x02BB
    3118:	70 91 bc 02 	lds	r23, 0x02BC
    311c:	ad b7       	in	r26, 0x3d	; 61
    311e:	be b7       	in	r27, 0x3e	; 62
    3120:	18 97       	sbiw	r26, 0x08	; 8
    3122:	0f b6       	in	r0, 0x3f	; 63
    3124:	f8 94       	cli
    3126:	be bf       	out	0x3e, r27	; 62
    3128:	0f be       	out	0x3f, r0	; 63
    312a:	ad bf       	out	0x3d, r26	; 61
    312c:	ed b7       	in	r30, 0x3d	; 61
    312e:	fe b7       	in	r31, 0x3e	; 62
    3130:	31 96       	adiw	r30, 0x01	; 1
    3132:	2f ad       	ldd	r18, Y+63	; 0x3f
    3134:	11 96       	adiw	r26, 0x01	; 1
    3136:	2c 93       	st	X, r18
    3138:	11 97       	sbiw	r26, 0x01	; 1
    313a:	21 96       	adiw	r28, 0x01	; 1
    313c:	3f ad       	ldd	r19, Y+63	; 0x3f
    313e:	21 97       	sbiw	r28, 0x01	; 1
    3140:	12 96       	adiw	r26, 0x02	; 2
    3142:	3c 93       	st	X, r19
    3144:	e2 82       	std	Z+2, r14	; 0x02
    3146:	f3 82       	std	Z+3, r15	; 0x03
    3148:	44 83       	std	Z+4, r20	; 0x04
    314a:	55 83       	std	Z+5, r21	; 0x05
    314c:	66 83       	std	Z+6, r22	; 0x06
    314e:	77 83       	std	Z+7, r23	; 0x07
    3150:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(U_Load_Buf);
    3154:	8d b7       	in	r24, 0x3d	; 61
    3156:	9e b7       	in	r25, 0x3e	; 62
    3158:	08 96       	adiw	r24, 0x08	; 8
    315a:	0f b6       	in	r0, 0x3f	; 63
    315c:	f8 94       	cli
    315e:	9e bf       	out	0x3e, r25	; 62
    3160:	0f be       	out	0x3f, r0	; 63
    3162:	8d bf       	out	0x3d, r24	; 61
    3164:	8f ad       	ldd	r24, Y+63	; 0x3f
    3166:	21 96       	adiw	r28, 0x01	; 1
    3168:	9f ad       	ldd	r25, Y+63	; 0x3f
    316a:	21 97       	sbiw	r28, 0x01	; 1
    316c:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(14,3);
    3170:	8e e0       	ldi	r24, 0x0E	; 14
    3172:	63 e0       	ldi	r22, 0x03	; 3
    3174:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    3178:	8f e0       	ldi	r24, 0x0F	; 15
    317a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    317e:	80 91 68 03 	lds	r24, 0x0368
    3182:	90 91 69 03 	lds	r25, 0x0369
    3186:	84 33       	cpi	r24, 0x34	; 52
    3188:	91 05       	cpc	r25, r1
    318a:	09 f4       	brne	.+2      	; 0x318e <__stack+0x208f>
    318c:	41 c0       	rjmp	.+130    	; 0x3210 <__stack+0x2111>
    318e:	85 33       	cpi	r24, 0x35	; 53
    3190:	91 05       	cpc	r25, r1
    3192:	9c f4       	brge	.+38     	; 0x31ba <__stack+0x20bb>
    3194:	81 33       	cpi	r24, 0x31	; 49
    3196:	91 05       	cpc	r25, r1
    3198:	31 f1       	breq	.+76     	; 0x31e6 <__stack+0x20e7>
    319a:	82 33       	cpi	r24, 0x32	; 50
    319c:	91 05       	cpc	r25, r1
    319e:	2c f4       	brge	.+10     	; 0x31aa <__stack+0x20ab>
    31a0:	c0 97       	sbiw	r24, 0x30	; 48
    31a2:	11 f0       	breq	.+4      	; 0x31a8 <__stack+0x20a9>
    31a4:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    31a8:	5c c0       	rjmp	.+184    	; 0x3262 <__stack+0x2163>
    31aa:	82 33       	cpi	r24, 0x32	; 50
    31ac:	91 05       	cpc	r25, r1
    31ae:	11 f1       	breq	.+68     	; 0x31f4 <__stack+0x20f5>
    31b0:	c3 97       	sbiw	r24, 0x33	; 51
    31b2:	11 f0       	breq	.+4      	; 0x31b8 <__stack+0x20b9>
    31b4:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    31b8:	24 c0       	rjmp	.+72     	; 0x3202 <__stack+0x2103>
    31ba:	87 33       	cpi	r24, 0x37	; 55
    31bc:	91 05       	cpc	r25, r1
    31be:	e1 f1       	breq	.+120    	; 0x3238 <__stack+0x2139>
    31c0:	88 33       	cpi	r24, 0x38	; 56
    31c2:	91 05       	cpc	r25, r1
    31c4:	44 f4       	brge	.+16     	; 0x31d6 <__stack+0x20d7>
    31c6:	85 33       	cpi	r24, 0x35	; 53
    31c8:	91 05       	cpc	r25, r1
    31ca:	41 f1       	breq	.+80     	; 0x321c <__stack+0x211d>
    31cc:	c6 97       	sbiw	r24, 0x36	; 54
    31ce:	11 f0       	breq	.+4      	; 0x31d4 <__stack+0x20d5>
    31d0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    31d4:	2a c0       	rjmp	.+84     	; 0x322a <__stack+0x212b>
    31d6:	88 33       	cpi	r24, 0x38	; 56
    31d8:	91 05       	cpc	r25, r1
    31da:	a9 f1       	breq	.+106    	; 0x3246 <__stack+0x2147>
    31dc:	c9 97       	sbiw	r24, 0x39	; 57
    31de:	11 f0       	breq	.+4      	; 0x31e4 <__stack+0x20e5>
    31e0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    31e4:	37 c0       	rjmp	.+110    	; 0x3254 <__stack+0x2155>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    31e6:	8c e0       	ldi	r24, 0x0C	; 12
    31e8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[6] = '1';
    31ec:	81 e3       	ldi	r24, 0x31	; 49
    31ee:	8b 8f       	std	Y+27, r24	; 0x1b
    31f0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    31f4:	8c e0       	ldi	r24, 0x0C	; 12
    31f6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[6] = '2';
    31fa:	82 e3       	ldi	r24, 0x32	; 50
    31fc:	8b 8f       	std	Y+27, r24	; 0x1b
    31fe:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    3202:	8c e0       	ldi	r24, 0x0C	; 12
    3204:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[6] = '3';
    3208:	83 e3       	ldi	r24, 0x33	; 51
    320a:	8b 8f       	std	Y+27, r24	; 0x1b
    320c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    3210:	8c e0       	ldi	r24, 0x0C	; 12
    3212:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[6] = '4';
    3216:	8b 8e       	std	Y+27, r8	; 0x1b
    3218:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    321c:	8c e0       	ldi	r24, 0x0C	; 12
    321e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     U_Load_Buf[6] = '5';
    3222:	85 e3       	ldi	r24, 0x35	; 53
    3224:	8b 8f       	std	Y+27, r24	; 0x1b
    3226:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    322a:	8c e0       	ldi	r24, 0x0C	; 12
    322c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 U_Load_Buf[6] = '6';
    3230:	86 e3       	ldi	r24, 0x36	; 54
    3232:	8b 8f       	std	Y+27, r24	; 0x1b
    3234:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    3238:	8c e0       	ldi	r24, 0x0C	; 12
    323a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[6] = '7';
    323e:	87 e3       	ldi	r24, 0x37	; 55
    3240:	8b 8f       	std	Y+27, r24	; 0x1b
    3242:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    3246:	8c e0       	ldi	r24, 0x0C	; 12
    3248:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[6] = '8';
    324c:	88 e3       	ldi	r24, 0x38	; 56
    324e:	8b 8f       	std	Y+27, r24	; 0x1b
    3250:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    3254:	8c e0       	ldi	r24, 0x0C	; 12
    3256:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[6] = '9';
    325a:	89 e3       	ldi	r24, 0x39	; 57
    325c:	8b 8f       	std	Y+27, r24	; 0x1b
    325e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    3262:	8c e0       	ldi	r24, 0x0C	; 12
    3264:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         U_Load_Buf[6] = '0';
    3268:	80 e3       	ldi	r24, 0x30	; 48
    326a:	8b 8f       	std	Y+27, r24	; 0x1b
    326c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
										  }	
								         break;
					        } 
						    
					}
					if(ProcessDataPageCursor == 4)
    3270:	9e ad       	ldd	r25, Y+62	; 0x3e
    3272:	94 30       	cpi	r25, 0x04	; 4
    3274:	09 f0       	breq	.+2      	; 0x3278 <__stack+0x2179>
    3276:	96 c4       	rjmp	.+2348   	; 0x3ba4 <__stack+0x2aa5>
					{
						   lcd_gotoxy(8,1);
    3278:	88 e0       	ldi	r24, 0x08	; 8
    327a:	61 e0       	ldi	r22, 0x01	; 1
    327c:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    3280:	8f e0       	ldi	r24, 0x0F	; 15
    3282:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
						    
						    switch (ProcessDataLineCursor)  // Main Menu Switch statement
    3286:	a4 e0       	ldi	r26, 0x04	; 4
    3288:	9a 16       	cp	r9, r26
    328a:	09 f4       	brne	.+2      	; 0x328e <__stack+0x218f>
    328c:	4e c2       	rjmp	.+1180   	; 0x372a <__stack+0x262b>
    328e:	a9 15       	cp	r26, r9
    3290:	68 f0       	brcs	.+26     	; 0x32ac <__stack+0x21ad>
    3292:	b2 e0       	ldi	r27, 0x02	; 2
    3294:	9b 16       	cp	r9, r27
    3296:	09 f4       	brne	.+2      	; 0x329a <__stack+0x219b>
    3298:	d0 c0       	rjmp	.+416    	; 0x343a <__stack+0x233b>
    329a:	b9 15       	cp	r27, r9
    329c:	08 f4       	brcc	.+2      	; 0x32a0 <__stack+0x21a1>
    329e:	89 c1       	rjmp	.+786    	; 0x35b2 <__stack+0x24b3>
    32a0:	21 e0       	ldi	r18, 0x01	; 1
    32a2:	92 16       	cp	r9, r18
    32a4:	11 f0       	breq	.+4      	; 0x32aa <__stack+0x21ab>
    32a6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    32aa:	0d c0       	rjmp	.+26     	; 0x32c6 <__stack+0x21c7>
    32ac:	36 e0       	ldi	r19, 0x06	; 6
    32ae:	93 16       	cp	r9, r19
    32b0:	09 f4       	brne	.+2      	; 0x32b4 <__stack+0x21b5>
    32b2:	00 c3       	rjmp	.+1536   	; 0x38b4 <__stack+0x27b5>
    32b4:	93 16       	cp	r9, r19
    32b6:	08 f4       	brcc	.+2      	; 0x32ba <__stack+0x21bb>
    32b8:	41 c2       	rjmp	.+1154   	; 0x373c <__stack+0x263d>
    32ba:	87 e0       	ldi	r24, 0x07	; 7
    32bc:	98 16       	cp	r9, r24
    32be:	11 f0       	breq	.+4      	; 0x32c4 <__stack+0x21c5>
    32c0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    32c4:	b3 c3       	rjmp	.+1894   	; 0x3a2c <__stack+0x292d>
						    {
								case 1:  O_Load = atof(O_Load_Buf);	 
    32c6:	c1 01       	movw	r24, r2
    32c8:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    32cc:	60 93 ad 02 	sts	0x02AD, r22
    32d0:	70 93 ae 02 	sts	0x02AE, r23
    32d4:	80 93 af 02 	sts	0x02AF, r24
    32d8:	90 93 b0 02 	sts	0x02B0, r25
										 lcd_gotoxy(8,1);
    32dc:	88 e0       	ldi	r24, 0x08	; 8
    32de:	61 e0       	ldi	r22, 0x01	; 1
    32e0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(O_Load_Buf,"%07.3f", O_Load);
    32e4:	40 91 ad 02 	lds	r20, 0x02AD
    32e8:	50 91 ae 02 	lds	r21, 0x02AE
    32ec:	60 91 af 02 	lds	r22, 0x02AF
    32f0:	70 91 b0 02 	lds	r23, 0x02B0
    32f4:	ad b7       	in	r26, 0x3d	; 61
    32f6:	be b7       	in	r27, 0x3e	; 62
    32f8:	18 97       	sbiw	r26, 0x08	; 8
    32fa:	0f b6       	in	r0, 0x3f	; 63
    32fc:	f8 94       	cli
    32fe:	be bf       	out	0x3e, r27	; 62
    3300:	0f be       	out	0x3f, r0	; 63
    3302:	ad bf       	out	0x3d, r26	; 61
    3304:	ed b7       	in	r30, 0x3d	; 61
    3306:	fe b7       	in	r31, 0x3e	; 62
    3308:	31 96       	adiw	r30, 0x01	; 1
    330a:	12 96       	adiw	r26, 0x02	; 2
    330c:	3c 92       	st	X, r3
    330e:	2e 92       	st	-X, r2
    3310:	11 97       	sbiw	r26, 0x01	; 1
    3312:	e2 82       	std	Z+2, r14	; 0x02
    3314:	f3 82       	std	Z+3, r15	; 0x03
    3316:	44 83       	std	Z+4, r20	; 0x04
    3318:	55 83       	std	Z+5, r21	; 0x05
    331a:	66 83       	std	Z+6, r22	; 0x06
    331c:	77 83       	std	Z+7, r23	; 0x07
    331e:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(O_Load_Buf);
    3322:	2d b7       	in	r18, 0x3d	; 61
    3324:	3e b7       	in	r19, 0x3e	; 62
    3326:	28 5f       	subi	r18, 0xF8	; 248
    3328:	3f 4f       	sbci	r19, 0xFF	; 255
    332a:	0f b6       	in	r0, 0x3f	; 63
    332c:	f8 94       	cli
    332e:	3e bf       	out	0x3e, r19	; 62
    3330:	0f be       	out	0x3f, r0	; 63
    3332:	2d bf       	out	0x3d, r18	; 61
    3334:	c1 01       	movw	r24, r2
    3336:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(8,1);
    333a:	88 e0       	ldi	r24, 0x08	; 8
    333c:	61 e0       	ldi	r22, 0x01	; 1
    333e:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    3342:	8f e0       	ldi	r24, 0x0F	; 15
    3344:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										  switch (key)  // Main Menu Switch statement
    3348:	80 91 68 03 	lds	r24, 0x0368
    334c:	90 91 69 03 	lds	r25, 0x0369
    3350:	84 33       	cpi	r24, 0x34	; 52
    3352:	91 05       	cpc	r25, r1
    3354:	09 f4       	brne	.+2      	; 0x3358 <__stack+0x2259>
    3356:	41 c0       	rjmp	.+130    	; 0x33da <__stack+0x22db>
    3358:	85 33       	cpi	r24, 0x35	; 53
    335a:	91 05       	cpc	r25, r1
    335c:	9c f4       	brge	.+38     	; 0x3384 <__stack+0x2285>
    335e:	81 33       	cpi	r24, 0x31	; 49
    3360:	91 05       	cpc	r25, r1
    3362:	31 f1       	breq	.+76     	; 0x33b0 <__stack+0x22b1>
    3364:	82 33       	cpi	r24, 0x32	; 50
    3366:	91 05       	cpc	r25, r1
    3368:	2c f4       	brge	.+10     	; 0x3374 <__stack+0x2275>
    336a:	c0 97       	sbiw	r24, 0x30	; 48
    336c:	11 f0       	breq	.+4      	; 0x3372 <__stack+0x2273>
    336e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3372:	5c c0       	rjmp	.+184    	; 0x342c <__stack+0x232d>
    3374:	82 33       	cpi	r24, 0x32	; 50
    3376:	91 05       	cpc	r25, r1
    3378:	11 f1       	breq	.+68     	; 0x33be <__stack+0x22bf>
    337a:	c3 97       	sbiw	r24, 0x33	; 51
    337c:	11 f0       	breq	.+4      	; 0x3382 <__stack+0x2283>
    337e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3382:	24 c0       	rjmp	.+72     	; 0x33cc <__stack+0x22cd>
    3384:	87 33       	cpi	r24, 0x37	; 55
    3386:	91 05       	cpc	r25, r1
    3388:	e1 f1       	breq	.+120    	; 0x3402 <__stack+0x2303>
    338a:	88 33       	cpi	r24, 0x38	; 56
    338c:	91 05       	cpc	r25, r1
    338e:	44 f4       	brge	.+16     	; 0x33a0 <__stack+0x22a1>
    3390:	85 33       	cpi	r24, 0x35	; 53
    3392:	91 05       	cpc	r25, r1
    3394:	41 f1       	breq	.+80     	; 0x33e6 <__stack+0x22e7>
    3396:	c6 97       	sbiw	r24, 0x36	; 54
    3398:	11 f0       	breq	.+4      	; 0x339e <__stack+0x229f>
    339a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    339e:	2a c0       	rjmp	.+84     	; 0x33f4 <__stack+0x22f5>
    33a0:	88 33       	cpi	r24, 0x38	; 56
    33a2:	91 05       	cpc	r25, r1
    33a4:	a9 f1       	breq	.+106    	; 0x3410 <__stack+0x2311>
    33a6:	c9 97       	sbiw	r24, 0x39	; 57
    33a8:	11 f0       	breq	.+4      	; 0x33ae <__stack+0x22af>
    33aa:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    33ae:	37 c0       	rjmp	.+110    	; 0x341e <__stack+0x231f>
										    {
											 
												case '1':lcd_command(LCD_DISP_ON);
    33b0:	8c e0       	ldi	r24, 0x0C	; 12
    33b2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[0] = '1';
    33b6:	81 e3       	ldi	r24, 0x31	; 49
    33b8:	8f 8f       	std	Y+31, r24	; 0x1f
    33ba:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    33be:	8c e0       	ldi	r24, 0x0C	; 12
    33c0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[0] = '2';
    33c4:	82 e3       	ldi	r24, 0x32	; 50
    33c6:	8f 8f       	std	Y+31, r24	; 0x1f
    33c8:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    33cc:	8c e0       	ldi	r24, 0x0C	; 12
    33ce:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[0] = '3';
    33d2:	83 e3       	ldi	r24, 0x33	; 51
    33d4:	8f 8f       	std	Y+31, r24	; 0x1f
    33d6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    33da:	8c e0       	ldi	r24, 0x0C	; 12
    33dc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[0] = '4';
    33e0:	8f 8e       	std	Y+31, r8	; 0x1f
    33e2:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    33e6:	8c e0       	ldi	r24, 0x0C	; 12
    33e8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     O_Load_Buf[0] = '5';
    33ec:	85 e3       	ldi	r24, 0x35	; 53
    33ee:	8f 8f       	std	Y+31, r24	; 0x1f
    33f0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    33f4:	8c e0       	ldi	r24, 0x0C	; 12
    33f6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[0] = '6';
    33fa:	86 e3       	ldi	r24, 0x36	; 54
    33fc:	8f 8f       	std	Y+31, r24	; 0x1f
    33fe:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    3402:	8c e0       	ldi	r24, 0x0C	; 12
    3404:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[0] = '7';
    3408:	87 e3       	ldi	r24, 0x37	; 55
    340a:	8f 8f       	std	Y+31, r24	; 0x1f
    340c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    3410:	8c e0       	ldi	r24, 0x0C	; 12
    3412:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[0] = '8';
    3416:	88 e3       	ldi	r24, 0x38	; 56
    3418:	8f 8f       	std	Y+31, r24	; 0x1f
    341a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    341e:	8c e0       	ldi	r24, 0x0C	; 12
    3420:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[0] = '9';
    3424:	89 e3       	ldi	r24, 0x39	; 57
    3426:	8f 8f       	std	Y+31, r24	; 0x1f
    3428:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    342c:	8c e0       	ldi	r24, 0x0C	; 12
    342e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[0] = '0';
    3432:	80 e3       	ldi	r24, 0x30	; 48
    3434:	8f 8f       	std	Y+31, r24	; 0x1f
    3436:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
											 }									
								         break;
								case 2:  O_Load = atof(O_Load_Buf);	 
    343a:	c1 01       	movw	r24, r2
    343c:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    3440:	60 93 ad 02 	sts	0x02AD, r22
    3444:	70 93 ae 02 	sts	0x02AE, r23
    3448:	80 93 af 02 	sts	0x02AF, r24
    344c:	90 93 b0 02 	sts	0x02B0, r25
										 lcd_gotoxy(8,1);
    3450:	88 e0       	ldi	r24, 0x08	; 8
    3452:	61 e0       	ldi	r22, 0x01	; 1
    3454:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(O_Load_Buf,"%07.3f", O_Load);
    3458:	40 91 ad 02 	lds	r20, 0x02AD
    345c:	50 91 ae 02 	lds	r21, 0x02AE
    3460:	60 91 af 02 	lds	r22, 0x02AF
    3464:	70 91 b0 02 	lds	r23, 0x02B0
    3468:	8d b7       	in	r24, 0x3d	; 61
    346a:	9e b7       	in	r25, 0x3e	; 62
    346c:	08 97       	sbiw	r24, 0x08	; 8
    346e:	0f b6       	in	r0, 0x3f	; 63
    3470:	f8 94       	cli
    3472:	9e bf       	out	0x3e, r25	; 62
    3474:	0f be       	out	0x3f, r0	; 63
    3476:	8d bf       	out	0x3d, r24	; 61
    3478:	ed b7       	in	r30, 0x3d	; 61
    347a:	fe b7       	in	r31, 0x3e	; 62
    347c:	31 96       	adiw	r30, 0x01	; 1
    347e:	ad b7       	in	r26, 0x3d	; 61
    3480:	be b7       	in	r27, 0x3e	; 62
    3482:	12 96       	adiw	r26, 0x02	; 2
    3484:	3c 92       	st	X, r3
    3486:	2e 92       	st	-X, r2
    3488:	11 97       	sbiw	r26, 0x01	; 1
    348a:	e2 82       	std	Z+2, r14	; 0x02
    348c:	f3 82       	std	Z+3, r15	; 0x03
    348e:	44 83       	std	Z+4, r20	; 0x04
    3490:	55 83       	std	Z+5, r21	; 0x05
    3492:	66 83       	std	Z+6, r22	; 0x06
    3494:	77 83       	std	Z+7, r23	; 0x07
    3496:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(O_Load_Buf);
    349a:	2d b7       	in	r18, 0x3d	; 61
    349c:	3e b7       	in	r19, 0x3e	; 62
    349e:	28 5f       	subi	r18, 0xF8	; 248
    34a0:	3f 4f       	sbci	r19, 0xFF	; 255
    34a2:	0f b6       	in	r0, 0x3f	; 63
    34a4:	f8 94       	cli
    34a6:	3e bf       	out	0x3e, r19	; 62
    34a8:	0f be       	out	0x3f, r0	; 63
    34aa:	2d bf       	out	0x3d, r18	; 61
    34ac:	c1 01       	movw	r24, r2
    34ae:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(9,1);
    34b2:	89 e0       	ldi	r24, 0x09	; 9
    34b4:	61 e0       	ldi	r22, 0x01	; 1
    34b6:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    34ba:	8f e0       	ldi	r24, 0x0F	; 15
    34bc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    34c0:	80 91 68 03 	lds	r24, 0x0368
    34c4:	90 91 69 03 	lds	r25, 0x0369
    34c8:	84 33       	cpi	r24, 0x34	; 52
    34ca:	91 05       	cpc	r25, r1
    34cc:	09 f4       	brne	.+2      	; 0x34d0 <__stack+0x23d1>
    34ce:	41 c0       	rjmp	.+130    	; 0x3552 <__stack+0x2453>
    34d0:	85 33       	cpi	r24, 0x35	; 53
    34d2:	91 05       	cpc	r25, r1
    34d4:	9c f4       	brge	.+38     	; 0x34fc <__stack+0x23fd>
    34d6:	81 33       	cpi	r24, 0x31	; 49
    34d8:	91 05       	cpc	r25, r1
    34da:	31 f1       	breq	.+76     	; 0x3528 <__stack+0x2429>
    34dc:	82 33       	cpi	r24, 0x32	; 50
    34de:	91 05       	cpc	r25, r1
    34e0:	2c f4       	brge	.+10     	; 0x34ec <__stack+0x23ed>
    34e2:	c0 97       	sbiw	r24, 0x30	; 48
    34e4:	11 f0       	breq	.+4      	; 0x34ea <__stack+0x23eb>
    34e6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    34ea:	5c c0       	rjmp	.+184    	; 0x35a4 <__stack+0x24a5>
    34ec:	82 33       	cpi	r24, 0x32	; 50
    34ee:	91 05       	cpc	r25, r1
    34f0:	11 f1       	breq	.+68     	; 0x3536 <__stack+0x2437>
    34f2:	c3 97       	sbiw	r24, 0x33	; 51
    34f4:	11 f0       	breq	.+4      	; 0x34fa <__stack+0x23fb>
    34f6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    34fa:	24 c0       	rjmp	.+72     	; 0x3544 <__stack+0x2445>
    34fc:	87 33       	cpi	r24, 0x37	; 55
    34fe:	91 05       	cpc	r25, r1
    3500:	e1 f1       	breq	.+120    	; 0x357a <__stack+0x247b>
    3502:	88 33       	cpi	r24, 0x38	; 56
    3504:	91 05       	cpc	r25, r1
    3506:	44 f4       	brge	.+16     	; 0x3518 <__stack+0x2419>
    3508:	85 33       	cpi	r24, 0x35	; 53
    350a:	91 05       	cpc	r25, r1
    350c:	41 f1       	breq	.+80     	; 0x355e <__stack+0x245f>
    350e:	c6 97       	sbiw	r24, 0x36	; 54
    3510:	11 f0       	breq	.+4      	; 0x3516 <__stack+0x2417>
    3512:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3516:	2a c0       	rjmp	.+84     	; 0x356c <__stack+0x246d>
    3518:	88 33       	cpi	r24, 0x38	; 56
    351a:	91 05       	cpc	r25, r1
    351c:	a9 f1       	breq	.+106    	; 0x3588 <__stack+0x2489>
    351e:	c9 97       	sbiw	r24, 0x39	; 57
    3520:	11 f0       	breq	.+4      	; 0x3526 <__stack+0x2427>
    3522:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3526:	37 c0       	rjmp	.+110    	; 0x3596 <__stack+0x2497>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    3528:	8c e0       	ldi	r24, 0x0C	; 12
    352a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[1] = '1';
    352e:	81 e3       	ldi	r24, 0x31	; 49
    3530:	88 a3       	std	Y+32, r24	; 0x20
    3532:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    3536:	8c e0       	ldi	r24, 0x0C	; 12
    3538:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[1] = '2';
    353c:	82 e3       	ldi	r24, 0x32	; 50
    353e:	88 a3       	std	Y+32, r24	; 0x20
    3540:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    3544:	8c e0       	ldi	r24, 0x0C	; 12
    3546:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[1] = '3';
    354a:	83 e3       	ldi	r24, 0x33	; 51
    354c:	88 a3       	std	Y+32, r24	; 0x20
    354e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    3552:	8c e0       	ldi	r24, 0x0C	; 12
    3554:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[1] = '4';
    3558:	88 a2       	std	Y+32, r8	; 0x20
    355a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    355e:	8c e0       	ldi	r24, 0x0C	; 12
    3560:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     O_Load_Buf[1] = '5';
    3564:	85 e3       	ldi	r24, 0x35	; 53
    3566:	88 a3       	std	Y+32, r24	; 0x20
    3568:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    356c:	8c e0       	ldi	r24, 0x0C	; 12
    356e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[1] = '6';
    3572:	86 e3       	ldi	r24, 0x36	; 54
    3574:	88 a3       	std	Y+32, r24	; 0x20
    3576:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    357a:	8c e0       	ldi	r24, 0x0C	; 12
    357c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[1] = '7';
    3580:	87 e3       	ldi	r24, 0x37	; 55
    3582:	88 a3       	std	Y+32, r24	; 0x20
    3584:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    3588:	8c e0       	ldi	r24, 0x0C	; 12
    358a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[1] = '8';
    358e:	88 e3       	ldi	r24, 0x38	; 56
    3590:	88 a3       	std	Y+32, r24	; 0x20
    3592:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    3596:	8c e0       	ldi	r24, 0x0C	; 12
    3598:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[1] = '9';
    359c:	89 e3       	ldi	r24, 0x39	; 57
    359e:	88 a3       	std	Y+32, r24	; 0x20
    35a0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    35a4:	8c e0       	ldi	r24, 0x0C	; 12
    35a6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[1] = '0';
    35aa:	80 e3       	ldi	r24, 0x30	; 48
    35ac:	88 a3       	std	Y+32, r24	; 0x20
    35ae:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 3:  O_Load = atof(O_Load_Buf);	 
    35b2:	c1 01       	movw	r24, r2
    35b4:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    35b8:	60 93 ad 02 	sts	0x02AD, r22
    35bc:	70 93 ae 02 	sts	0x02AE, r23
    35c0:	80 93 af 02 	sts	0x02AF, r24
    35c4:	90 93 b0 02 	sts	0x02B0, r25
										 lcd_gotoxy(8,1);
    35c8:	88 e0       	ldi	r24, 0x08	; 8
    35ca:	61 e0       	ldi	r22, 0x01	; 1
    35cc:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(O_Load_Buf,"%07.3f", O_Load);
    35d0:	40 91 ad 02 	lds	r20, 0x02AD
    35d4:	50 91 ae 02 	lds	r21, 0x02AE
    35d8:	60 91 af 02 	lds	r22, 0x02AF
    35dc:	70 91 b0 02 	lds	r23, 0x02B0
    35e0:	8d b7       	in	r24, 0x3d	; 61
    35e2:	9e b7       	in	r25, 0x3e	; 62
    35e4:	08 97       	sbiw	r24, 0x08	; 8
    35e6:	0f b6       	in	r0, 0x3f	; 63
    35e8:	f8 94       	cli
    35ea:	9e bf       	out	0x3e, r25	; 62
    35ec:	0f be       	out	0x3f, r0	; 63
    35ee:	8d bf       	out	0x3d, r24	; 61
    35f0:	ed b7       	in	r30, 0x3d	; 61
    35f2:	fe b7       	in	r31, 0x3e	; 62
    35f4:	31 96       	adiw	r30, 0x01	; 1
    35f6:	ad b7       	in	r26, 0x3d	; 61
    35f8:	be b7       	in	r27, 0x3e	; 62
    35fa:	12 96       	adiw	r26, 0x02	; 2
    35fc:	3c 92       	st	X, r3
    35fe:	2e 92       	st	-X, r2
    3600:	11 97       	sbiw	r26, 0x01	; 1
    3602:	e2 82       	std	Z+2, r14	; 0x02
    3604:	f3 82       	std	Z+3, r15	; 0x03
    3606:	44 83       	std	Z+4, r20	; 0x04
    3608:	55 83       	std	Z+5, r21	; 0x05
    360a:	66 83       	std	Z+6, r22	; 0x06
    360c:	77 83       	std	Z+7, r23	; 0x07
    360e:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(O_Load_Buf);
    3612:	2d b7       	in	r18, 0x3d	; 61
    3614:	3e b7       	in	r19, 0x3e	; 62
    3616:	28 5f       	subi	r18, 0xF8	; 248
    3618:	3f 4f       	sbci	r19, 0xFF	; 255
    361a:	0f b6       	in	r0, 0x3f	; 63
    361c:	f8 94       	cli
    361e:	3e bf       	out	0x3e, r19	; 62
    3620:	0f be       	out	0x3f, r0	; 63
    3622:	2d bf       	out	0x3d, r18	; 61
    3624:	c1 01       	movw	r24, r2
    3626:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(10,1);
    362a:	8a e0       	ldi	r24, 0x0A	; 10
    362c:	61 e0       	ldi	r22, 0x01	; 1
    362e:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    3632:	8f e0       	ldi	r24, 0x0F	; 15
    3634:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    3638:	80 91 68 03 	lds	r24, 0x0368
    363c:	90 91 69 03 	lds	r25, 0x0369
    3640:	84 33       	cpi	r24, 0x34	; 52
    3642:	91 05       	cpc	r25, r1
    3644:	09 f4       	brne	.+2      	; 0x3648 <__stack+0x2549>
    3646:	41 c0       	rjmp	.+130    	; 0x36ca <__stack+0x25cb>
    3648:	85 33       	cpi	r24, 0x35	; 53
    364a:	91 05       	cpc	r25, r1
    364c:	9c f4       	brge	.+38     	; 0x3674 <__stack+0x2575>
    364e:	81 33       	cpi	r24, 0x31	; 49
    3650:	91 05       	cpc	r25, r1
    3652:	31 f1       	breq	.+76     	; 0x36a0 <__stack+0x25a1>
    3654:	82 33       	cpi	r24, 0x32	; 50
    3656:	91 05       	cpc	r25, r1
    3658:	2c f4       	brge	.+10     	; 0x3664 <__stack+0x2565>
    365a:	c0 97       	sbiw	r24, 0x30	; 48
    365c:	11 f0       	breq	.+4      	; 0x3662 <__stack+0x2563>
    365e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3662:	5c c0       	rjmp	.+184    	; 0x371c <__stack+0x261d>
    3664:	82 33       	cpi	r24, 0x32	; 50
    3666:	91 05       	cpc	r25, r1
    3668:	11 f1       	breq	.+68     	; 0x36ae <__stack+0x25af>
    366a:	c3 97       	sbiw	r24, 0x33	; 51
    366c:	11 f0       	breq	.+4      	; 0x3672 <__stack+0x2573>
    366e:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3672:	24 c0       	rjmp	.+72     	; 0x36bc <__stack+0x25bd>
    3674:	87 33       	cpi	r24, 0x37	; 55
    3676:	91 05       	cpc	r25, r1
    3678:	e1 f1       	breq	.+120    	; 0x36f2 <__stack+0x25f3>
    367a:	88 33       	cpi	r24, 0x38	; 56
    367c:	91 05       	cpc	r25, r1
    367e:	44 f4       	brge	.+16     	; 0x3690 <__stack+0x2591>
    3680:	85 33       	cpi	r24, 0x35	; 53
    3682:	91 05       	cpc	r25, r1
    3684:	41 f1       	breq	.+80     	; 0x36d6 <__stack+0x25d7>
    3686:	c6 97       	sbiw	r24, 0x36	; 54
    3688:	11 f0       	breq	.+4      	; 0x368e <__stack+0x258f>
    368a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    368e:	2a c0       	rjmp	.+84     	; 0x36e4 <__stack+0x25e5>
    3690:	88 33       	cpi	r24, 0x38	; 56
    3692:	91 05       	cpc	r25, r1
    3694:	a9 f1       	breq	.+106    	; 0x3700 <__stack+0x2601>
    3696:	c9 97       	sbiw	r24, 0x39	; 57
    3698:	11 f0       	breq	.+4      	; 0x369e <__stack+0x259f>
    369a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    369e:	37 c0       	rjmp	.+110    	; 0x370e <__stack+0x260f>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    36a0:	8c e0       	ldi	r24, 0x0C	; 12
    36a2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[2] = '1';
    36a6:	81 e3       	ldi	r24, 0x31	; 49
    36a8:	89 a3       	std	Y+33, r24	; 0x21
    36aa:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    36ae:	8c e0       	ldi	r24, 0x0C	; 12
    36b0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[2] = '2';
    36b4:	82 e3       	ldi	r24, 0x32	; 50
    36b6:	89 a3       	std	Y+33, r24	; 0x21
    36b8:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    36bc:	8c e0       	ldi	r24, 0x0C	; 12
    36be:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[2] = '3';
    36c2:	83 e3       	ldi	r24, 0x33	; 51
    36c4:	89 a3       	std	Y+33, r24	; 0x21
    36c6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    36ca:	8c e0       	ldi	r24, 0x0C	; 12
    36cc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[2] = '4';
    36d0:	89 a2       	std	Y+33, r8	; 0x21
    36d2:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    36d6:	8c e0       	ldi	r24, 0x0C	; 12
    36d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     O_Load_Buf[2] = '5';
    36dc:	85 e3       	ldi	r24, 0x35	; 53
    36de:	89 a3       	std	Y+33, r24	; 0x21
    36e0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    36e4:	8c e0       	ldi	r24, 0x0C	; 12
    36e6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[2] = '6';
    36ea:	86 e3       	ldi	r24, 0x36	; 54
    36ec:	89 a3       	std	Y+33, r24	; 0x21
    36ee:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    36f2:	8c e0       	ldi	r24, 0x0C	; 12
    36f4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[2] = '7';
    36f8:	87 e3       	ldi	r24, 0x37	; 55
    36fa:	89 a3       	std	Y+33, r24	; 0x21
    36fc:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    3700:	8c e0       	ldi	r24, 0x0C	; 12
    3702:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[2] = '8';
    3706:	88 e3       	ldi	r24, 0x38	; 56
    3708:	89 a3       	std	Y+33, r24	; 0x21
    370a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    370e:	8c e0       	ldi	r24, 0x0C	; 12
    3710:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[2] = '9';
    3714:	89 e3       	ldi	r24, 0x39	; 57
    3716:	89 a3       	std	Y+33, r24	; 0x21
    3718:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    371c:	8c e0       	ldi	r24, 0x0C	; 12
    371e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[2] = '0';
    3722:	80 e3       	ldi	r24, 0x30	; 48
    3724:	89 a3       	std	Y+33, r24	; 0x21
    3726:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 4:  lcd_gotoxy(11,1);
    372a:	8b e0       	ldi	r24, 0x0B	; 11
    372c:	61 e0       	ldi	r22, 0x01	; 1
    372e:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    3732:	8f e0       	ldi	r24, 0x0F	; 15
    3734:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
    3738:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
								         break;
								case 5:  O_Load = atof(O_Load_Buf);	 
    373c:	c1 01       	movw	r24, r2
    373e:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    3742:	60 93 ad 02 	sts	0x02AD, r22
    3746:	70 93 ae 02 	sts	0x02AE, r23
    374a:	80 93 af 02 	sts	0x02AF, r24
    374e:	90 93 b0 02 	sts	0x02B0, r25
										 lcd_gotoxy(8,1);
    3752:	88 e0       	ldi	r24, 0x08	; 8
    3754:	61 e0       	ldi	r22, 0x01	; 1
    3756:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(O_Load_Buf,"%07.3f", O_Load);
    375a:	40 91 ad 02 	lds	r20, 0x02AD
    375e:	50 91 ae 02 	lds	r21, 0x02AE
    3762:	60 91 af 02 	lds	r22, 0x02AF
    3766:	70 91 b0 02 	lds	r23, 0x02B0
    376a:	8d b7       	in	r24, 0x3d	; 61
    376c:	9e b7       	in	r25, 0x3e	; 62
    376e:	08 97       	sbiw	r24, 0x08	; 8
    3770:	0f b6       	in	r0, 0x3f	; 63
    3772:	f8 94       	cli
    3774:	9e bf       	out	0x3e, r25	; 62
    3776:	0f be       	out	0x3f, r0	; 63
    3778:	8d bf       	out	0x3d, r24	; 61
    377a:	ed b7       	in	r30, 0x3d	; 61
    377c:	fe b7       	in	r31, 0x3e	; 62
    377e:	31 96       	adiw	r30, 0x01	; 1
    3780:	ad b7       	in	r26, 0x3d	; 61
    3782:	be b7       	in	r27, 0x3e	; 62
    3784:	12 96       	adiw	r26, 0x02	; 2
    3786:	3c 92       	st	X, r3
    3788:	2e 92       	st	-X, r2
    378a:	11 97       	sbiw	r26, 0x01	; 1
    378c:	e2 82       	std	Z+2, r14	; 0x02
    378e:	f3 82       	std	Z+3, r15	; 0x03
    3790:	44 83       	std	Z+4, r20	; 0x04
    3792:	55 83       	std	Z+5, r21	; 0x05
    3794:	66 83       	std	Z+6, r22	; 0x06
    3796:	77 83       	std	Z+7, r23	; 0x07
    3798:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(O_Load_Buf);
    379c:	2d b7       	in	r18, 0x3d	; 61
    379e:	3e b7       	in	r19, 0x3e	; 62
    37a0:	28 5f       	subi	r18, 0xF8	; 248
    37a2:	3f 4f       	sbci	r19, 0xFF	; 255
    37a4:	0f b6       	in	r0, 0x3f	; 63
    37a6:	f8 94       	cli
    37a8:	3e bf       	out	0x3e, r19	; 62
    37aa:	0f be       	out	0x3f, r0	; 63
    37ac:	2d bf       	out	0x3d, r18	; 61
    37ae:	c1 01       	movw	r24, r2
    37b0:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(12,1);
    37b4:	8c e0       	ldi	r24, 0x0C	; 12
    37b6:	61 e0       	ldi	r22, 0x01	; 1
    37b8:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    37bc:	8f e0       	ldi	r24, 0x0F	; 15
    37be:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    37c2:	80 91 68 03 	lds	r24, 0x0368
    37c6:	90 91 69 03 	lds	r25, 0x0369
    37ca:	84 33       	cpi	r24, 0x34	; 52
    37cc:	91 05       	cpc	r25, r1
    37ce:	09 f4       	brne	.+2      	; 0x37d2 <__stack+0x26d3>
    37d0:	41 c0       	rjmp	.+130    	; 0x3854 <__stack+0x2755>
    37d2:	85 33       	cpi	r24, 0x35	; 53
    37d4:	91 05       	cpc	r25, r1
    37d6:	9c f4       	brge	.+38     	; 0x37fe <__stack+0x26ff>
    37d8:	81 33       	cpi	r24, 0x31	; 49
    37da:	91 05       	cpc	r25, r1
    37dc:	31 f1       	breq	.+76     	; 0x382a <__stack+0x272b>
    37de:	82 33       	cpi	r24, 0x32	; 50
    37e0:	91 05       	cpc	r25, r1
    37e2:	2c f4       	brge	.+10     	; 0x37ee <__stack+0x26ef>
    37e4:	c0 97       	sbiw	r24, 0x30	; 48
    37e6:	11 f0       	breq	.+4      	; 0x37ec <__stack+0x26ed>
    37e8:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    37ec:	5c c0       	rjmp	.+184    	; 0x38a6 <__stack+0x27a7>
    37ee:	82 33       	cpi	r24, 0x32	; 50
    37f0:	91 05       	cpc	r25, r1
    37f2:	11 f1       	breq	.+68     	; 0x3838 <__stack+0x2739>
    37f4:	c3 97       	sbiw	r24, 0x33	; 51
    37f6:	11 f0       	breq	.+4      	; 0x37fc <__stack+0x26fd>
    37f8:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    37fc:	24 c0       	rjmp	.+72     	; 0x3846 <__stack+0x2747>
    37fe:	87 33       	cpi	r24, 0x37	; 55
    3800:	91 05       	cpc	r25, r1
    3802:	e1 f1       	breq	.+120    	; 0x387c <__stack+0x277d>
    3804:	88 33       	cpi	r24, 0x38	; 56
    3806:	91 05       	cpc	r25, r1
    3808:	44 f4       	brge	.+16     	; 0x381a <__stack+0x271b>
    380a:	85 33       	cpi	r24, 0x35	; 53
    380c:	91 05       	cpc	r25, r1
    380e:	41 f1       	breq	.+80     	; 0x3860 <__stack+0x2761>
    3810:	c6 97       	sbiw	r24, 0x36	; 54
    3812:	11 f0       	breq	.+4      	; 0x3818 <__stack+0x2719>
    3814:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3818:	2a c0       	rjmp	.+84     	; 0x386e <__stack+0x276f>
    381a:	88 33       	cpi	r24, 0x38	; 56
    381c:	91 05       	cpc	r25, r1
    381e:	a9 f1       	breq	.+106    	; 0x388a <__stack+0x278b>
    3820:	c9 97       	sbiw	r24, 0x39	; 57
    3822:	11 f0       	breq	.+4      	; 0x3828 <__stack+0x2729>
    3824:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3828:	37 c0       	rjmp	.+110    	; 0x3898 <__stack+0x2799>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    382a:	8c e0       	ldi	r24, 0x0C	; 12
    382c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[4] = '1';
    3830:	81 e3       	ldi	r24, 0x31	; 49
    3832:	8b a3       	std	Y+35, r24	; 0x23
    3834:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    3838:	8c e0       	ldi	r24, 0x0C	; 12
    383a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[4] = '2';
    383e:	82 e3       	ldi	r24, 0x32	; 50
    3840:	8b a3       	std	Y+35, r24	; 0x23
    3842:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    3846:	8c e0       	ldi	r24, 0x0C	; 12
    3848:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[4] = '3';
    384c:	83 e3       	ldi	r24, 0x33	; 51
    384e:	8b a3       	std	Y+35, r24	; 0x23
    3850:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    3854:	8c e0       	ldi	r24, 0x0C	; 12
    3856:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[4] = '4';
    385a:	8b a2       	std	Y+35, r8	; 0x23
    385c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    3860:	8c e0       	ldi	r24, 0x0C	; 12
    3862:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     O_Load_Buf[4] = '5';
    3866:	85 e3       	ldi	r24, 0x35	; 53
    3868:	8b a3       	std	Y+35, r24	; 0x23
    386a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    386e:	8c e0       	ldi	r24, 0x0C	; 12
    3870:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[4] = '6';
    3874:	86 e3       	ldi	r24, 0x36	; 54
    3876:	8b a3       	std	Y+35, r24	; 0x23
    3878:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    387c:	8c e0       	ldi	r24, 0x0C	; 12
    387e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[4] = '7';
    3882:	87 e3       	ldi	r24, 0x37	; 55
    3884:	8b a3       	std	Y+35, r24	; 0x23
    3886:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    388a:	8c e0       	ldi	r24, 0x0C	; 12
    388c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[4] = '8';
    3890:	88 e3       	ldi	r24, 0x38	; 56
    3892:	8b a3       	std	Y+35, r24	; 0x23
    3894:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    3898:	8c e0       	ldi	r24, 0x0C	; 12
    389a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[4] = '9';
    389e:	89 e3       	ldi	r24, 0x39	; 57
    38a0:	8b a3       	std	Y+35, r24	; 0x23
    38a2:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    38a6:	8c e0       	ldi	r24, 0x0C	; 12
    38a8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[4] = '0';
    38ac:	80 e3       	ldi	r24, 0x30	; 48
    38ae:	8b a3       	std	Y+35, r24	; 0x23
    38b0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 6:  O_Load = atof(O_Load_Buf);	 
    38b4:	c1 01       	movw	r24, r2
    38b6:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    38ba:	60 93 ad 02 	sts	0x02AD, r22
    38be:	70 93 ae 02 	sts	0x02AE, r23
    38c2:	80 93 af 02 	sts	0x02AF, r24
    38c6:	90 93 b0 02 	sts	0x02B0, r25
										 lcd_gotoxy(8,1);
    38ca:	88 e0       	ldi	r24, 0x08	; 8
    38cc:	61 e0       	ldi	r22, 0x01	; 1
    38ce:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(O_Load_Buf,"%07.3f", O_Load);
    38d2:	40 91 ad 02 	lds	r20, 0x02AD
    38d6:	50 91 ae 02 	lds	r21, 0x02AE
    38da:	60 91 af 02 	lds	r22, 0x02AF
    38de:	70 91 b0 02 	lds	r23, 0x02B0
    38e2:	8d b7       	in	r24, 0x3d	; 61
    38e4:	9e b7       	in	r25, 0x3e	; 62
    38e6:	08 97       	sbiw	r24, 0x08	; 8
    38e8:	0f b6       	in	r0, 0x3f	; 63
    38ea:	f8 94       	cli
    38ec:	9e bf       	out	0x3e, r25	; 62
    38ee:	0f be       	out	0x3f, r0	; 63
    38f0:	8d bf       	out	0x3d, r24	; 61
    38f2:	ed b7       	in	r30, 0x3d	; 61
    38f4:	fe b7       	in	r31, 0x3e	; 62
    38f6:	31 96       	adiw	r30, 0x01	; 1
    38f8:	ad b7       	in	r26, 0x3d	; 61
    38fa:	be b7       	in	r27, 0x3e	; 62
    38fc:	12 96       	adiw	r26, 0x02	; 2
    38fe:	3c 92       	st	X, r3
    3900:	2e 92       	st	-X, r2
    3902:	11 97       	sbiw	r26, 0x01	; 1
    3904:	e2 82       	std	Z+2, r14	; 0x02
    3906:	f3 82       	std	Z+3, r15	; 0x03
    3908:	44 83       	std	Z+4, r20	; 0x04
    390a:	55 83       	std	Z+5, r21	; 0x05
    390c:	66 83       	std	Z+6, r22	; 0x06
    390e:	77 83       	std	Z+7, r23	; 0x07
    3910:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(O_Load_Buf);
    3914:	2d b7       	in	r18, 0x3d	; 61
    3916:	3e b7       	in	r19, 0x3e	; 62
    3918:	28 5f       	subi	r18, 0xF8	; 248
    391a:	3f 4f       	sbci	r19, 0xFF	; 255
    391c:	0f b6       	in	r0, 0x3f	; 63
    391e:	f8 94       	cli
    3920:	3e bf       	out	0x3e, r19	; 62
    3922:	0f be       	out	0x3f, r0	; 63
    3924:	2d bf       	out	0x3d, r18	; 61
    3926:	c1 01       	movw	r24, r2
    3928:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(13,1);
    392c:	8d e0       	ldi	r24, 0x0D	; 13
    392e:	61 e0       	ldi	r22, 0x01	; 1
    3930:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    3934:	8f e0       	ldi	r24, 0x0F	; 15
    3936:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    393a:	80 91 68 03 	lds	r24, 0x0368
    393e:	90 91 69 03 	lds	r25, 0x0369
    3942:	84 33       	cpi	r24, 0x34	; 52
    3944:	91 05       	cpc	r25, r1
    3946:	09 f4       	brne	.+2      	; 0x394a <__stack+0x284b>
    3948:	41 c0       	rjmp	.+130    	; 0x39cc <__stack+0x28cd>
    394a:	85 33       	cpi	r24, 0x35	; 53
    394c:	91 05       	cpc	r25, r1
    394e:	9c f4       	brge	.+38     	; 0x3976 <__stack+0x2877>
    3950:	81 33       	cpi	r24, 0x31	; 49
    3952:	91 05       	cpc	r25, r1
    3954:	31 f1       	breq	.+76     	; 0x39a2 <__stack+0x28a3>
    3956:	82 33       	cpi	r24, 0x32	; 50
    3958:	91 05       	cpc	r25, r1
    395a:	2c f4       	brge	.+10     	; 0x3966 <__stack+0x2867>
    395c:	c0 97       	sbiw	r24, 0x30	; 48
    395e:	11 f0       	breq	.+4      	; 0x3964 <__stack+0x2865>
    3960:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3964:	5c c0       	rjmp	.+184    	; 0x3a1e <__stack+0x291f>
    3966:	82 33       	cpi	r24, 0x32	; 50
    3968:	91 05       	cpc	r25, r1
    396a:	11 f1       	breq	.+68     	; 0x39b0 <__stack+0x28b1>
    396c:	c3 97       	sbiw	r24, 0x33	; 51
    396e:	11 f0       	breq	.+4      	; 0x3974 <__stack+0x2875>
    3970:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3974:	24 c0       	rjmp	.+72     	; 0x39be <__stack+0x28bf>
    3976:	87 33       	cpi	r24, 0x37	; 55
    3978:	91 05       	cpc	r25, r1
    397a:	e1 f1       	breq	.+120    	; 0x39f4 <__stack+0x28f5>
    397c:	88 33       	cpi	r24, 0x38	; 56
    397e:	91 05       	cpc	r25, r1
    3980:	44 f4       	brge	.+16     	; 0x3992 <__stack+0x2893>
    3982:	85 33       	cpi	r24, 0x35	; 53
    3984:	91 05       	cpc	r25, r1
    3986:	41 f1       	breq	.+80     	; 0x39d8 <__stack+0x28d9>
    3988:	c6 97       	sbiw	r24, 0x36	; 54
    398a:	11 f0       	breq	.+4      	; 0x3990 <__stack+0x2891>
    398c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3990:	2a c0       	rjmp	.+84     	; 0x39e6 <__stack+0x28e7>
    3992:	88 33       	cpi	r24, 0x38	; 56
    3994:	91 05       	cpc	r25, r1
    3996:	a9 f1       	breq	.+106    	; 0x3a02 <__stack+0x2903>
    3998:	c9 97       	sbiw	r24, 0x39	; 57
    399a:	11 f0       	breq	.+4      	; 0x39a0 <__stack+0x28a1>
    399c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    39a0:	37 c0       	rjmp	.+110    	; 0x3a10 <__stack+0x2911>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    39a2:	8c e0       	ldi	r24, 0x0C	; 12
    39a4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[5] = '1';
    39a8:	81 e3       	ldi	r24, 0x31	; 49
    39aa:	8c a3       	std	Y+36, r24	; 0x24
    39ac:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    39b0:	8c e0       	ldi	r24, 0x0C	; 12
    39b2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[5] = '2';
    39b6:	82 e3       	ldi	r24, 0x32	; 50
    39b8:	8c a3       	std	Y+36, r24	; 0x24
    39ba:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    39be:	8c e0       	ldi	r24, 0x0C	; 12
    39c0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[5] = '3';
    39c4:	83 e3       	ldi	r24, 0x33	; 51
    39c6:	8c a3       	std	Y+36, r24	; 0x24
    39c8:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    39cc:	8c e0       	ldi	r24, 0x0C	; 12
    39ce:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[5] = '4';
    39d2:	8c a2       	std	Y+36, r8	; 0x24
    39d4:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    39d8:	8c e0       	ldi	r24, 0x0C	; 12
    39da:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     O_Load_Buf[5] = '5';
    39de:	85 e3       	ldi	r24, 0x35	; 53
    39e0:	8c a3       	std	Y+36, r24	; 0x24
    39e2:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    39e6:	8c e0       	ldi	r24, 0x0C	; 12
    39e8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[5] = '6';
    39ec:	86 e3       	ldi	r24, 0x36	; 54
    39ee:	8c a3       	std	Y+36, r24	; 0x24
    39f0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    39f4:	8c e0       	ldi	r24, 0x0C	; 12
    39f6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[5] = '7';
    39fa:	87 e3       	ldi	r24, 0x37	; 55
    39fc:	8c a3       	std	Y+36, r24	; 0x24
    39fe:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    3a02:	8c e0       	ldi	r24, 0x0C	; 12
    3a04:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[5] = '8';
    3a08:	88 e3       	ldi	r24, 0x38	; 56
    3a0a:	8c a3       	std	Y+36, r24	; 0x24
    3a0c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    3a10:	8c e0       	ldi	r24, 0x0C	; 12
    3a12:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[5] = '9';
    3a16:	89 e3       	ldi	r24, 0x39	; 57
    3a18:	8c a3       	std	Y+36, r24	; 0x24
    3a1a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    3a1e:	8c e0       	ldi	r24, 0x0C	; 12
    3a20:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[5] = '0';
    3a24:	80 e3       	ldi	r24, 0x30	; 48
    3a26:	8c a3       	std	Y+36, r24	; 0x24
    3a28:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 7:  O_Load = atof(O_Load_Buf);	 
    3a2c:	c1 01       	movw	r24, r2
    3a2e:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    3a32:	60 93 ad 02 	sts	0x02AD, r22
    3a36:	70 93 ae 02 	sts	0x02AE, r23
    3a3a:	80 93 af 02 	sts	0x02AF, r24
    3a3e:	90 93 b0 02 	sts	0x02B0, r25
										 lcd_gotoxy(8,1);
    3a42:	88 e0       	ldi	r24, 0x08	; 8
    3a44:	61 e0       	ldi	r22, 0x01	; 1
    3a46:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(O_Load_Buf,"%07.3f", O_Load);
    3a4a:	40 91 ad 02 	lds	r20, 0x02AD
    3a4e:	50 91 ae 02 	lds	r21, 0x02AE
    3a52:	60 91 af 02 	lds	r22, 0x02AF
    3a56:	70 91 b0 02 	lds	r23, 0x02B0
    3a5a:	8d b7       	in	r24, 0x3d	; 61
    3a5c:	9e b7       	in	r25, 0x3e	; 62
    3a5e:	08 97       	sbiw	r24, 0x08	; 8
    3a60:	0f b6       	in	r0, 0x3f	; 63
    3a62:	f8 94       	cli
    3a64:	9e bf       	out	0x3e, r25	; 62
    3a66:	0f be       	out	0x3f, r0	; 63
    3a68:	8d bf       	out	0x3d, r24	; 61
    3a6a:	ed b7       	in	r30, 0x3d	; 61
    3a6c:	fe b7       	in	r31, 0x3e	; 62
    3a6e:	31 96       	adiw	r30, 0x01	; 1
    3a70:	ad b7       	in	r26, 0x3d	; 61
    3a72:	be b7       	in	r27, 0x3e	; 62
    3a74:	12 96       	adiw	r26, 0x02	; 2
    3a76:	3c 92       	st	X, r3
    3a78:	2e 92       	st	-X, r2
    3a7a:	11 97       	sbiw	r26, 0x01	; 1
    3a7c:	e2 82       	std	Z+2, r14	; 0x02
    3a7e:	f3 82       	std	Z+3, r15	; 0x03
    3a80:	44 83       	std	Z+4, r20	; 0x04
    3a82:	55 83       	std	Z+5, r21	; 0x05
    3a84:	66 83       	std	Z+6, r22	; 0x06
    3a86:	77 83       	std	Z+7, r23	; 0x07
    3a88:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(O_Load_Buf);
    3a8c:	2d b7       	in	r18, 0x3d	; 61
    3a8e:	3e b7       	in	r19, 0x3e	; 62
    3a90:	28 5f       	subi	r18, 0xF8	; 248
    3a92:	3f 4f       	sbci	r19, 0xFF	; 255
    3a94:	0f b6       	in	r0, 0x3f	; 63
    3a96:	f8 94       	cli
    3a98:	3e bf       	out	0x3e, r19	; 62
    3a9a:	0f be       	out	0x3f, r0	; 63
    3a9c:	2d bf       	out	0x3d, r18	; 61
    3a9e:	c1 01       	movw	r24, r2
    3aa0:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(14,1);
    3aa4:	8e e0       	ldi	r24, 0x0E	; 14
    3aa6:	61 e0       	ldi	r22, 0x01	; 1
    3aa8:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    3aac:	8f e0       	ldi	r24, 0x0F	; 15
    3aae:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    3ab2:	80 91 68 03 	lds	r24, 0x0368
    3ab6:	90 91 69 03 	lds	r25, 0x0369
    3aba:	84 33       	cpi	r24, 0x34	; 52
    3abc:	91 05       	cpc	r25, r1
    3abe:	09 f4       	brne	.+2      	; 0x3ac2 <__stack+0x29c3>
    3ac0:	41 c0       	rjmp	.+130    	; 0x3b44 <__stack+0x2a45>
    3ac2:	85 33       	cpi	r24, 0x35	; 53
    3ac4:	91 05       	cpc	r25, r1
    3ac6:	9c f4       	brge	.+38     	; 0x3aee <__stack+0x29ef>
    3ac8:	81 33       	cpi	r24, 0x31	; 49
    3aca:	91 05       	cpc	r25, r1
    3acc:	31 f1       	breq	.+76     	; 0x3b1a <__stack+0x2a1b>
    3ace:	82 33       	cpi	r24, 0x32	; 50
    3ad0:	91 05       	cpc	r25, r1
    3ad2:	2c f4       	brge	.+10     	; 0x3ade <__stack+0x29df>
    3ad4:	c0 97       	sbiw	r24, 0x30	; 48
    3ad6:	11 f0       	breq	.+4      	; 0x3adc <__stack+0x29dd>
    3ad8:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3adc:	5c c0       	rjmp	.+184    	; 0x3b96 <__stack+0x2a97>
    3ade:	82 33       	cpi	r24, 0x32	; 50
    3ae0:	91 05       	cpc	r25, r1
    3ae2:	11 f1       	breq	.+68     	; 0x3b28 <__stack+0x2a29>
    3ae4:	c3 97       	sbiw	r24, 0x33	; 51
    3ae6:	11 f0       	breq	.+4      	; 0x3aec <__stack+0x29ed>
    3ae8:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3aec:	24 c0       	rjmp	.+72     	; 0x3b36 <__stack+0x2a37>
    3aee:	87 33       	cpi	r24, 0x37	; 55
    3af0:	91 05       	cpc	r25, r1
    3af2:	e1 f1       	breq	.+120    	; 0x3b6c <__stack+0x2a6d>
    3af4:	88 33       	cpi	r24, 0x38	; 56
    3af6:	91 05       	cpc	r25, r1
    3af8:	44 f4       	brge	.+16     	; 0x3b0a <__stack+0x2a0b>
    3afa:	85 33       	cpi	r24, 0x35	; 53
    3afc:	91 05       	cpc	r25, r1
    3afe:	41 f1       	breq	.+80     	; 0x3b50 <__stack+0x2a51>
    3b00:	c6 97       	sbiw	r24, 0x36	; 54
    3b02:	11 f0       	breq	.+4      	; 0x3b08 <__stack+0x2a09>
    3b04:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3b08:	2a c0       	rjmp	.+84     	; 0x3b5e <__stack+0x2a5f>
    3b0a:	88 33       	cpi	r24, 0x38	; 56
    3b0c:	91 05       	cpc	r25, r1
    3b0e:	a9 f1       	breq	.+106    	; 0x3b7a <__stack+0x2a7b>
    3b10:	c9 97       	sbiw	r24, 0x39	; 57
    3b12:	11 f0       	breq	.+4      	; 0x3b18 <__stack+0x2a19>
    3b14:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3b18:	37 c0       	rjmp	.+110    	; 0x3b88 <__stack+0x2a89>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    3b1a:	8c e0       	ldi	r24, 0x0C	; 12
    3b1c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[6] = '1';
    3b20:	81 e3       	ldi	r24, 0x31	; 49
    3b22:	8d a3       	std	Y+37, r24	; 0x25
    3b24:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    3b28:	8c e0       	ldi	r24, 0x0C	; 12
    3b2a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[6] = '2';
    3b2e:	82 e3       	ldi	r24, 0x32	; 50
    3b30:	8d a3       	std	Y+37, r24	; 0x25
    3b32:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    3b36:	8c e0       	ldi	r24, 0x0C	; 12
    3b38:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[6] = '3';
    3b3c:	83 e3       	ldi	r24, 0x33	; 51
    3b3e:	8d a3       	std	Y+37, r24	; 0x25
    3b40:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    3b44:	8c e0       	ldi	r24, 0x0C	; 12
    3b46:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[6] = '4';
    3b4a:	8d a2       	std	Y+37, r8	; 0x25
    3b4c:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    3b50:	8c e0       	ldi	r24, 0x0C	; 12
    3b52:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     O_Load_Buf[6] = '5';
    3b56:	85 e3       	ldi	r24, 0x35	; 53
    3b58:	8d a3       	std	Y+37, r24	; 0x25
    3b5a:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    3b5e:	8c e0       	ldi	r24, 0x0C	; 12
    3b60:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 O_Load_Buf[6] = '6';
    3b64:	86 e3       	ldi	r24, 0x36	; 54
    3b66:	8d a3       	std	Y+37, r24	; 0x25
    3b68:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    3b6c:	8c e0       	ldi	r24, 0x0C	; 12
    3b6e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[6] = '7';
    3b72:	87 e3       	ldi	r24, 0x37	; 55
    3b74:	8d a3       	std	Y+37, r24	; 0x25
    3b76:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    3b7a:	8c e0       	ldi	r24, 0x0C	; 12
    3b7c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[6] = '8';
    3b80:	88 e3       	ldi	r24, 0x38	; 56
    3b82:	8d a3       	std	Y+37, r24	; 0x25
    3b84:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    3b88:	8c e0       	ldi	r24, 0x0C	; 12
    3b8a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[6] = '9';
    3b8e:	89 e3       	ldi	r24, 0x39	; 57
    3b90:	8d a3       	std	Y+37, r24	; 0x25
    3b92:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    3b96:	8c e0       	ldi	r24, 0x0C	; 12
    3b98:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         O_Load_Buf[6] = '0';
    3b9c:	80 e3       	ldi	r24, 0x30	; 48
    3b9e:	8d a3       	std	Y+37, r24	; 0x25
    3ba0:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
								         break;
					        } 
		 
						    
					}	
					if(ProcessDataPageCursor == 5)
    3ba4:	3e ad       	ldd	r19, Y+62	; 0x3e
    3ba6:	35 30       	cpi	r19, 0x05	; 5
    3ba8:	09 f0       	breq	.+2      	; 0x3bac <__stack+0x2aad>
    3baa:	3c c4       	rjmp	.+2168   	; 0x4424 <__stack+0x3325>
					{
						    
						    switch (ProcessDataLineCursor)  // Main Menu Switch statement
    3bac:	84 e0       	ldi	r24, 0x04	; 4
    3bae:	98 16       	cp	r9, r24
    3bb0:	09 f4       	brne	.+2      	; 0x3bb4 <__stack+0x2ab5>
    3bb2:	29 c2       	rjmp	.+1106   	; 0x4006 <__stack+0x2f07>
    3bb4:	89 15       	cp	r24, r9
    3bb6:	68 f0       	brcs	.+26     	; 0x3bd2 <__stack+0x2ad3>
    3bb8:	92 e0       	ldi	r25, 0x02	; 2
    3bba:	99 16       	cp	r9, r25
    3bbc:	09 f4       	brne	.+2      	; 0x3bc0 <__stack+0x2ac1>
    3bbe:	c9 c0       	rjmp	.+402    	; 0x3d52 <__stack+0x2c53>
    3bc0:	99 15       	cp	r25, r9
    3bc2:	08 f4       	brcc	.+2      	; 0x3bc6 <__stack+0x2ac7>
    3bc4:	73 c1       	rjmp	.+742    	; 0x3eac <__stack+0x2dad>
    3bc6:	a1 e0       	ldi	r26, 0x01	; 1
    3bc8:	9a 16       	cp	r9, r26
    3bca:	11 f0       	breq	.+4      	; 0x3bd0 <__stack+0x2ad1>
    3bcc:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3bd0:	0d c0       	rjmp	.+26     	; 0x3bec <__stack+0x2aed>
    3bd2:	b6 e0       	ldi	r27, 0x06	; 6
    3bd4:	9b 16       	cp	r9, r27
    3bd6:	09 f4       	brne	.+2      	; 0x3bda <__stack+0x2adb>
    3bd8:	cb c2       	rjmp	.+1430   	; 0x4170 <__stack+0x3071>
    3bda:	9b 16       	cp	r9, r27
    3bdc:	08 f4       	brcc	.+2      	; 0x3be0 <__stack+0x2ae1>
    3bde:	1b c2       	rjmp	.+1078   	; 0x4016 <__stack+0x2f17>
    3be0:	27 e0       	ldi	r18, 0x07	; 7
    3be2:	92 16       	cp	r9, r18
    3be4:	11 f0       	breq	.+4      	; 0x3bea <__stack+0x2aeb>
    3be6:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3bea:	6f c3       	rjmp	.+1758   	; 0x42ca <__stack+0x31cb>
						    {
								case 1:  C_Factor = atof(C_Factor_Buf);	 
    3bec:	c2 01       	movw	r24, r4
    3bee:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    3bf2:	60 93 ea 02 	sts	0x02EA, r22
    3bf6:	70 93 eb 02 	sts	0x02EB, r23
    3bfa:	80 93 ec 02 	sts	0x02EC, r24
    3bfe:	90 93 ed 02 	sts	0x02ED, r25
										 lcd_gotoxy(8,2);
    3c02:	88 e0       	ldi	r24, 0x08	; 8
    3c04:	62 e0       	ldi	r22, 0x02	; 2
    3c06:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(C_Factor_Buf,"%07.3f", C_Factor);
    3c0a:	40 91 ea 02 	lds	r20, 0x02EA
    3c0e:	50 91 eb 02 	lds	r21, 0x02EB
    3c12:	60 91 ec 02 	lds	r22, 0x02EC
    3c16:	70 91 ed 02 	lds	r23, 0x02ED
    3c1a:	8d b7       	in	r24, 0x3d	; 61
    3c1c:	9e b7       	in	r25, 0x3e	; 62
    3c1e:	08 97       	sbiw	r24, 0x08	; 8
    3c20:	0f b6       	in	r0, 0x3f	; 63
    3c22:	f8 94       	cli
    3c24:	9e bf       	out	0x3e, r25	; 62
    3c26:	0f be       	out	0x3f, r0	; 63
    3c28:	8d bf       	out	0x3d, r24	; 61
    3c2a:	ed b7       	in	r30, 0x3d	; 61
    3c2c:	fe b7       	in	r31, 0x3e	; 62
    3c2e:	31 96       	adiw	r30, 0x01	; 1
    3c30:	ad b7       	in	r26, 0x3d	; 61
    3c32:	be b7       	in	r27, 0x3e	; 62
    3c34:	12 96       	adiw	r26, 0x02	; 2
    3c36:	5c 92       	st	X, r5
    3c38:	4e 92       	st	-X, r4
    3c3a:	11 97       	sbiw	r26, 0x01	; 1
    3c3c:	e2 82       	std	Z+2, r14	; 0x02
    3c3e:	f3 82       	std	Z+3, r15	; 0x03
    3c40:	44 83       	std	Z+4, r20	; 0x04
    3c42:	55 83       	std	Z+5, r21	; 0x05
    3c44:	66 83       	std	Z+6, r22	; 0x06
    3c46:	77 83       	std	Z+7, r23	; 0x07
    3c48:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(C_Factor_Buf);
    3c4c:	2d b7       	in	r18, 0x3d	; 61
    3c4e:	3e b7       	in	r19, 0x3e	; 62
    3c50:	28 5f       	subi	r18, 0xF8	; 248
    3c52:	3f 4f       	sbci	r19, 0xFF	; 255
    3c54:	0f b6       	in	r0, 0x3f	; 63
    3c56:	f8 94       	cli
    3c58:	3e bf       	out	0x3e, r19	; 62
    3c5a:	0f be       	out	0x3f, r0	; 63
    3c5c:	2d bf       	out	0x3d, r18	; 61
    3c5e:	c2 01       	movw	r24, r4
    3c60:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(8,2);
    3c64:	88 e0       	ldi	r24, 0x08	; 8
    3c66:	62 e0       	ldi	r22, 0x02	; 2
    3c68:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    3c6c:	8f e0       	ldi	r24, 0x0F	; 15
    3c6e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										  switch (key)  // Main Menu Switch statement
    3c72:	80 91 68 03 	lds	r24, 0x0368
    3c76:	90 91 69 03 	lds	r25, 0x0369
    3c7a:	84 33       	cpi	r24, 0x34	; 52
    3c7c:	91 05       	cpc	r25, r1
    3c7e:	09 f4       	brne	.+2      	; 0x3c82 <__stack+0x2b83>
    3c80:	3f c0       	rjmp	.+126    	; 0x3d00 <__stack+0x2c01>
    3c82:	85 33       	cpi	r24, 0x35	; 53
    3c84:	91 05       	cpc	r25, r1
    3c86:	9c f4       	brge	.+38     	; 0x3cae <__stack+0x2baf>
    3c88:	81 33       	cpi	r24, 0x31	; 49
    3c8a:	91 05       	cpc	r25, r1
    3c8c:	31 f1       	breq	.+76     	; 0x3cda <__stack+0x2bdb>
    3c8e:	82 33       	cpi	r24, 0x32	; 50
    3c90:	91 05       	cpc	r25, r1
    3c92:	2c f4       	brge	.+10     	; 0x3c9e <__stack+0x2b9f>
    3c94:	c0 97       	sbiw	r24, 0x30	; 48
    3c96:	11 f0       	breq	.+4      	; 0x3c9c <__stack+0x2b9d>
    3c98:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3c9c:	54 c0       	rjmp	.+168    	; 0x3d46 <__stack+0x2c47>
    3c9e:	82 33       	cpi	r24, 0x32	; 50
    3ca0:	91 05       	cpc	r25, r1
    3ca2:	11 f1       	breq	.+68     	; 0x3ce8 <__stack+0x2be9>
    3ca4:	c3 97       	sbiw	r24, 0x33	; 51
    3ca6:	11 f0       	breq	.+4      	; 0x3cac <__stack+0x2bad>
    3ca8:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3cac:	23 c0       	rjmp	.+70     	; 0x3cf4 <__stack+0x2bf5>
    3cae:	87 33       	cpi	r24, 0x37	; 55
    3cb0:	91 05       	cpc	r25, r1
    3cb2:	b9 f1       	breq	.+110    	; 0x3d22 <__stack+0x2c23>
    3cb4:	88 33       	cpi	r24, 0x38	; 56
    3cb6:	91 05       	cpc	r25, r1
    3cb8:	44 f4       	brge	.+16     	; 0x3cca <__stack+0x2bcb>
    3cba:	85 33       	cpi	r24, 0x35	; 53
    3cbc:	91 05       	cpc	r25, r1
    3cbe:	29 f1       	breq	.+74     	; 0x3d0a <__stack+0x2c0b>
    3cc0:	c6 97       	sbiw	r24, 0x36	; 54
    3cc2:	11 f0       	breq	.+4      	; 0x3cc8 <__stack+0x2bc9>
    3cc4:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3cc8:	26 c0       	rjmp	.+76     	; 0x3d16 <__stack+0x2c17>
    3cca:	88 33       	cpi	r24, 0x38	; 56
    3ccc:	91 05       	cpc	r25, r1
    3cce:	79 f1       	breq	.+94     	; 0x3d2e <__stack+0x2c2f>
    3cd0:	c9 97       	sbiw	r24, 0x39	; 57
    3cd2:	11 f0       	breq	.+4      	; 0x3cd8 <__stack+0x2bd9>
    3cd4:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
    3cd8:	30 c0       	rjmp	.+96     	; 0x3d3a <__stack+0x2c3b>
										    {
											 
												case '1':lcd_command(LCD_DISP_ON);
    3cda:	8c e0       	ldi	r24, 0x0C	; 12
    3cdc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[0] = '1';
    3ce0:	81 e3       	ldi	r24, 0x31	; 49
    3ce2:	89 a7       	std	Y+41, r24	; 0x29
    3ce4:	0c 94 48 26 	jmp	0x4c90	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    3ce8:	8c e0       	ldi	r24, 0x0C	; 12
    3cea:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[0] = '2';
    3cee:	82 e3       	ldi	r24, 0x32	; 50
    3cf0:	89 a7       	std	Y+41, r24	; 0x29
    3cf2:	ce c7       	rjmp	.+3996   	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    3cf4:	8c e0       	ldi	r24, 0x0C	; 12
    3cf6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[0] = '3';
    3cfa:	83 e3       	ldi	r24, 0x33	; 51
    3cfc:	89 a7       	std	Y+41, r24	; 0x29
    3cfe:	c8 c7       	rjmp	.+3984   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    3d00:	8c e0       	ldi	r24, 0x0C	; 12
    3d02:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[0] = '4';
    3d06:	89 a6       	std	Y+41, r8	; 0x29
    3d08:	c3 c7       	rjmp	.+3974   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    3d0a:	8c e0       	ldi	r24, 0x0C	; 12
    3d0c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     C_Factor_Buf[0] = '5';
    3d10:	85 e3       	ldi	r24, 0x35	; 53
    3d12:	89 a7       	std	Y+41, r24	; 0x29
    3d14:	bd c7       	rjmp	.+3962   	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    3d16:	8c e0       	ldi	r24, 0x0C	; 12
    3d18:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[0] = '6';
    3d1c:	86 e3       	ldi	r24, 0x36	; 54
    3d1e:	89 a7       	std	Y+41, r24	; 0x29
    3d20:	b7 c7       	rjmp	.+3950   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    3d22:	8c e0       	ldi	r24, 0x0C	; 12
    3d24:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[0] = '7';
    3d28:	87 e3       	ldi	r24, 0x37	; 55
    3d2a:	89 a7       	std	Y+41, r24	; 0x29
    3d2c:	b1 c7       	rjmp	.+3938   	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    3d2e:	8c e0       	ldi	r24, 0x0C	; 12
    3d30:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[0] = '8';
    3d34:	88 e3       	ldi	r24, 0x38	; 56
    3d36:	89 a7       	std	Y+41, r24	; 0x29
    3d38:	ab c7       	rjmp	.+3926   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    3d3a:	8c e0       	ldi	r24, 0x0C	; 12
    3d3c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[0] = '9';
    3d40:	89 e3       	ldi	r24, 0x39	; 57
    3d42:	89 a7       	std	Y+41, r24	; 0x29
    3d44:	a5 c7       	rjmp	.+3914   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    3d46:	8c e0       	ldi	r24, 0x0C	; 12
    3d48:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[0] = '0';
    3d4c:	80 e3       	ldi	r24, 0x30	; 48
    3d4e:	89 a7       	std	Y+41, r24	; 0x29
    3d50:	9f c7       	rjmp	.+3902   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
											 }									
								         break;
								case 2:  C_Factor = atof(C_Factor_Buf);	 
    3d52:	c2 01       	movw	r24, r4
    3d54:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    3d58:	60 93 ea 02 	sts	0x02EA, r22
    3d5c:	70 93 eb 02 	sts	0x02EB, r23
    3d60:	80 93 ec 02 	sts	0x02EC, r24
    3d64:	90 93 ed 02 	sts	0x02ED, r25
										 lcd_gotoxy(8,2);
    3d68:	88 e0       	ldi	r24, 0x08	; 8
    3d6a:	62 e0       	ldi	r22, 0x02	; 2
    3d6c:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(C_Factor_Buf,"%07.3f", C_Factor);
    3d70:	40 91 ea 02 	lds	r20, 0x02EA
    3d74:	50 91 eb 02 	lds	r21, 0x02EB
    3d78:	60 91 ec 02 	lds	r22, 0x02EC
    3d7c:	70 91 ed 02 	lds	r23, 0x02ED
    3d80:	8d b7       	in	r24, 0x3d	; 61
    3d82:	9e b7       	in	r25, 0x3e	; 62
    3d84:	08 97       	sbiw	r24, 0x08	; 8
    3d86:	0f b6       	in	r0, 0x3f	; 63
    3d88:	f8 94       	cli
    3d8a:	9e bf       	out	0x3e, r25	; 62
    3d8c:	0f be       	out	0x3f, r0	; 63
    3d8e:	8d bf       	out	0x3d, r24	; 61
    3d90:	ed b7       	in	r30, 0x3d	; 61
    3d92:	fe b7       	in	r31, 0x3e	; 62
    3d94:	31 96       	adiw	r30, 0x01	; 1
    3d96:	ad b7       	in	r26, 0x3d	; 61
    3d98:	be b7       	in	r27, 0x3e	; 62
    3d9a:	12 96       	adiw	r26, 0x02	; 2
    3d9c:	5c 92       	st	X, r5
    3d9e:	4e 92       	st	-X, r4
    3da0:	11 97       	sbiw	r26, 0x01	; 1
    3da2:	e2 82       	std	Z+2, r14	; 0x02
    3da4:	f3 82       	std	Z+3, r15	; 0x03
    3da6:	44 83       	std	Z+4, r20	; 0x04
    3da8:	55 83       	std	Z+5, r21	; 0x05
    3daa:	66 83       	std	Z+6, r22	; 0x06
    3dac:	77 83       	std	Z+7, r23	; 0x07
    3dae:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(C_Factor_Buf);
    3db2:	2d b7       	in	r18, 0x3d	; 61
    3db4:	3e b7       	in	r19, 0x3e	; 62
    3db6:	28 5f       	subi	r18, 0xF8	; 248
    3db8:	3f 4f       	sbci	r19, 0xFF	; 255
    3dba:	0f b6       	in	r0, 0x3f	; 63
    3dbc:	f8 94       	cli
    3dbe:	3e bf       	out	0x3e, r19	; 62
    3dc0:	0f be       	out	0x3f, r0	; 63
    3dc2:	2d bf       	out	0x3d, r18	; 61
    3dc4:	c2 01       	movw	r24, r4
    3dc6:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(9,2);
    3dca:	89 e0       	ldi	r24, 0x09	; 9
    3dcc:	62 e0       	ldi	r22, 0x02	; 2
    3dce:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    3dd2:	8f e0       	ldi	r24, 0x0F	; 15
    3dd4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    3dd8:	80 91 68 03 	lds	r24, 0x0368
    3ddc:	90 91 69 03 	lds	r25, 0x0369
    3de0:	84 33       	cpi	r24, 0x34	; 52
    3de2:	91 05       	cpc	r25, r1
    3de4:	d1 f1       	breq	.+116    	; 0x3e5a <__stack+0x2d5b>
    3de6:	85 33       	cpi	r24, 0x35	; 53
    3de8:	91 05       	cpc	r25, r1
    3dea:	8c f4       	brge	.+34     	; 0x3e0e <__stack+0x2d0f>
    3dec:	81 33       	cpi	r24, 0x31	; 49
    3dee:	91 05       	cpc	r25, r1
    3df0:	11 f1       	breq	.+68     	; 0x3e36 <__stack+0x2d37>
    3df2:	82 33       	cpi	r24, 0x32	; 50
    3df4:	91 05       	cpc	r25, r1
    3df6:	24 f4       	brge	.+8      	; 0x3e00 <__stack+0x2d01>
    3df8:	c0 97       	sbiw	r24, 0x30	; 48
    3dfa:	09 f0       	breq	.+2      	; 0x3dfe <__stack+0x2cff>
    3dfc:	49 c7       	rjmp	.+3730   	; 0x4c90 <__stack+0x3b91>
    3dfe:	50 c0       	rjmp	.+160    	; 0x3ea0 <__stack+0x2da1>
    3e00:	82 33       	cpi	r24, 0x32	; 50
    3e02:	91 05       	cpc	r25, r1
    3e04:	f1 f0       	breq	.+60     	; 0x3e42 <__stack+0x2d43>
    3e06:	c3 97       	sbiw	r24, 0x33	; 51
    3e08:	09 f0       	breq	.+2      	; 0x3e0c <__stack+0x2d0d>
    3e0a:	42 c7       	rjmp	.+3716   	; 0x4c90 <__stack+0x3b91>
    3e0c:	20 c0       	rjmp	.+64     	; 0x3e4e <__stack+0x2d4f>
    3e0e:	87 33       	cpi	r24, 0x37	; 55
    3e10:	91 05       	cpc	r25, r1
    3e12:	a1 f1       	breq	.+104    	; 0x3e7c <__stack+0x2d7d>
    3e14:	88 33       	cpi	r24, 0x38	; 56
    3e16:	91 05       	cpc	r25, r1
    3e18:	3c f4       	brge	.+14     	; 0x3e28 <__stack+0x2d29>
    3e1a:	85 33       	cpi	r24, 0x35	; 53
    3e1c:	91 05       	cpc	r25, r1
    3e1e:	11 f1       	breq	.+68     	; 0x3e64 <__stack+0x2d65>
    3e20:	c6 97       	sbiw	r24, 0x36	; 54
    3e22:	09 f0       	breq	.+2      	; 0x3e26 <__stack+0x2d27>
    3e24:	35 c7       	rjmp	.+3690   	; 0x4c90 <__stack+0x3b91>
    3e26:	24 c0       	rjmp	.+72     	; 0x3e70 <__stack+0x2d71>
    3e28:	88 33       	cpi	r24, 0x38	; 56
    3e2a:	91 05       	cpc	r25, r1
    3e2c:	69 f1       	breq	.+90     	; 0x3e88 <__stack+0x2d89>
    3e2e:	c9 97       	sbiw	r24, 0x39	; 57
    3e30:	09 f0       	breq	.+2      	; 0x3e34 <__stack+0x2d35>
    3e32:	2e c7       	rjmp	.+3676   	; 0x4c90 <__stack+0x3b91>
    3e34:	2f c0       	rjmp	.+94     	; 0x3e94 <__stack+0x2d95>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    3e36:	8c e0       	ldi	r24, 0x0C	; 12
    3e38:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[1] = '1';
    3e3c:	81 e3       	ldi	r24, 0x31	; 49
    3e3e:	8a a7       	std	Y+42, r24	; 0x2a
    3e40:	27 c7       	rjmp	.+3662   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    3e42:	8c e0       	ldi	r24, 0x0C	; 12
    3e44:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[1] = '2';
    3e48:	82 e3       	ldi	r24, 0x32	; 50
    3e4a:	8a a7       	std	Y+42, r24	; 0x2a
    3e4c:	21 c7       	rjmp	.+3650   	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    3e4e:	8c e0       	ldi	r24, 0x0C	; 12
    3e50:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[1] = '3';
    3e54:	83 e3       	ldi	r24, 0x33	; 51
    3e56:	8a a7       	std	Y+42, r24	; 0x2a
    3e58:	1b c7       	rjmp	.+3638   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    3e5a:	8c e0       	ldi	r24, 0x0C	; 12
    3e5c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[1] = '4';
    3e60:	8a a6       	std	Y+42, r8	; 0x2a
    3e62:	16 c7       	rjmp	.+3628   	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    3e64:	8c e0       	ldi	r24, 0x0C	; 12
    3e66:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     C_Factor_Buf[1] = '5';
    3e6a:	85 e3       	ldi	r24, 0x35	; 53
    3e6c:	8a a7       	std	Y+42, r24	; 0x2a
    3e6e:	10 c7       	rjmp	.+3616   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    3e70:	8c e0       	ldi	r24, 0x0C	; 12
    3e72:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[1] = '6';
    3e76:	86 e3       	ldi	r24, 0x36	; 54
    3e78:	8a a7       	std	Y+42, r24	; 0x2a
    3e7a:	0a c7       	rjmp	.+3604   	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    3e7c:	8c e0       	ldi	r24, 0x0C	; 12
    3e7e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[1] = '7';
    3e82:	87 e3       	ldi	r24, 0x37	; 55
    3e84:	8a a7       	std	Y+42, r24	; 0x2a
    3e86:	04 c7       	rjmp	.+3592   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    3e88:	8c e0       	ldi	r24, 0x0C	; 12
    3e8a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[1] = '8';
    3e8e:	88 e3       	ldi	r24, 0x38	; 56
    3e90:	8a a7       	std	Y+42, r24	; 0x2a
    3e92:	fe c6       	rjmp	.+3580   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    3e94:	8c e0       	ldi	r24, 0x0C	; 12
    3e96:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[1] = '9';
    3e9a:	89 e3       	ldi	r24, 0x39	; 57
    3e9c:	8a a7       	std	Y+42, r24	; 0x2a
    3e9e:	f8 c6       	rjmp	.+3568   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    3ea0:	8c e0       	ldi	r24, 0x0C	; 12
    3ea2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[1] = '0';
    3ea6:	80 e3       	ldi	r24, 0x30	; 48
    3ea8:	8a a7       	std	Y+42, r24	; 0x2a
    3eaa:	f2 c6       	rjmp	.+3556   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 3:  C_Factor = atof(C_Factor_Buf);	 
    3eac:	c2 01       	movw	r24, r4
    3eae:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    3eb2:	60 93 ea 02 	sts	0x02EA, r22
    3eb6:	70 93 eb 02 	sts	0x02EB, r23
    3eba:	80 93 ec 02 	sts	0x02EC, r24
    3ebe:	90 93 ed 02 	sts	0x02ED, r25
										 lcd_gotoxy(8,2);
    3ec2:	88 e0       	ldi	r24, 0x08	; 8
    3ec4:	62 e0       	ldi	r22, 0x02	; 2
    3ec6:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(C_Factor_Buf,"%07.3f", C_Factor);
    3eca:	40 91 ea 02 	lds	r20, 0x02EA
    3ece:	50 91 eb 02 	lds	r21, 0x02EB
    3ed2:	60 91 ec 02 	lds	r22, 0x02EC
    3ed6:	70 91 ed 02 	lds	r23, 0x02ED
    3eda:	8d b7       	in	r24, 0x3d	; 61
    3edc:	9e b7       	in	r25, 0x3e	; 62
    3ede:	08 97       	sbiw	r24, 0x08	; 8
    3ee0:	0f b6       	in	r0, 0x3f	; 63
    3ee2:	f8 94       	cli
    3ee4:	9e bf       	out	0x3e, r25	; 62
    3ee6:	0f be       	out	0x3f, r0	; 63
    3ee8:	8d bf       	out	0x3d, r24	; 61
    3eea:	ed b7       	in	r30, 0x3d	; 61
    3eec:	fe b7       	in	r31, 0x3e	; 62
    3eee:	31 96       	adiw	r30, 0x01	; 1
    3ef0:	ad b7       	in	r26, 0x3d	; 61
    3ef2:	be b7       	in	r27, 0x3e	; 62
    3ef4:	12 96       	adiw	r26, 0x02	; 2
    3ef6:	5c 92       	st	X, r5
    3ef8:	4e 92       	st	-X, r4
    3efa:	11 97       	sbiw	r26, 0x01	; 1
    3efc:	e2 82       	std	Z+2, r14	; 0x02
    3efe:	f3 82       	std	Z+3, r15	; 0x03
    3f00:	44 83       	std	Z+4, r20	; 0x04
    3f02:	55 83       	std	Z+5, r21	; 0x05
    3f04:	66 83       	std	Z+6, r22	; 0x06
    3f06:	77 83       	std	Z+7, r23	; 0x07
    3f08:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(C_Factor_Buf);
    3f0c:	2d b7       	in	r18, 0x3d	; 61
    3f0e:	3e b7       	in	r19, 0x3e	; 62
    3f10:	28 5f       	subi	r18, 0xF8	; 248
    3f12:	3f 4f       	sbci	r19, 0xFF	; 255
    3f14:	0f b6       	in	r0, 0x3f	; 63
    3f16:	f8 94       	cli
    3f18:	3e bf       	out	0x3e, r19	; 62
    3f1a:	0f be       	out	0x3f, r0	; 63
    3f1c:	2d bf       	out	0x3d, r18	; 61
    3f1e:	c2 01       	movw	r24, r4
    3f20:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(10,2);
    3f24:	8a e0       	ldi	r24, 0x0A	; 10
    3f26:	62 e0       	ldi	r22, 0x02	; 2
    3f28:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    3f2c:	8f e0       	ldi	r24, 0x0F	; 15
    3f2e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    3f32:	80 91 68 03 	lds	r24, 0x0368
    3f36:	90 91 69 03 	lds	r25, 0x0369
    3f3a:	84 33       	cpi	r24, 0x34	; 52
    3f3c:	91 05       	cpc	r25, r1
    3f3e:	d1 f1       	breq	.+116    	; 0x3fb4 <__stack+0x2eb5>
    3f40:	85 33       	cpi	r24, 0x35	; 53
    3f42:	91 05       	cpc	r25, r1
    3f44:	8c f4       	brge	.+34     	; 0x3f68 <__stack+0x2e69>
    3f46:	81 33       	cpi	r24, 0x31	; 49
    3f48:	91 05       	cpc	r25, r1
    3f4a:	11 f1       	breq	.+68     	; 0x3f90 <__stack+0x2e91>
    3f4c:	82 33       	cpi	r24, 0x32	; 50
    3f4e:	91 05       	cpc	r25, r1
    3f50:	24 f4       	brge	.+8      	; 0x3f5a <__stack+0x2e5b>
    3f52:	c0 97       	sbiw	r24, 0x30	; 48
    3f54:	09 f0       	breq	.+2      	; 0x3f58 <__stack+0x2e59>
    3f56:	9c c6       	rjmp	.+3384   	; 0x4c90 <__stack+0x3b91>
    3f58:	50 c0       	rjmp	.+160    	; 0x3ffa <__stack+0x2efb>
    3f5a:	82 33       	cpi	r24, 0x32	; 50
    3f5c:	91 05       	cpc	r25, r1
    3f5e:	f1 f0       	breq	.+60     	; 0x3f9c <__stack+0x2e9d>
    3f60:	c3 97       	sbiw	r24, 0x33	; 51
    3f62:	09 f0       	breq	.+2      	; 0x3f66 <__stack+0x2e67>
    3f64:	95 c6       	rjmp	.+3370   	; 0x4c90 <__stack+0x3b91>
    3f66:	20 c0       	rjmp	.+64     	; 0x3fa8 <__stack+0x2ea9>
    3f68:	87 33       	cpi	r24, 0x37	; 55
    3f6a:	91 05       	cpc	r25, r1
    3f6c:	a1 f1       	breq	.+104    	; 0x3fd6 <__stack+0x2ed7>
    3f6e:	88 33       	cpi	r24, 0x38	; 56
    3f70:	91 05       	cpc	r25, r1
    3f72:	3c f4       	brge	.+14     	; 0x3f82 <__stack+0x2e83>
    3f74:	85 33       	cpi	r24, 0x35	; 53
    3f76:	91 05       	cpc	r25, r1
    3f78:	11 f1       	breq	.+68     	; 0x3fbe <__stack+0x2ebf>
    3f7a:	c6 97       	sbiw	r24, 0x36	; 54
    3f7c:	09 f0       	breq	.+2      	; 0x3f80 <__stack+0x2e81>
    3f7e:	88 c6       	rjmp	.+3344   	; 0x4c90 <__stack+0x3b91>
    3f80:	24 c0       	rjmp	.+72     	; 0x3fca <__stack+0x2ecb>
    3f82:	88 33       	cpi	r24, 0x38	; 56
    3f84:	91 05       	cpc	r25, r1
    3f86:	69 f1       	breq	.+90     	; 0x3fe2 <__stack+0x2ee3>
    3f88:	c9 97       	sbiw	r24, 0x39	; 57
    3f8a:	09 f0       	breq	.+2      	; 0x3f8e <__stack+0x2e8f>
    3f8c:	81 c6       	rjmp	.+3330   	; 0x4c90 <__stack+0x3b91>
    3f8e:	2f c0       	rjmp	.+94     	; 0x3fee <__stack+0x2eef>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    3f90:	8c e0       	ldi	r24, 0x0C	; 12
    3f92:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[2] = '1';
    3f96:	81 e3       	ldi	r24, 0x31	; 49
    3f98:	8b a7       	std	Y+43, r24	; 0x2b
    3f9a:	7a c6       	rjmp	.+3316   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    3f9c:	8c e0       	ldi	r24, 0x0C	; 12
    3f9e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[2] = '2';
    3fa2:	82 e3       	ldi	r24, 0x32	; 50
    3fa4:	8b a7       	std	Y+43, r24	; 0x2b
    3fa6:	74 c6       	rjmp	.+3304   	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    3fa8:	8c e0       	ldi	r24, 0x0C	; 12
    3faa:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[2] = '3';
    3fae:	83 e3       	ldi	r24, 0x33	; 51
    3fb0:	8b a7       	std	Y+43, r24	; 0x2b
    3fb2:	6e c6       	rjmp	.+3292   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    3fb4:	8c e0       	ldi	r24, 0x0C	; 12
    3fb6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[2] = '4';
    3fba:	8b a6       	std	Y+43, r8	; 0x2b
    3fbc:	69 c6       	rjmp	.+3282   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    3fbe:	8c e0       	ldi	r24, 0x0C	; 12
    3fc0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     C_Factor_Buf[2] = '5';
    3fc4:	85 e3       	ldi	r24, 0x35	; 53
    3fc6:	8b a7       	std	Y+43, r24	; 0x2b
    3fc8:	63 c6       	rjmp	.+3270   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    3fca:	8c e0       	ldi	r24, 0x0C	; 12
    3fcc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[2] = '6';
    3fd0:	86 e3       	ldi	r24, 0x36	; 54
    3fd2:	8b a7       	std	Y+43, r24	; 0x2b
    3fd4:	5d c6       	rjmp	.+3258   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    3fd6:	8c e0       	ldi	r24, 0x0C	; 12
    3fd8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[2] = '7';
    3fdc:	87 e3       	ldi	r24, 0x37	; 55
    3fde:	8b a7       	std	Y+43, r24	; 0x2b
    3fe0:	57 c6       	rjmp	.+3246   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    3fe2:	8c e0       	ldi	r24, 0x0C	; 12
    3fe4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[2] = '8';
    3fe8:	88 e3       	ldi	r24, 0x38	; 56
    3fea:	8b a7       	std	Y+43, r24	; 0x2b
    3fec:	51 c6       	rjmp	.+3234   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    3fee:	8c e0       	ldi	r24, 0x0C	; 12
    3ff0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[2] = '9';
    3ff4:	89 e3       	ldi	r24, 0x39	; 57
    3ff6:	8b a7       	std	Y+43, r24	; 0x2b
    3ff8:	4b c6       	rjmp	.+3222   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    3ffa:	8c e0       	ldi	r24, 0x0C	; 12
    3ffc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[2] = '0';
    4000:	80 e3       	ldi	r24, 0x30	; 48
    4002:	8b a7       	std	Y+43, r24	; 0x2b
    4004:	45 c6       	rjmp	.+3210   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 4:  lcd_gotoxy(11,2);
    4006:	8b e0       	ldi	r24, 0x0B	; 11
    4008:	62 e0       	ldi	r22, 0x02	; 2
    400a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    400e:	8f e0       	ldi	r24, 0x0F	; 15
    4010:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
    4014:	3d c6       	rjmp	.+3194   	; 0x4c90 <__stack+0x3b91>
								         break;
								case 5:  C_Factor = atof(C_Factor_Buf);	 
    4016:	c2 01       	movw	r24, r4
    4018:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    401c:	60 93 ea 02 	sts	0x02EA, r22
    4020:	70 93 eb 02 	sts	0x02EB, r23
    4024:	80 93 ec 02 	sts	0x02EC, r24
    4028:	90 93 ed 02 	sts	0x02ED, r25
										 lcd_gotoxy(8,2);
    402c:	88 e0       	ldi	r24, 0x08	; 8
    402e:	62 e0       	ldi	r22, 0x02	; 2
    4030:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(C_Factor_Buf,"%07.3f", C_Factor);
    4034:	40 91 ea 02 	lds	r20, 0x02EA
    4038:	50 91 eb 02 	lds	r21, 0x02EB
    403c:	60 91 ec 02 	lds	r22, 0x02EC
    4040:	70 91 ed 02 	lds	r23, 0x02ED
    4044:	8d b7       	in	r24, 0x3d	; 61
    4046:	9e b7       	in	r25, 0x3e	; 62
    4048:	08 97       	sbiw	r24, 0x08	; 8
    404a:	0f b6       	in	r0, 0x3f	; 63
    404c:	f8 94       	cli
    404e:	9e bf       	out	0x3e, r25	; 62
    4050:	0f be       	out	0x3f, r0	; 63
    4052:	8d bf       	out	0x3d, r24	; 61
    4054:	ed b7       	in	r30, 0x3d	; 61
    4056:	fe b7       	in	r31, 0x3e	; 62
    4058:	31 96       	adiw	r30, 0x01	; 1
    405a:	ad b7       	in	r26, 0x3d	; 61
    405c:	be b7       	in	r27, 0x3e	; 62
    405e:	12 96       	adiw	r26, 0x02	; 2
    4060:	5c 92       	st	X, r5
    4062:	4e 92       	st	-X, r4
    4064:	11 97       	sbiw	r26, 0x01	; 1
    4066:	e2 82       	std	Z+2, r14	; 0x02
    4068:	f3 82       	std	Z+3, r15	; 0x03
    406a:	44 83       	std	Z+4, r20	; 0x04
    406c:	55 83       	std	Z+5, r21	; 0x05
    406e:	66 83       	std	Z+6, r22	; 0x06
    4070:	77 83       	std	Z+7, r23	; 0x07
    4072:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(C_Factor_Buf);
    4076:	2d b7       	in	r18, 0x3d	; 61
    4078:	3e b7       	in	r19, 0x3e	; 62
    407a:	28 5f       	subi	r18, 0xF8	; 248
    407c:	3f 4f       	sbci	r19, 0xFF	; 255
    407e:	0f b6       	in	r0, 0x3f	; 63
    4080:	f8 94       	cli
    4082:	3e bf       	out	0x3e, r19	; 62
    4084:	0f be       	out	0x3f, r0	; 63
    4086:	2d bf       	out	0x3d, r18	; 61
    4088:	c2 01       	movw	r24, r4
    408a:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(12,2);
    408e:	8c e0       	ldi	r24, 0x0C	; 12
    4090:	62 e0       	ldi	r22, 0x02	; 2
    4092:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    4096:	8f e0       	ldi	r24, 0x0F	; 15
    4098:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    409c:	80 91 68 03 	lds	r24, 0x0368
    40a0:	90 91 69 03 	lds	r25, 0x0369
    40a4:	84 33       	cpi	r24, 0x34	; 52
    40a6:	91 05       	cpc	r25, r1
    40a8:	d1 f1       	breq	.+116    	; 0x411e <__stack+0x301f>
    40aa:	85 33       	cpi	r24, 0x35	; 53
    40ac:	91 05       	cpc	r25, r1
    40ae:	8c f4       	brge	.+34     	; 0x40d2 <__stack+0x2fd3>
    40b0:	81 33       	cpi	r24, 0x31	; 49
    40b2:	91 05       	cpc	r25, r1
    40b4:	11 f1       	breq	.+68     	; 0x40fa <__stack+0x2ffb>
    40b6:	82 33       	cpi	r24, 0x32	; 50
    40b8:	91 05       	cpc	r25, r1
    40ba:	24 f4       	brge	.+8      	; 0x40c4 <__stack+0x2fc5>
    40bc:	c0 97       	sbiw	r24, 0x30	; 48
    40be:	09 f0       	breq	.+2      	; 0x40c2 <__stack+0x2fc3>
    40c0:	e7 c5       	rjmp	.+3022   	; 0x4c90 <__stack+0x3b91>
    40c2:	50 c0       	rjmp	.+160    	; 0x4164 <__stack+0x3065>
    40c4:	82 33       	cpi	r24, 0x32	; 50
    40c6:	91 05       	cpc	r25, r1
    40c8:	f1 f0       	breq	.+60     	; 0x4106 <__stack+0x3007>
    40ca:	c3 97       	sbiw	r24, 0x33	; 51
    40cc:	09 f0       	breq	.+2      	; 0x40d0 <__stack+0x2fd1>
    40ce:	e0 c5       	rjmp	.+3008   	; 0x4c90 <__stack+0x3b91>
    40d0:	20 c0       	rjmp	.+64     	; 0x4112 <__stack+0x3013>
    40d2:	87 33       	cpi	r24, 0x37	; 55
    40d4:	91 05       	cpc	r25, r1
    40d6:	a1 f1       	breq	.+104    	; 0x4140 <__stack+0x3041>
    40d8:	88 33       	cpi	r24, 0x38	; 56
    40da:	91 05       	cpc	r25, r1
    40dc:	3c f4       	brge	.+14     	; 0x40ec <__stack+0x2fed>
    40de:	85 33       	cpi	r24, 0x35	; 53
    40e0:	91 05       	cpc	r25, r1
    40e2:	11 f1       	breq	.+68     	; 0x4128 <__stack+0x3029>
    40e4:	c6 97       	sbiw	r24, 0x36	; 54
    40e6:	09 f0       	breq	.+2      	; 0x40ea <__stack+0x2feb>
    40e8:	d3 c5       	rjmp	.+2982   	; 0x4c90 <__stack+0x3b91>
    40ea:	24 c0       	rjmp	.+72     	; 0x4134 <__stack+0x3035>
    40ec:	88 33       	cpi	r24, 0x38	; 56
    40ee:	91 05       	cpc	r25, r1
    40f0:	69 f1       	breq	.+90     	; 0x414c <__stack+0x304d>
    40f2:	c9 97       	sbiw	r24, 0x39	; 57
    40f4:	09 f0       	breq	.+2      	; 0x40f8 <__stack+0x2ff9>
    40f6:	cc c5       	rjmp	.+2968   	; 0x4c90 <__stack+0x3b91>
    40f8:	2f c0       	rjmp	.+94     	; 0x4158 <__stack+0x3059>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    40fa:	8c e0       	ldi	r24, 0x0C	; 12
    40fc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[4] = '1';
    4100:	81 e3       	ldi	r24, 0x31	; 49
    4102:	8d a7       	std	Y+45, r24	; 0x2d
    4104:	c5 c5       	rjmp	.+2954   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    4106:	8c e0       	ldi	r24, 0x0C	; 12
    4108:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[4] = '2';
    410c:	82 e3       	ldi	r24, 0x32	; 50
    410e:	8d a7       	std	Y+45, r24	; 0x2d
    4110:	bf c5       	rjmp	.+2942   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    4112:	8c e0       	ldi	r24, 0x0C	; 12
    4114:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[4] = '3';
    4118:	83 e3       	ldi	r24, 0x33	; 51
    411a:	8d a7       	std	Y+45, r24	; 0x2d
    411c:	b9 c5       	rjmp	.+2930   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    411e:	8c e0       	ldi	r24, 0x0C	; 12
    4120:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[4] = '4';
    4124:	8d a6       	std	Y+45, r8	; 0x2d
    4126:	b4 c5       	rjmp	.+2920   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    4128:	8c e0       	ldi	r24, 0x0C	; 12
    412a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     C_Factor_Buf[4] = '5';
    412e:	85 e3       	ldi	r24, 0x35	; 53
    4130:	8d a7       	std	Y+45, r24	; 0x2d
    4132:	ae c5       	rjmp	.+2908   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    4134:	8c e0       	ldi	r24, 0x0C	; 12
    4136:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[4] = '6';
    413a:	86 e3       	ldi	r24, 0x36	; 54
    413c:	8d a7       	std	Y+45, r24	; 0x2d
    413e:	a8 c5       	rjmp	.+2896   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    4140:	8c e0       	ldi	r24, 0x0C	; 12
    4142:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[4] = '7';
    4146:	87 e3       	ldi	r24, 0x37	; 55
    4148:	8d a7       	std	Y+45, r24	; 0x2d
    414a:	a2 c5       	rjmp	.+2884   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    414c:	8c e0       	ldi	r24, 0x0C	; 12
    414e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[4] = '8';
    4152:	88 e3       	ldi	r24, 0x38	; 56
    4154:	8d a7       	std	Y+45, r24	; 0x2d
    4156:	9c c5       	rjmp	.+2872   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    4158:	8c e0       	ldi	r24, 0x0C	; 12
    415a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[4] = '9';
    415e:	89 e3       	ldi	r24, 0x39	; 57
    4160:	8d a7       	std	Y+45, r24	; 0x2d
    4162:	96 c5       	rjmp	.+2860   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    4164:	8c e0       	ldi	r24, 0x0C	; 12
    4166:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[4] = '0';
    416a:	80 e3       	ldi	r24, 0x30	; 48
    416c:	8d a7       	std	Y+45, r24	; 0x2d
    416e:	90 c5       	rjmp	.+2848   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 6:  C_Factor = atof(C_Factor_Buf);	 
    4170:	c2 01       	movw	r24, r4
    4172:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    4176:	60 93 ea 02 	sts	0x02EA, r22
    417a:	70 93 eb 02 	sts	0x02EB, r23
    417e:	80 93 ec 02 	sts	0x02EC, r24
    4182:	90 93 ed 02 	sts	0x02ED, r25
										 lcd_gotoxy(8,2);
    4186:	88 e0       	ldi	r24, 0x08	; 8
    4188:	62 e0       	ldi	r22, 0x02	; 2
    418a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(C_Factor_Buf,"%07.3f", C_Factor);
    418e:	40 91 ea 02 	lds	r20, 0x02EA
    4192:	50 91 eb 02 	lds	r21, 0x02EB
    4196:	60 91 ec 02 	lds	r22, 0x02EC
    419a:	70 91 ed 02 	lds	r23, 0x02ED
    419e:	8d b7       	in	r24, 0x3d	; 61
    41a0:	9e b7       	in	r25, 0x3e	; 62
    41a2:	08 97       	sbiw	r24, 0x08	; 8
    41a4:	0f b6       	in	r0, 0x3f	; 63
    41a6:	f8 94       	cli
    41a8:	9e bf       	out	0x3e, r25	; 62
    41aa:	0f be       	out	0x3f, r0	; 63
    41ac:	8d bf       	out	0x3d, r24	; 61
    41ae:	ed b7       	in	r30, 0x3d	; 61
    41b0:	fe b7       	in	r31, 0x3e	; 62
    41b2:	31 96       	adiw	r30, 0x01	; 1
    41b4:	ad b7       	in	r26, 0x3d	; 61
    41b6:	be b7       	in	r27, 0x3e	; 62
    41b8:	12 96       	adiw	r26, 0x02	; 2
    41ba:	5c 92       	st	X, r5
    41bc:	4e 92       	st	-X, r4
    41be:	11 97       	sbiw	r26, 0x01	; 1
    41c0:	e2 82       	std	Z+2, r14	; 0x02
    41c2:	f3 82       	std	Z+3, r15	; 0x03
    41c4:	44 83       	std	Z+4, r20	; 0x04
    41c6:	55 83       	std	Z+5, r21	; 0x05
    41c8:	66 83       	std	Z+6, r22	; 0x06
    41ca:	77 83       	std	Z+7, r23	; 0x07
    41cc:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(C_Factor_Buf);
    41d0:	2d b7       	in	r18, 0x3d	; 61
    41d2:	3e b7       	in	r19, 0x3e	; 62
    41d4:	28 5f       	subi	r18, 0xF8	; 248
    41d6:	3f 4f       	sbci	r19, 0xFF	; 255
    41d8:	0f b6       	in	r0, 0x3f	; 63
    41da:	f8 94       	cli
    41dc:	3e bf       	out	0x3e, r19	; 62
    41de:	0f be       	out	0x3f, r0	; 63
    41e0:	2d bf       	out	0x3d, r18	; 61
    41e2:	c2 01       	movw	r24, r4
    41e4:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(13,2);
    41e8:	8d e0       	ldi	r24, 0x0D	; 13
    41ea:	62 e0       	ldi	r22, 0x02	; 2
    41ec:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    41f0:	8f e0       	ldi	r24, 0x0F	; 15
    41f2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    41f6:	80 91 68 03 	lds	r24, 0x0368
    41fa:	90 91 69 03 	lds	r25, 0x0369
    41fe:	84 33       	cpi	r24, 0x34	; 52
    4200:	91 05       	cpc	r25, r1
    4202:	d1 f1       	breq	.+116    	; 0x4278 <__stack+0x3179>
    4204:	85 33       	cpi	r24, 0x35	; 53
    4206:	91 05       	cpc	r25, r1
    4208:	8c f4       	brge	.+34     	; 0x422c <__stack+0x312d>
    420a:	81 33       	cpi	r24, 0x31	; 49
    420c:	91 05       	cpc	r25, r1
    420e:	11 f1       	breq	.+68     	; 0x4254 <__stack+0x3155>
    4210:	82 33       	cpi	r24, 0x32	; 50
    4212:	91 05       	cpc	r25, r1
    4214:	24 f4       	brge	.+8      	; 0x421e <__stack+0x311f>
    4216:	c0 97       	sbiw	r24, 0x30	; 48
    4218:	09 f0       	breq	.+2      	; 0x421c <__stack+0x311d>
    421a:	3a c5       	rjmp	.+2676   	; 0x4c90 <__stack+0x3b91>
    421c:	50 c0       	rjmp	.+160    	; 0x42be <__stack+0x31bf>
    421e:	82 33       	cpi	r24, 0x32	; 50
    4220:	91 05       	cpc	r25, r1
    4222:	f1 f0       	breq	.+60     	; 0x4260 <__stack+0x3161>
    4224:	c3 97       	sbiw	r24, 0x33	; 51
    4226:	09 f0       	breq	.+2      	; 0x422a <__stack+0x312b>
    4228:	33 c5       	rjmp	.+2662   	; 0x4c90 <__stack+0x3b91>
    422a:	20 c0       	rjmp	.+64     	; 0x426c <__stack+0x316d>
    422c:	87 33       	cpi	r24, 0x37	; 55
    422e:	91 05       	cpc	r25, r1
    4230:	a1 f1       	breq	.+104    	; 0x429a <__stack+0x319b>
    4232:	88 33       	cpi	r24, 0x38	; 56
    4234:	91 05       	cpc	r25, r1
    4236:	3c f4       	brge	.+14     	; 0x4246 <__stack+0x3147>
    4238:	85 33       	cpi	r24, 0x35	; 53
    423a:	91 05       	cpc	r25, r1
    423c:	11 f1       	breq	.+68     	; 0x4282 <__stack+0x3183>
    423e:	c6 97       	sbiw	r24, 0x36	; 54
    4240:	09 f0       	breq	.+2      	; 0x4244 <__stack+0x3145>
    4242:	26 c5       	rjmp	.+2636   	; 0x4c90 <__stack+0x3b91>
    4244:	24 c0       	rjmp	.+72     	; 0x428e <__stack+0x318f>
    4246:	88 33       	cpi	r24, 0x38	; 56
    4248:	91 05       	cpc	r25, r1
    424a:	69 f1       	breq	.+90     	; 0x42a6 <__stack+0x31a7>
    424c:	c9 97       	sbiw	r24, 0x39	; 57
    424e:	09 f0       	breq	.+2      	; 0x4252 <__stack+0x3153>
    4250:	1f c5       	rjmp	.+2622   	; 0x4c90 <__stack+0x3b91>
    4252:	2f c0       	rjmp	.+94     	; 0x42b2 <__stack+0x31b3>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    4254:	8c e0       	ldi	r24, 0x0C	; 12
    4256:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[5] = '1';
    425a:	81 e3       	ldi	r24, 0x31	; 49
    425c:	8e a7       	std	Y+46, r24	; 0x2e
    425e:	18 c5       	rjmp	.+2608   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    4260:	8c e0       	ldi	r24, 0x0C	; 12
    4262:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[5] = '2';
    4266:	82 e3       	ldi	r24, 0x32	; 50
    4268:	8e a7       	std	Y+46, r24	; 0x2e
    426a:	12 c5       	rjmp	.+2596   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    426c:	8c e0       	ldi	r24, 0x0C	; 12
    426e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[5] = '3';
    4272:	83 e3       	ldi	r24, 0x33	; 51
    4274:	8e a7       	std	Y+46, r24	; 0x2e
    4276:	0c c5       	rjmp	.+2584   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    4278:	8c e0       	ldi	r24, 0x0C	; 12
    427a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[5] = '4';
    427e:	8e a6       	std	Y+46, r8	; 0x2e
    4280:	07 c5       	rjmp	.+2574   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    4282:	8c e0       	ldi	r24, 0x0C	; 12
    4284:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     C_Factor_Buf[5] = '5';
    4288:	85 e3       	ldi	r24, 0x35	; 53
    428a:	8e a7       	std	Y+46, r24	; 0x2e
    428c:	01 c5       	rjmp	.+2562   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    428e:	8c e0       	ldi	r24, 0x0C	; 12
    4290:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[5] = '6';
    4294:	86 e3       	ldi	r24, 0x36	; 54
    4296:	8e a7       	std	Y+46, r24	; 0x2e
    4298:	fb c4       	rjmp	.+2550   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    429a:	8c e0       	ldi	r24, 0x0C	; 12
    429c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[5] = '7';
    42a0:	87 e3       	ldi	r24, 0x37	; 55
    42a2:	8e a7       	std	Y+46, r24	; 0x2e
    42a4:	f5 c4       	rjmp	.+2538   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    42a6:	8c e0       	ldi	r24, 0x0C	; 12
    42a8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[5] = '8';
    42ac:	88 e3       	ldi	r24, 0x38	; 56
    42ae:	8e a7       	std	Y+46, r24	; 0x2e
    42b0:	ef c4       	rjmp	.+2526   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    42b2:	8c e0       	ldi	r24, 0x0C	; 12
    42b4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[5] = '9';
    42b8:	89 e3       	ldi	r24, 0x39	; 57
    42ba:	8e a7       	std	Y+46, r24	; 0x2e
    42bc:	e9 c4       	rjmp	.+2514   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    42be:	8c e0       	ldi	r24, 0x0C	; 12
    42c0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[5] = '0';
    42c4:	80 e3       	ldi	r24, 0x30	; 48
    42c6:	8e a7       	std	Y+46, r24	; 0x2e
    42c8:	e3 c4       	rjmp	.+2502   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 7:  C_Factor = atof(C_Factor_Buf);	 
    42ca:	c2 01       	movw	r24, r4
    42cc:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    42d0:	60 93 ea 02 	sts	0x02EA, r22
    42d4:	70 93 eb 02 	sts	0x02EB, r23
    42d8:	80 93 ec 02 	sts	0x02EC, r24
    42dc:	90 93 ed 02 	sts	0x02ED, r25
										 lcd_gotoxy(8,2);
    42e0:	88 e0       	ldi	r24, 0x08	; 8
    42e2:	62 e0       	ldi	r22, 0x02	; 2
    42e4:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(C_Factor_Buf,"%07.3f", C_Factor);
    42e8:	40 91 ea 02 	lds	r20, 0x02EA
    42ec:	50 91 eb 02 	lds	r21, 0x02EB
    42f0:	60 91 ec 02 	lds	r22, 0x02EC
    42f4:	70 91 ed 02 	lds	r23, 0x02ED
    42f8:	8d b7       	in	r24, 0x3d	; 61
    42fa:	9e b7       	in	r25, 0x3e	; 62
    42fc:	08 97       	sbiw	r24, 0x08	; 8
    42fe:	0f b6       	in	r0, 0x3f	; 63
    4300:	f8 94       	cli
    4302:	9e bf       	out	0x3e, r25	; 62
    4304:	0f be       	out	0x3f, r0	; 63
    4306:	8d bf       	out	0x3d, r24	; 61
    4308:	ed b7       	in	r30, 0x3d	; 61
    430a:	fe b7       	in	r31, 0x3e	; 62
    430c:	31 96       	adiw	r30, 0x01	; 1
    430e:	ad b7       	in	r26, 0x3d	; 61
    4310:	be b7       	in	r27, 0x3e	; 62
    4312:	12 96       	adiw	r26, 0x02	; 2
    4314:	5c 92       	st	X, r5
    4316:	4e 92       	st	-X, r4
    4318:	11 97       	sbiw	r26, 0x01	; 1
    431a:	e2 82       	std	Z+2, r14	; 0x02
    431c:	f3 82       	std	Z+3, r15	; 0x03
    431e:	44 83       	std	Z+4, r20	; 0x04
    4320:	55 83       	std	Z+5, r21	; 0x05
    4322:	66 83       	std	Z+6, r22	; 0x06
    4324:	77 83       	std	Z+7, r23	; 0x07
    4326:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(C_Factor_Buf);
    432a:	2d b7       	in	r18, 0x3d	; 61
    432c:	3e b7       	in	r19, 0x3e	; 62
    432e:	28 5f       	subi	r18, 0xF8	; 248
    4330:	3f 4f       	sbci	r19, 0xFF	; 255
    4332:	0f b6       	in	r0, 0x3f	; 63
    4334:	f8 94       	cli
    4336:	3e bf       	out	0x3e, r19	; 62
    4338:	0f be       	out	0x3f, r0	; 63
    433a:	2d bf       	out	0x3d, r18	; 61
    433c:	c2 01       	movw	r24, r4
    433e:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(14,2);
    4342:	8e e0       	ldi	r24, 0x0E	; 14
    4344:	62 e0       	ldi	r22, 0x02	; 2
    4346:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    434a:	8f e0       	ldi	r24, 0x0F	; 15
    434c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    4350:	80 91 68 03 	lds	r24, 0x0368
    4354:	90 91 69 03 	lds	r25, 0x0369
    4358:	84 33       	cpi	r24, 0x34	; 52
    435a:	91 05       	cpc	r25, r1
    435c:	d1 f1       	breq	.+116    	; 0x43d2 <__stack+0x32d3>
    435e:	85 33       	cpi	r24, 0x35	; 53
    4360:	91 05       	cpc	r25, r1
    4362:	8c f4       	brge	.+34     	; 0x4386 <__stack+0x3287>
    4364:	81 33       	cpi	r24, 0x31	; 49
    4366:	91 05       	cpc	r25, r1
    4368:	11 f1       	breq	.+68     	; 0x43ae <__stack+0x32af>
    436a:	82 33       	cpi	r24, 0x32	; 50
    436c:	91 05       	cpc	r25, r1
    436e:	24 f4       	brge	.+8      	; 0x4378 <__stack+0x3279>
    4370:	c0 97       	sbiw	r24, 0x30	; 48
    4372:	09 f0       	breq	.+2      	; 0x4376 <__stack+0x3277>
    4374:	8d c4       	rjmp	.+2330   	; 0x4c90 <__stack+0x3b91>
    4376:	50 c0       	rjmp	.+160    	; 0x4418 <__stack+0x3319>
    4378:	82 33       	cpi	r24, 0x32	; 50
    437a:	91 05       	cpc	r25, r1
    437c:	f1 f0       	breq	.+60     	; 0x43ba <__stack+0x32bb>
    437e:	c3 97       	sbiw	r24, 0x33	; 51
    4380:	09 f0       	breq	.+2      	; 0x4384 <__stack+0x3285>
    4382:	86 c4       	rjmp	.+2316   	; 0x4c90 <__stack+0x3b91>
    4384:	20 c0       	rjmp	.+64     	; 0x43c6 <__stack+0x32c7>
    4386:	87 33       	cpi	r24, 0x37	; 55
    4388:	91 05       	cpc	r25, r1
    438a:	a1 f1       	breq	.+104    	; 0x43f4 <__stack+0x32f5>
    438c:	88 33       	cpi	r24, 0x38	; 56
    438e:	91 05       	cpc	r25, r1
    4390:	3c f4       	brge	.+14     	; 0x43a0 <__stack+0x32a1>
    4392:	85 33       	cpi	r24, 0x35	; 53
    4394:	91 05       	cpc	r25, r1
    4396:	11 f1       	breq	.+68     	; 0x43dc <__stack+0x32dd>
    4398:	c6 97       	sbiw	r24, 0x36	; 54
    439a:	09 f0       	breq	.+2      	; 0x439e <__stack+0x329f>
    439c:	79 c4       	rjmp	.+2290   	; 0x4c90 <__stack+0x3b91>
    439e:	24 c0       	rjmp	.+72     	; 0x43e8 <__stack+0x32e9>
    43a0:	88 33       	cpi	r24, 0x38	; 56
    43a2:	91 05       	cpc	r25, r1
    43a4:	69 f1       	breq	.+90     	; 0x4400 <__stack+0x3301>
    43a6:	c9 97       	sbiw	r24, 0x39	; 57
    43a8:	09 f0       	breq	.+2      	; 0x43ac <__stack+0x32ad>
    43aa:	72 c4       	rjmp	.+2276   	; 0x4c90 <__stack+0x3b91>
    43ac:	2f c0       	rjmp	.+94     	; 0x440c <__stack+0x330d>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    43ae:	8c e0       	ldi	r24, 0x0C	; 12
    43b0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[6] = '1';
    43b4:	81 e3       	ldi	r24, 0x31	; 49
    43b6:	8f a7       	std	Y+47, r24	; 0x2f
    43b8:	6b c4       	rjmp	.+2262   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    43ba:	8c e0       	ldi	r24, 0x0C	; 12
    43bc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[6] = '2';
    43c0:	82 e3       	ldi	r24, 0x32	; 50
    43c2:	8f a7       	std	Y+47, r24	; 0x2f
    43c4:	65 c4       	rjmp	.+2250   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    43c6:	8c e0       	ldi	r24, 0x0C	; 12
    43c8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[6] = '3';
    43cc:	83 e3       	ldi	r24, 0x33	; 51
    43ce:	8f a7       	std	Y+47, r24	; 0x2f
    43d0:	5f c4       	rjmp	.+2238   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    43d2:	8c e0       	ldi	r24, 0x0C	; 12
    43d4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[6] = '4';
    43d8:	8f a6       	std	Y+47, r8	; 0x2f
    43da:	5a c4       	rjmp	.+2228   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    43dc:	8c e0       	ldi	r24, 0x0C	; 12
    43de:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     C_Factor_Buf[6] = '5';
    43e2:	85 e3       	ldi	r24, 0x35	; 53
    43e4:	8f a7       	std	Y+47, r24	; 0x2f
    43e6:	54 c4       	rjmp	.+2216   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    43e8:	8c e0       	ldi	r24, 0x0C	; 12
    43ea:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 C_Factor_Buf[6] = '6';
    43ee:	86 e3       	ldi	r24, 0x36	; 54
    43f0:	8f a7       	std	Y+47, r24	; 0x2f
    43f2:	4e c4       	rjmp	.+2204   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    43f4:	8c e0       	ldi	r24, 0x0C	; 12
    43f6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[6] = '7';
    43fa:	87 e3       	ldi	r24, 0x37	; 55
    43fc:	8f a7       	std	Y+47, r24	; 0x2f
    43fe:	48 c4       	rjmp	.+2192   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    4400:	8c e0       	ldi	r24, 0x0C	; 12
    4402:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[6] = '8';
    4406:	88 e3       	ldi	r24, 0x38	; 56
    4408:	8f a7       	std	Y+47, r24	; 0x2f
    440a:	42 c4       	rjmp	.+2180   	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    440c:	8c e0       	ldi	r24, 0x0C	; 12
    440e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[6] = '9';
    4412:	89 e3       	ldi	r24, 0x39	; 57
    4414:	8f a7       	std	Y+47, r24	; 0x2f
    4416:	3c c4       	rjmp	.+2168   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    4418:	8c e0       	ldi	r24, 0x0C	; 12
    441a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         C_Factor_Buf[6] = '0';
    441e:	80 e3       	ldi	r24, 0x30	; 48
    4420:	8f a7       	std	Y+47, r24	; 0x2f
    4422:	36 c4       	rjmp	.+2156   	; 0x4c90 <__stack+0x3b91>
								         break;
					        } 
		 
						    
					}
					if(ProcessDataPageCursor == 6)
    4424:	3e ad       	ldd	r19, Y+62	; 0x3e
    4426:	36 30       	cpi	r19, 0x06	; 6
    4428:	09 f0       	breq	.+2      	; 0x442c <__stack+0x332d>
    442a:	32 c4       	rjmp	.+2148   	; 0x4c90 <__stack+0x3b91>
					{
						    
						    switch (ProcessDataLineCursor)  // Main Menu Switch statement
    442c:	84 e0       	ldi	r24, 0x04	; 4
    442e:	98 16       	cp	r9, r24
    4430:	09 f4       	brne	.+2      	; 0x4434 <__stack+0x3335>
    4432:	21 c2       	rjmp	.+1090   	; 0x4876 <__stack+0x3777>
    4434:	89 15       	cp	r24, r9
    4436:	60 f0       	brcs	.+24     	; 0x4450 <__stack+0x3351>
    4438:	92 e0       	ldi	r25, 0x02	; 2
    443a:	99 16       	cp	r9, r25
    443c:	09 f4       	brne	.+2      	; 0x4440 <__stack+0x3341>
    443e:	c1 c0       	rjmp	.+386    	; 0x45c2 <__stack+0x34c3>
    4440:	99 15       	cp	r25, r9
    4442:	08 f4       	brcc	.+2      	; 0x4446 <__stack+0x3347>
    4444:	6b c1       	rjmp	.+726    	; 0x471c <__stack+0x361d>
    4446:	a1 e0       	ldi	r26, 0x01	; 1
    4448:	9a 16       	cp	r9, r26
    444a:	09 f0       	breq	.+2      	; 0x444e <__stack+0x334f>
    444c:	21 c4       	rjmp	.+2114   	; 0x4c90 <__stack+0x3b91>
    444e:	0c c0       	rjmp	.+24     	; 0x4468 <__stack+0x3369>
    4450:	b6 e0       	ldi	r27, 0x06	; 6
    4452:	9b 16       	cp	r9, r27
    4454:	09 f4       	brne	.+2      	; 0x4458 <__stack+0x3359>
    4456:	c4 c2       	rjmp	.+1416   	; 0x49e0 <__stack+0x38e1>
    4458:	9b 16       	cp	r9, r27
    445a:	08 f4       	brcc	.+2      	; 0x445e <__stack+0x335f>
    445c:	14 c2       	rjmp	.+1064   	; 0x4886 <__stack+0x3787>
    445e:	27 e0       	ldi	r18, 0x07	; 7
    4460:	92 16       	cp	r9, r18
    4462:	09 f0       	breq	.+2      	; 0x4466 <__stack+0x3367>
    4464:	15 c4       	rjmp	.+2090   	; 0x4c90 <__stack+0x3b91>
    4466:	69 c3       	rjmp	.+1746   	; 0x4b3a <__stack+0x3a3b>
						    {
								case 1:  Speed = atof(Speed_Buf);	 
    4468:	c3 01       	movw	r24, r6
    446a:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    446e:	60 93 7e 02 	sts	0x027E, r22
    4472:	70 93 7f 02 	sts	0x027F, r23
    4476:	80 93 80 02 	sts	0x0280, r24
    447a:	90 93 81 02 	sts	0x0281, r25
										 lcd_gotoxy(8,3);
    447e:	88 e0       	ldi	r24, 0x08	; 8
    4480:	63 e0       	ldi	r22, 0x03	; 3
    4482:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(Speed_Buf,"%07.3f", Speed);
    4486:	40 91 7e 02 	lds	r20, 0x027E
    448a:	50 91 7f 02 	lds	r21, 0x027F
    448e:	60 91 80 02 	lds	r22, 0x0280
    4492:	70 91 81 02 	lds	r23, 0x0281
    4496:	8d b7       	in	r24, 0x3d	; 61
    4498:	9e b7       	in	r25, 0x3e	; 62
    449a:	08 97       	sbiw	r24, 0x08	; 8
    449c:	0f b6       	in	r0, 0x3f	; 63
    449e:	f8 94       	cli
    44a0:	9e bf       	out	0x3e, r25	; 62
    44a2:	0f be       	out	0x3f, r0	; 63
    44a4:	8d bf       	out	0x3d, r24	; 61
    44a6:	ed b7       	in	r30, 0x3d	; 61
    44a8:	fe b7       	in	r31, 0x3e	; 62
    44aa:	31 96       	adiw	r30, 0x01	; 1
    44ac:	ad b7       	in	r26, 0x3d	; 61
    44ae:	be b7       	in	r27, 0x3e	; 62
    44b0:	12 96       	adiw	r26, 0x02	; 2
    44b2:	7c 92       	st	X, r7
    44b4:	6e 92       	st	-X, r6
    44b6:	11 97       	sbiw	r26, 0x01	; 1
    44b8:	e2 82       	std	Z+2, r14	; 0x02
    44ba:	f3 82       	std	Z+3, r15	; 0x03
    44bc:	44 83       	std	Z+4, r20	; 0x04
    44be:	55 83       	std	Z+5, r21	; 0x05
    44c0:	66 83       	std	Z+6, r22	; 0x06
    44c2:	77 83       	std	Z+7, r23	; 0x07
    44c4:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(Speed_Buf);
    44c8:	2d b7       	in	r18, 0x3d	; 61
    44ca:	3e b7       	in	r19, 0x3e	; 62
    44cc:	28 5f       	subi	r18, 0xF8	; 248
    44ce:	3f 4f       	sbci	r19, 0xFF	; 255
    44d0:	0f b6       	in	r0, 0x3f	; 63
    44d2:	f8 94       	cli
    44d4:	3e bf       	out	0x3e, r19	; 62
    44d6:	0f be       	out	0x3f, r0	; 63
    44d8:	2d bf       	out	0x3d, r18	; 61
    44da:	c3 01       	movw	r24, r6
    44dc:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(8,3);
    44e0:	88 e0       	ldi	r24, 0x08	; 8
    44e2:	63 e0       	ldi	r22, 0x03	; 3
    44e4:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    44e8:	8f e0       	ldi	r24, 0x0F	; 15
    44ea:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										  switch (key)  // Main Menu Switch statement
    44ee:	80 91 68 03 	lds	r24, 0x0368
    44f2:	90 91 69 03 	lds	r25, 0x0369
    44f6:	84 33       	cpi	r24, 0x34	; 52
    44f8:	91 05       	cpc	r25, r1
    44fa:	d1 f1       	breq	.+116    	; 0x4570 <__stack+0x3471>
    44fc:	85 33       	cpi	r24, 0x35	; 53
    44fe:	91 05       	cpc	r25, r1
    4500:	8c f4       	brge	.+34     	; 0x4524 <__stack+0x3425>
    4502:	81 33       	cpi	r24, 0x31	; 49
    4504:	91 05       	cpc	r25, r1
    4506:	11 f1       	breq	.+68     	; 0x454c <__stack+0x344d>
    4508:	82 33       	cpi	r24, 0x32	; 50
    450a:	91 05       	cpc	r25, r1
    450c:	24 f4       	brge	.+8      	; 0x4516 <__stack+0x3417>
    450e:	c0 97       	sbiw	r24, 0x30	; 48
    4510:	09 f0       	breq	.+2      	; 0x4514 <__stack+0x3415>
    4512:	be c3       	rjmp	.+1916   	; 0x4c90 <__stack+0x3b91>
    4514:	50 c0       	rjmp	.+160    	; 0x45b6 <__stack+0x34b7>
    4516:	82 33       	cpi	r24, 0x32	; 50
    4518:	91 05       	cpc	r25, r1
    451a:	f1 f0       	breq	.+60     	; 0x4558 <__stack+0x3459>
    451c:	c3 97       	sbiw	r24, 0x33	; 51
    451e:	09 f0       	breq	.+2      	; 0x4522 <__stack+0x3423>
    4520:	b7 c3       	rjmp	.+1902   	; 0x4c90 <__stack+0x3b91>
    4522:	20 c0       	rjmp	.+64     	; 0x4564 <__stack+0x3465>
    4524:	87 33       	cpi	r24, 0x37	; 55
    4526:	91 05       	cpc	r25, r1
    4528:	a1 f1       	breq	.+104    	; 0x4592 <__stack+0x3493>
    452a:	88 33       	cpi	r24, 0x38	; 56
    452c:	91 05       	cpc	r25, r1
    452e:	3c f4       	brge	.+14     	; 0x453e <__stack+0x343f>
    4530:	85 33       	cpi	r24, 0x35	; 53
    4532:	91 05       	cpc	r25, r1
    4534:	11 f1       	breq	.+68     	; 0x457a <__stack+0x347b>
    4536:	c6 97       	sbiw	r24, 0x36	; 54
    4538:	09 f0       	breq	.+2      	; 0x453c <__stack+0x343d>
    453a:	aa c3       	rjmp	.+1876   	; 0x4c90 <__stack+0x3b91>
    453c:	24 c0       	rjmp	.+72     	; 0x4586 <__stack+0x3487>
    453e:	88 33       	cpi	r24, 0x38	; 56
    4540:	91 05       	cpc	r25, r1
    4542:	69 f1       	breq	.+90     	; 0x459e <__stack+0x349f>
    4544:	c9 97       	sbiw	r24, 0x39	; 57
    4546:	09 f0       	breq	.+2      	; 0x454a <__stack+0x344b>
    4548:	a3 c3       	rjmp	.+1862   	; 0x4c90 <__stack+0x3b91>
    454a:	2f c0       	rjmp	.+94     	; 0x45aa <__stack+0x34ab>
										    {
											 
												case '1':lcd_command(LCD_DISP_ON);
    454c:	8c e0       	ldi	r24, 0x0C	; 12
    454e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[0] = '1';
    4552:	81 e3       	ldi	r24, 0x31	; 49
    4554:	8b ab       	std	Y+51, r24	; 0x33
    4556:	9c c3       	rjmp	.+1848   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    4558:	8c e0       	ldi	r24, 0x0C	; 12
    455a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[0] = '2';
    455e:	82 e3       	ldi	r24, 0x32	; 50
    4560:	8b ab       	std	Y+51, r24	; 0x33
    4562:	96 c3       	rjmp	.+1836   	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    4564:	8c e0       	ldi	r24, 0x0C	; 12
    4566:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[0] = '3';
    456a:	83 e3       	ldi	r24, 0x33	; 51
    456c:	8b ab       	std	Y+51, r24	; 0x33
    456e:	90 c3       	rjmp	.+1824   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    4570:	8c e0       	ldi	r24, 0x0C	; 12
    4572:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[0] = '4';
    4576:	8b aa       	std	Y+51, r8	; 0x33
    4578:	8b c3       	rjmp	.+1814   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    457a:	8c e0       	ldi	r24, 0x0C	; 12
    457c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     Speed_Buf[0] = '5';
    4580:	85 e3       	ldi	r24, 0x35	; 53
    4582:	8b ab       	std	Y+51, r24	; 0x33
    4584:	85 c3       	rjmp	.+1802   	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    4586:	8c e0       	ldi	r24, 0x0C	; 12
    4588:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[0] = '6';
    458c:	86 e3       	ldi	r24, 0x36	; 54
    458e:	8b ab       	std	Y+51, r24	; 0x33
    4590:	7f c3       	rjmp	.+1790   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    4592:	8c e0       	ldi	r24, 0x0C	; 12
    4594:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[0] = '7';
    4598:	87 e3       	ldi	r24, 0x37	; 55
    459a:	8b ab       	std	Y+51, r24	; 0x33
    459c:	79 c3       	rjmp	.+1778   	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    459e:	8c e0       	ldi	r24, 0x0C	; 12
    45a0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[0] = '8';
    45a4:	88 e3       	ldi	r24, 0x38	; 56
    45a6:	8b ab       	std	Y+51, r24	; 0x33
    45a8:	73 c3       	rjmp	.+1766   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    45aa:	8c e0       	ldi	r24, 0x0C	; 12
    45ac:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[0] = '9';
    45b0:	89 e3       	ldi	r24, 0x39	; 57
    45b2:	8b ab       	std	Y+51, r24	; 0x33
    45b4:	6d c3       	rjmp	.+1754   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    45b6:	8c e0       	ldi	r24, 0x0C	; 12
    45b8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[0] = '0';
    45bc:	80 e3       	ldi	r24, 0x30	; 48
    45be:	8b ab       	std	Y+51, r24	; 0x33
    45c0:	67 c3       	rjmp	.+1742   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
											 }									
								         break;
								case 2:  Speed = atof(Speed_Buf);	 
    45c2:	c3 01       	movw	r24, r6
    45c4:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    45c8:	60 93 7e 02 	sts	0x027E, r22
    45cc:	70 93 7f 02 	sts	0x027F, r23
    45d0:	80 93 80 02 	sts	0x0280, r24
    45d4:	90 93 81 02 	sts	0x0281, r25
										 lcd_gotoxy(8,3);
    45d8:	88 e0       	ldi	r24, 0x08	; 8
    45da:	63 e0       	ldi	r22, 0x03	; 3
    45dc:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(Speed_Buf,"%07.3f", Speed);
    45e0:	40 91 7e 02 	lds	r20, 0x027E
    45e4:	50 91 7f 02 	lds	r21, 0x027F
    45e8:	60 91 80 02 	lds	r22, 0x0280
    45ec:	70 91 81 02 	lds	r23, 0x0281
    45f0:	8d b7       	in	r24, 0x3d	; 61
    45f2:	9e b7       	in	r25, 0x3e	; 62
    45f4:	08 97       	sbiw	r24, 0x08	; 8
    45f6:	0f b6       	in	r0, 0x3f	; 63
    45f8:	f8 94       	cli
    45fa:	9e bf       	out	0x3e, r25	; 62
    45fc:	0f be       	out	0x3f, r0	; 63
    45fe:	8d bf       	out	0x3d, r24	; 61
    4600:	ed b7       	in	r30, 0x3d	; 61
    4602:	fe b7       	in	r31, 0x3e	; 62
    4604:	31 96       	adiw	r30, 0x01	; 1
    4606:	ad b7       	in	r26, 0x3d	; 61
    4608:	be b7       	in	r27, 0x3e	; 62
    460a:	12 96       	adiw	r26, 0x02	; 2
    460c:	7c 92       	st	X, r7
    460e:	6e 92       	st	-X, r6
    4610:	11 97       	sbiw	r26, 0x01	; 1
    4612:	e2 82       	std	Z+2, r14	; 0x02
    4614:	f3 82       	std	Z+3, r15	; 0x03
    4616:	44 83       	std	Z+4, r20	; 0x04
    4618:	55 83       	std	Z+5, r21	; 0x05
    461a:	66 83       	std	Z+6, r22	; 0x06
    461c:	77 83       	std	Z+7, r23	; 0x07
    461e:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(Speed_Buf);
    4622:	2d b7       	in	r18, 0x3d	; 61
    4624:	3e b7       	in	r19, 0x3e	; 62
    4626:	28 5f       	subi	r18, 0xF8	; 248
    4628:	3f 4f       	sbci	r19, 0xFF	; 255
    462a:	0f b6       	in	r0, 0x3f	; 63
    462c:	f8 94       	cli
    462e:	3e bf       	out	0x3e, r19	; 62
    4630:	0f be       	out	0x3f, r0	; 63
    4632:	2d bf       	out	0x3d, r18	; 61
    4634:	c3 01       	movw	r24, r6
    4636:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(9,3);
    463a:	89 e0       	ldi	r24, 0x09	; 9
    463c:	63 e0       	ldi	r22, 0x03	; 3
    463e:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    4642:	8f e0       	ldi	r24, 0x0F	; 15
    4644:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    4648:	80 91 68 03 	lds	r24, 0x0368
    464c:	90 91 69 03 	lds	r25, 0x0369
    4650:	84 33       	cpi	r24, 0x34	; 52
    4652:	91 05       	cpc	r25, r1
    4654:	d1 f1       	breq	.+116    	; 0x46ca <__stack+0x35cb>
    4656:	85 33       	cpi	r24, 0x35	; 53
    4658:	91 05       	cpc	r25, r1
    465a:	8c f4       	brge	.+34     	; 0x467e <__stack+0x357f>
    465c:	81 33       	cpi	r24, 0x31	; 49
    465e:	91 05       	cpc	r25, r1
    4660:	11 f1       	breq	.+68     	; 0x46a6 <__stack+0x35a7>
    4662:	82 33       	cpi	r24, 0x32	; 50
    4664:	91 05       	cpc	r25, r1
    4666:	24 f4       	brge	.+8      	; 0x4670 <__stack+0x3571>
    4668:	c0 97       	sbiw	r24, 0x30	; 48
    466a:	09 f0       	breq	.+2      	; 0x466e <__stack+0x356f>
    466c:	11 c3       	rjmp	.+1570   	; 0x4c90 <__stack+0x3b91>
    466e:	50 c0       	rjmp	.+160    	; 0x4710 <__stack+0x3611>
    4670:	82 33       	cpi	r24, 0x32	; 50
    4672:	91 05       	cpc	r25, r1
    4674:	f1 f0       	breq	.+60     	; 0x46b2 <__stack+0x35b3>
    4676:	c3 97       	sbiw	r24, 0x33	; 51
    4678:	09 f0       	breq	.+2      	; 0x467c <__stack+0x357d>
    467a:	0a c3       	rjmp	.+1556   	; 0x4c90 <__stack+0x3b91>
    467c:	20 c0       	rjmp	.+64     	; 0x46be <__stack+0x35bf>
    467e:	87 33       	cpi	r24, 0x37	; 55
    4680:	91 05       	cpc	r25, r1
    4682:	a1 f1       	breq	.+104    	; 0x46ec <__stack+0x35ed>
    4684:	88 33       	cpi	r24, 0x38	; 56
    4686:	91 05       	cpc	r25, r1
    4688:	3c f4       	brge	.+14     	; 0x4698 <__stack+0x3599>
    468a:	85 33       	cpi	r24, 0x35	; 53
    468c:	91 05       	cpc	r25, r1
    468e:	11 f1       	breq	.+68     	; 0x46d4 <__stack+0x35d5>
    4690:	c6 97       	sbiw	r24, 0x36	; 54
    4692:	09 f0       	breq	.+2      	; 0x4696 <__stack+0x3597>
    4694:	fd c2       	rjmp	.+1530   	; 0x4c90 <__stack+0x3b91>
    4696:	24 c0       	rjmp	.+72     	; 0x46e0 <__stack+0x35e1>
    4698:	88 33       	cpi	r24, 0x38	; 56
    469a:	91 05       	cpc	r25, r1
    469c:	69 f1       	breq	.+90     	; 0x46f8 <__stack+0x35f9>
    469e:	c9 97       	sbiw	r24, 0x39	; 57
    46a0:	09 f0       	breq	.+2      	; 0x46a4 <__stack+0x35a5>
    46a2:	f6 c2       	rjmp	.+1516   	; 0x4c90 <__stack+0x3b91>
    46a4:	2f c0       	rjmp	.+94     	; 0x4704 <__stack+0x3605>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    46a6:	8c e0       	ldi	r24, 0x0C	; 12
    46a8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[1] = '1';
    46ac:	81 e3       	ldi	r24, 0x31	; 49
    46ae:	8c ab       	std	Y+52, r24	; 0x34
    46b0:	ef c2       	rjmp	.+1502   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    46b2:	8c e0       	ldi	r24, 0x0C	; 12
    46b4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[1] = '2';
    46b8:	82 e3       	ldi	r24, 0x32	; 50
    46ba:	8c ab       	std	Y+52, r24	; 0x34
    46bc:	e9 c2       	rjmp	.+1490   	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    46be:	8c e0       	ldi	r24, 0x0C	; 12
    46c0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[1] = '3';
    46c4:	83 e3       	ldi	r24, 0x33	; 51
    46c6:	8c ab       	std	Y+52, r24	; 0x34
    46c8:	e3 c2       	rjmp	.+1478   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    46ca:	8c e0       	ldi	r24, 0x0C	; 12
    46cc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[1] = '4';
    46d0:	8c aa       	std	Y+52, r8	; 0x34
    46d2:	de c2       	rjmp	.+1468   	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    46d4:	8c e0       	ldi	r24, 0x0C	; 12
    46d6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     Speed_Buf[1] = '5';
    46da:	85 e3       	ldi	r24, 0x35	; 53
    46dc:	8c ab       	std	Y+52, r24	; 0x34
    46de:	d8 c2       	rjmp	.+1456   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    46e0:	8c e0       	ldi	r24, 0x0C	; 12
    46e2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[1] = '6';
    46e6:	86 e3       	ldi	r24, 0x36	; 54
    46e8:	8c ab       	std	Y+52, r24	; 0x34
    46ea:	d2 c2       	rjmp	.+1444   	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    46ec:	8c e0       	ldi	r24, 0x0C	; 12
    46ee:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[1] = '7';
    46f2:	87 e3       	ldi	r24, 0x37	; 55
    46f4:	8c ab       	std	Y+52, r24	; 0x34
    46f6:	cc c2       	rjmp	.+1432   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    46f8:	8c e0       	ldi	r24, 0x0C	; 12
    46fa:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[1] = '8';
    46fe:	88 e3       	ldi	r24, 0x38	; 56
    4700:	8c ab       	std	Y+52, r24	; 0x34
    4702:	c6 c2       	rjmp	.+1420   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    4704:	8c e0       	ldi	r24, 0x0C	; 12
    4706:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[1] = '9';
    470a:	89 e3       	ldi	r24, 0x39	; 57
    470c:	8c ab       	std	Y+52, r24	; 0x34
    470e:	c0 c2       	rjmp	.+1408   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    4710:	8c e0       	ldi	r24, 0x0C	; 12
    4712:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[1] = '0';
    4716:	80 e3       	ldi	r24, 0x30	; 48
    4718:	8c ab       	std	Y+52, r24	; 0x34
    471a:	ba c2       	rjmp	.+1396   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 3:  Speed = atof(Speed_Buf);	 
    471c:	c3 01       	movw	r24, r6
    471e:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    4722:	60 93 7e 02 	sts	0x027E, r22
    4726:	70 93 7f 02 	sts	0x027F, r23
    472a:	80 93 80 02 	sts	0x0280, r24
    472e:	90 93 81 02 	sts	0x0281, r25
										 lcd_gotoxy(8,3);
    4732:	88 e0       	ldi	r24, 0x08	; 8
    4734:	63 e0       	ldi	r22, 0x03	; 3
    4736:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(Speed_Buf,"%07.3f", Speed);
    473a:	40 91 7e 02 	lds	r20, 0x027E
    473e:	50 91 7f 02 	lds	r21, 0x027F
    4742:	60 91 80 02 	lds	r22, 0x0280
    4746:	70 91 81 02 	lds	r23, 0x0281
    474a:	8d b7       	in	r24, 0x3d	; 61
    474c:	9e b7       	in	r25, 0x3e	; 62
    474e:	08 97       	sbiw	r24, 0x08	; 8
    4750:	0f b6       	in	r0, 0x3f	; 63
    4752:	f8 94       	cli
    4754:	9e bf       	out	0x3e, r25	; 62
    4756:	0f be       	out	0x3f, r0	; 63
    4758:	8d bf       	out	0x3d, r24	; 61
    475a:	ed b7       	in	r30, 0x3d	; 61
    475c:	fe b7       	in	r31, 0x3e	; 62
    475e:	31 96       	adiw	r30, 0x01	; 1
    4760:	ad b7       	in	r26, 0x3d	; 61
    4762:	be b7       	in	r27, 0x3e	; 62
    4764:	12 96       	adiw	r26, 0x02	; 2
    4766:	7c 92       	st	X, r7
    4768:	6e 92       	st	-X, r6
    476a:	11 97       	sbiw	r26, 0x01	; 1
    476c:	e2 82       	std	Z+2, r14	; 0x02
    476e:	f3 82       	std	Z+3, r15	; 0x03
    4770:	44 83       	std	Z+4, r20	; 0x04
    4772:	55 83       	std	Z+5, r21	; 0x05
    4774:	66 83       	std	Z+6, r22	; 0x06
    4776:	77 83       	std	Z+7, r23	; 0x07
    4778:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(Speed_Buf);
    477c:	2d b7       	in	r18, 0x3d	; 61
    477e:	3e b7       	in	r19, 0x3e	; 62
    4780:	28 5f       	subi	r18, 0xF8	; 248
    4782:	3f 4f       	sbci	r19, 0xFF	; 255
    4784:	0f b6       	in	r0, 0x3f	; 63
    4786:	f8 94       	cli
    4788:	3e bf       	out	0x3e, r19	; 62
    478a:	0f be       	out	0x3f, r0	; 63
    478c:	2d bf       	out	0x3d, r18	; 61
    478e:	c3 01       	movw	r24, r6
    4790:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(10,3);
    4794:	8a e0       	ldi	r24, 0x0A	; 10
    4796:	63 e0       	ldi	r22, 0x03	; 3
    4798:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    479c:	8f e0       	ldi	r24, 0x0F	; 15
    479e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    47a2:	80 91 68 03 	lds	r24, 0x0368
    47a6:	90 91 69 03 	lds	r25, 0x0369
    47aa:	84 33       	cpi	r24, 0x34	; 52
    47ac:	91 05       	cpc	r25, r1
    47ae:	d1 f1       	breq	.+116    	; 0x4824 <__stack+0x3725>
    47b0:	85 33       	cpi	r24, 0x35	; 53
    47b2:	91 05       	cpc	r25, r1
    47b4:	8c f4       	brge	.+34     	; 0x47d8 <__stack+0x36d9>
    47b6:	81 33       	cpi	r24, 0x31	; 49
    47b8:	91 05       	cpc	r25, r1
    47ba:	11 f1       	breq	.+68     	; 0x4800 <__stack+0x3701>
    47bc:	82 33       	cpi	r24, 0x32	; 50
    47be:	91 05       	cpc	r25, r1
    47c0:	24 f4       	brge	.+8      	; 0x47ca <__stack+0x36cb>
    47c2:	c0 97       	sbiw	r24, 0x30	; 48
    47c4:	09 f0       	breq	.+2      	; 0x47c8 <__stack+0x36c9>
    47c6:	64 c2       	rjmp	.+1224   	; 0x4c90 <__stack+0x3b91>
    47c8:	50 c0       	rjmp	.+160    	; 0x486a <__stack+0x376b>
    47ca:	82 33       	cpi	r24, 0x32	; 50
    47cc:	91 05       	cpc	r25, r1
    47ce:	f1 f0       	breq	.+60     	; 0x480c <__stack+0x370d>
    47d0:	c3 97       	sbiw	r24, 0x33	; 51
    47d2:	09 f0       	breq	.+2      	; 0x47d6 <__stack+0x36d7>
    47d4:	5d c2       	rjmp	.+1210   	; 0x4c90 <__stack+0x3b91>
    47d6:	20 c0       	rjmp	.+64     	; 0x4818 <__stack+0x3719>
    47d8:	87 33       	cpi	r24, 0x37	; 55
    47da:	91 05       	cpc	r25, r1
    47dc:	a1 f1       	breq	.+104    	; 0x4846 <__stack+0x3747>
    47de:	88 33       	cpi	r24, 0x38	; 56
    47e0:	91 05       	cpc	r25, r1
    47e2:	3c f4       	brge	.+14     	; 0x47f2 <__stack+0x36f3>
    47e4:	85 33       	cpi	r24, 0x35	; 53
    47e6:	91 05       	cpc	r25, r1
    47e8:	11 f1       	breq	.+68     	; 0x482e <__stack+0x372f>
    47ea:	c6 97       	sbiw	r24, 0x36	; 54
    47ec:	09 f0       	breq	.+2      	; 0x47f0 <__stack+0x36f1>
    47ee:	50 c2       	rjmp	.+1184   	; 0x4c90 <__stack+0x3b91>
    47f0:	24 c0       	rjmp	.+72     	; 0x483a <__stack+0x373b>
    47f2:	88 33       	cpi	r24, 0x38	; 56
    47f4:	91 05       	cpc	r25, r1
    47f6:	69 f1       	breq	.+90     	; 0x4852 <__stack+0x3753>
    47f8:	c9 97       	sbiw	r24, 0x39	; 57
    47fa:	09 f0       	breq	.+2      	; 0x47fe <__stack+0x36ff>
    47fc:	49 c2       	rjmp	.+1170   	; 0x4c90 <__stack+0x3b91>
    47fe:	2f c0       	rjmp	.+94     	; 0x485e <__stack+0x375f>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    4800:	8c e0       	ldi	r24, 0x0C	; 12
    4802:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[2] = '1';
    4806:	81 e3       	ldi	r24, 0x31	; 49
    4808:	8d ab       	std	Y+53, r24	; 0x35
    480a:	42 c2       	rjmp	.+1156   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    480c:	8c e0       	ldi	r24, 0x0C	; 12
    480e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[2] = '2';
    4812:	82 e3       	ldi	r24, 0x32	; 50
    4814:	8d ab       	std	Y+53, r24	; 0x35
    4816:	3c c2       	rjmp	.+1144   	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    4818:	8c e0       	ldi	r24, 0x0C	; 12
    481a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[2] = '3';
    481e:	83 e3       	ldi	r24, 0x33	; 51
    4820:	8d ab       	std	Y+53, r24	; 0x35
    4822:	36 c2       	rjmp	.+1132   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    4824:	8c e0       	ldi	r24, 0x0C	; 12
    4826:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[2] = '4';
    482a:	8d aa       	std	Y+53, r8	; 0x35
    482c:	31 c2       	rjmp	.+1122   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    482e:	8c e0       	ldi	r24, 0x0C	; 12
    4830:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     Speed_Buf[2] = '5';
    4834:	85 e3       	ldi	r24, 0x35	; 53
    4836:	8d ab       	std	Y+53, r24	; 0x35
    4838:	2b c2       	rjmp	.+1110   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    483a:	8c e0       	ldi	r24, 0x0C	; 12
    483c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[2] = '6';
    4840:	86 e3       	ldi	r24, 0x36	; 54
    4842:	8d ab       	std	Y+53, r24	; 0x35
    4844:	25 c2       	rjmp	.+1098   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    4846:	8c e0       	ldi	r24, 0x0C	; 12
    4848:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[2] = '7';
    484c:	87 e3       	ldi	r24, 0x37	; 55
    484e:	8d ab       	std	Y+53, r24	; 0x35
    4850:	1f c2       	rjmp	.+1086   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    4852:	8c e0       	ldi	r24, 0x0C	; 12
    4854:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[2] = '8';
    4858:	88 e3       	ldi	r24, 0x38	; 56
    485a:	8d ab       	std	Y+53, r24	; 0x35
    485c:	19 c2       	rjmp	.+1074   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    485e:	8c e0       	ldi	r24, 0x0C	; 12
    4860:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[2] = '9';
    4864:	89 e3       	ldi	r24, 0x39	; 57
    4866:	8d ab       	std	Y+53, r24	; 0x35
    4868:	13 c2       	rjmp	.+1062   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    486a:	8c e0       	ldi	r24, 0x0C	; 12
    486c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[2] = '0';
    4870:	80 e3       	ldi	r24, 0x30	; 48
    4872:	8d ab       	std	Y+53, r24	; 0x35
    4874:	0d c2       	rjmp	.+1050   	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 4:  lcd_gotoxy(11,3);
    4876:	8b e0       	ldi	r24, 0x0B	; 11
    4878:	63 e0       	ldi	r22, 0x03	; 3
    487a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    487e:	8f e0       	ldi	r24, 0x0F	; 15
    4880:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
    4884:	05 c2       	rjmp	.+1034   	; 0x4c90 <__stack+0x3b91>
								         break;
								case 5:  Speed = atof(Speed_Buf);	 
    4886:	c3 01       	movw	r24, r6
    4888:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    488c:	60 93 7e 02 	sts	0x027E, r22
    4890:	70 93 7f 02 	sts	0x027F, r23
    4894:	80 93 80 02 	sts	0x0280, r24
    4898:	90 93 81 02 	sts	0x0281, r25
										 lcd_gotoxy(8,3);
    489c:	88 e0       	ldi	r24, 0x08	; 8
    489e:	63 e0       	ldi	r22, 0x03	; 3
    48a0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(Speed_Buf,"%07.3f", Speed);
    48a4:	40 91 7e 02 	lds	r20, 0x027E
    48a8:	50 91 7f 02 	lds	r21, 0x027F
    48ac:	60 91 80 02 	lds	r22, 0x0280
    48b0:	70 91 81 02 	lds	r23, 0x0281
    48b4:	8d b7       	in	r24, 0x3d	; 61
    48b6:	9e b7       	in	r25, 0x3e	; 62
    48b8:	08 97       	sbiw	r24, 0x08	; 8
    48ba:	0f b6       	in	r0, 0x3f	; 63
    48bc:	f8 94       	cli
    48be:	9e bf       	out	0x3e, r25	; 62
    48c0:	0f be       	out	0x3f, r0	; 63
    48c2:	8d bf       	out	0x3d, r24	; 61
    48c4:	ed b7       	in	r30, 0x3d	; 61
    48c6:	fe b7       	in	r31, 0x3e	; 62
    48c8:	31 96       	adiw	r30, 0x01	; 1
    48ca:	ad b7       	in	r26, 0x3d	; 61
    48cc:	be b7       	in	r27, 0x3e	; 62
    48ce:	12 96       	adiw	r26, 0x02	; 2
    48d0:	7c 92       	st	X, r7
    48d2:	6e 92       	st	-X, r6
    48d4:	11 97       	sbiw	r26, 0x01	; 1
    48d6:	e2 82       	std	Z+2, r14	; 0x02
    48d8:	f3 82       	std	Z+3, r15	; 0x03
    48da:	44 83       	std	Z+4, r20	; 0x04
    48dc:	55 83       	std	Z+5, r21	; 0x05
    48de:	66 83       	std	Z+6, r22	; 0x06
    48e0:	77 83       	std	Z+7, r23	; 0x07
    48e2:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(Speed_Buf);
    48e6:	2d b7       	in	r18, 0x3d	; 61
    48e8:	3e b7       	in	r19, 0x3e	; 62
    48ea:	28 5f       	subi	r18, 0xF8	; 248
    48ec:	3f 4f       	sbci	r19, 0xFF	; 255
    48ee:	0f b6       	in	r0, 0x3f	; 63
    48f0:	f8 94       	cli
    48f2:	3e bf       	out	0x3e, r19	; 62
    48f4:	0f be       	out	0x3f, r0	; 63
    48f6:	2d bf       	out	0x3d, r18	; 61
    48f8:	c3 01       	movw	r24, r6
    48fa:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(12,3);
    48fe:	8c e0       	ldi	r24, 0x0C	; 12
    4900:	63 e0       	ldi	r22, 0x03	; 3
    4902:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    4906:	8f e0       	ldi	r24, 0x0F	; 15
    4908:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    490c:	80 91 68 03 	lds	r24, 0x0368
    4910:	90 91 69 03 	lds	r25, 0x0369
    4914:	84 33       	cpi	r24, 0x34	; 52
    4916:	91 05       	cpc	r25, r1
    4918:	d1 f1       	breq	.+116    	; 0x498e <__stack+0x388f>
    491a:	85 33       	cpi	r24, 0x35	; 53
    491c:	91 05       	cpc	r25, r1
    491e:	8c f4       	brge	.+34     	; 0x4942 <__stack+0x3843>
    4920:	81 33       	cpi	r24, 0x31	; 49
    4922:	91 05       	cpc	r25, r1
    4924:	11 f1       	breq	.+68     	; 0x496a <__stack+0x386b>
    4926:	82 33       	cpi	r24, 0x32	; 50
    4928:	91 05       	cpc	r25, r1
    492a:	24 f4       	brge	.+8      	; 0x4934 <__stack+0x3835>
    492c:	c0 97       	sbiw	r24, 0x30	; 48
    492e:	09 f0       	breq	.+2      	; 0x4932 <__stack+0x3833>
    4930:	af c1       	rjmp	.+862    	; 0x4c90 <__stack+0x3b91>
    4932:	50 c0       	rjmp	.+160    	; 0x49d4 <__stack+0x38d5>
    4934:	82 33       	cpi	r24, 0x32	; 50
    4936:	91 05       	cpc	r25, r1
    4938:	f1 f0       	breq	.+60     	; 0x4976 <__stack+0x3877>
    493a:	c3 97       	sbiw	r24, 0x33	; 51
    493c:	09 f0       	breq	.+2      	; 0x4940 <__stack+0x3841>
    493e:	a8 c1       	rjmp	.+848    	; 0x4c90 <__stack+0x3b91>
    4940:	20 c0       	rjmp	.+64     	; 0x4982 <__stack+0x3883>
    4942:	87 33       	cpi	r24, 0x37	; 55
    4944:	91 05       	cpc	r25, r1
    4946:	a1 f1       	breq	.+104    	; 0x49b0 <__stack+0x38b1>
    4948:	88 33       	cpi	r24, 0x38	; 56
    494a:	91 05       	cpc	r25, r1
    494c:	3c f4       	brge	.+14     	; 0x495c <__stack+0x385d>
    494e:	85 33       	cpi	r24, 0x35	; 53
    4950:	91 05       	cpc	r25, r1
    4952:	11 f1       	breq	.+68     	; 0x4998 <__stack+0x3899>
    4954:	c6 97       	sbiw	r24, 0x36	; 54
    4956:	09 f0       	breq	.+2      	; 0x495a <__stack+0x385b>
    4958:	9b c1       	rjmp	.+822    	; 0x4c90 <__stack+0x3b91>
    495a:	24 c0       	rjmp	.+72     	; 0x49a4 <__stack+0x38a5>
    495c:	88 33       	cpi	r24, 0x38	; 56
    495e:	91 05       	cpc	r25, r1
    4960:	69 f1       	breq	.+90     	; 0x49bc <__stack+0x38bd>
    4962:	c9 97       	sbiw	r24, 0x39	; 57
    4964:	09 f0       	breq	.+2      	; 0x4968 <__stack+0x3869>
    4966:	94 c1       	rjmp	.+808    	; 0x4c90 <__stack+0x3b91>
    4968:	2f c0       	rjmp	.+94     	; 0x49c8 <__stack+0x38c9>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    496a:	8c e0       	ldi	r24, 0x0C	; 12
    496c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[4] = '1';
    4970:	81 e3       	ldi	r24, 0x31	; 49
    4972:	8f ab       	std	Y+55, r24	; 0x37
    4974:	8d c1       	rjmp	.+794    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    4976:	8c e0       	ldi	r24, 0x0C	; 12
    4978:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[4] = '2';
    497c:	82 e3       	ldi	r24, 0x32	; 50
    497e:	8f ab       	std	Y+55, r24	; 0x37
    4980:	87 c1       	rjmp	.+782    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    4982:	8c e0       	ldi	r24, 0x0C	; 12
    4984:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[4] = '3';
    4988:	83 e3       	ldi	r24, 0x33	; 51
    498a:	8f ab       	std	Y+55, r24	; 0x37
    498c:	81 c1       	rjmp	.+770    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    498e:	8c e0       	ldi	r24, 0x0C	; 12
    4990:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[4] = '4';
    4994:	8f aa       	std	Y+55, r8	; 0x37
    4996:	7c c1       	rjmp	.+760    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    4998:	8c e0       	ldi	r24, 0x0C	; 12
    499a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     Speed_Buf[4] = '5';
    499e:	85 e3       	ldi	r24, 0x35	; 53
    49a0:	8f ab       	std	Y+55, r24	; 0x37
    49a2:	76 c1       	rjmp	.+748    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    49a4:	8c e0       	ldi	r24, 0x0C	; 12
    49a6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[4] = '6';
    49aa:	86 e3       	ldi	r24, 0x36	; 54
    49ac:	8f ab       	std	Y+55, r24	; 0x37
    49ae:	70 c1       	rjmp	.+736    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    49b0:	8c e0       	ldi	r24, 0x0C	; 12
    49b2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[4] = '7';
    49b6:	87 e3       	ldi	r24, 0x37	; 55
    49b8:	8f ab       	std	Y+55, r24	; 0x37
    49ba:	6a c1       	rjmp	.+724    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    49bc:	8c e0       	ldi	r24, 0x0C	; 12
    49be:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[4] = '8';
    49c2:	88 e3       	ldi	r24, 0x38	; 56
    49c4:	8f ab       	std	Y+55, r24	; 0x37
    49c6:	64 c1       	rjmp	.+712    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    49c8:	8c e0       	ldi	r24, 0x0C	; 12
    49ca:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[4] = '9';
    49ce:	89 e3       	ldi	r24, 0x39	; 57
    49d0:	8f ab       	std	Y+55, r24	; 0x37
    49d2:	5e c1       	rjmp	.+700    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    49d4:	8c e0       	ldi	r24, 0x0C	; 12
    49d6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[4] = '0';
    49da:	80 e3       	ldi	r24, 0x30	; 48
    49dc:	8f ab       	std	Y+55, r24	; 0x37
    49de:	58 c1       	rjmp	.+688    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 6:  Speed = atof(Speed_Buf);	 
    49e0:	c3 01       	movw	r24, r6
    49e2:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    49e6:	60 93 7e 02 	sts	0x027E, r22
    49ea:	70 93 7f 02 	sts	0x027F, r23
    49ee:	80 93 80 02 	sts	0x0280, r24
    49f2:	90 93 81 02 	sts	0x0281, r25
										 lcd_gotoxy(8,3);
    49f6:	88 e0       	ldi	r24, 0x08	; 8
    49f8:	63 e0       	ldi	r22, 0x03	; 3
    49fa:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(Speed_Buf,"%07.3f", Speed);
    49fe:	40 91 7e 02 	lds	r20, 0x027E
    4a02:	50 91 7f 02 	lds	r21, 0x027F
    4a06:	60 91 80 02 	lds	r22, 0x0280
    4a0a:	70 91 81 02 	lds	r23, 0x0281
    4a0e:	8d b7       	in	r24, 0x3d	; 61
    4a10:	9e b7       	in	r25, 0x3e	; 62
    4a12:	08 97       	sbiw	r24, 0x08	; 8
    4a14:	0f b6       	in	r0, 0x3f	; 63
    4a16:	f8 94       	cli
    4a18:	9e bf       	out	0x3e, r25	; 62
    4a1a:	0f be       	out	0x3f, r0	; 63
    4a1c:	8d bf       	out	0x3d, r24	; 61
    4a1e:	ed b7       	in	r30, 0x3d	; 61
    4a20:	fe b7       	in	r31, 0x3e	; 62
    4a22:	31 96       	adiw	r30, 0x01	; 1
    4a24:	ad b7       	in	r26, 0x3d	; 61
    4a26:	be b7       	in	r27, 0x3e	; 62
    4a28:	12 96       	adiw	r26, 0x02	; 2
    4a2a:	7c 92       	st	X, r7
    4a2c:	6e 92       	st	-X, r6
    4a2e:	11 97       	sbiw	r26, 0x01	; 1
    4a30:	e2 82       	std	Z+2, r14	; 0x02
    4a32:	f3 82       	std	Z+3, r15	; 0x03
    4a34:	44 83       	std	Z+4, r20	; 0x04
    4a36:	55 83       	std	Z+5, r21	; 0x05
    4a38:	66 83       	std	Z+6, r22	; 0x06
    4a3a:	77 83       	std	Z+7, r23	; 0x07
    4a3c:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(Speed_Buf);
    4a40:	2d b7       	in	r18, 0x3d	; 61
    4a42:	3e b7       	in	r19, 0x3e	; 62
    4a44:	28 5f       	subi	r18, 0xF8	; 248
    4a46:	3f 4f       	sbci	r19, 0xFF	; 255
    4a48:	0f b6       	in	r0, 0x3f	; 63
    4a4a:	f8 94       	cli
    4a4c:	3e bf       	out	0x3e, r19	; 62
    4a4e:	0f be       	out	0x3f, r0	; 63
    4a50:	2d bf       	out	0x3d, r18	; 61
    4a52:	c3 01       	movw	r24, r6
    4a54:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(13,3);
    4a58:	8d e0       	ldi	r24, 0x0D	; 13
    4a5a:	63 e0       	ldi	r22, 0x03	; 3
    4a5c:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    4a60:	8f e0       	ldi	r24, 0x0F	; 15
    4a62:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    4a66:	80 91 68 03 	lds	r24, 0x0368
    4a6a:	90 91 69 03 	lds	r25, 0x0369
    4a6e:	84 33       	cpi	r24, 0x34	; 52
    4a70:	91 05       	cpc	r25, r1
    4a72:	d1 f1       	breq	.+116    	; 0x4ae8 <__stack+0x39e9>
    4a74:	85 33       	cpi	r24, 0x35	; 53
    4a76:	91 05       	cpc	r25, r1
    4a78:	8c f4       	brge	.+34     	; 0x4a9c <__stack+0x399d>
    4a7a:	81 33       	cpi	r24, 0x31	; 49
    4a7c:	91 05       	cpc	r25, r1
    4a7e:	11 f1       	breq	.+68     	; 0x4ac4 <__stack+0x39c5>
    4a80:	82 33       	cpi	r24, 0x32	; 50
    4a82:	91 05       	cpc	r25, r1
    4a84:	24 f4       	brge	.+8      	; 0x4a8e <__stack+0x398f>
    4a86:	c0 97       	sbiw	r24, 0x30	; 48
    4a88:	09 f0       	breq	.+2      	; 0x4a8c <__stack+0x398d>
    4a8a:	02 c1       	rjmp	.+516    	; 0x4c90 <__stack+0x3b91>
    4a8c:	50 c0       	rjmp	.+160    	; 0x4b2e <__stack+0x3a2f>
    4a8e:	82 33       	cpi	r24, 0x32	; 50
    4a90:	91 05       	cpc	r25, r1
    4a92:	f1 f0       	breq	.+60     	; 0x4ad0 <__stack+0x39d1>
    4a94:	c3 97       	sbiw	r24, 0x33	; 51
    4a96:	09 f0       	breq	.+2      	; 0x4a9a <__stack+0x399b>
    4a98:	fb c0       	rjmp	.+502    	; 0x4c90 <__stack+0x3b91>
    4a9a:	20 c0       	rjmp	.+64     	; 0x4adc <__stack+0x39dd>
    4a9c:	87 33       	cpi	r24, 0x37	; 55
    4a9e:	91 05       	cpc	r25, r1
    4aa0:	a1 f1       	breq	.+104    	; 0x4b0a <__stack+0x3a0b>
    4aa2:	88 33       	cpi	r24, 0x38	; 56
    4aa4:	91 05       	cpc	r25, r1
    4aa6:	3c f4       	brge	.+14     	; 0x4ab6 <__stack+0x39b7>
    4aa8:	85 33       	cpi	r24, 0x35	; 53
    4aaa:	91 05       	cpc	r25, r1
    4aac:	11 f1       	breq	.+68     	; 0x4af2 <__stack+0x39f3>
    4aae:	c6 97       	sbiw	r24, 0x36	; 54
    4ab0:	09 f0       	breq	.+2      	; 0x4ab4 <__stack+0x39b5>
    4ab2:	ee c0       	rjmp	.+476    	; 0x4c90 <__stack+0x3b91>
    4ab4:	24 c0       	rjmp	.+72     	; 0x4afe <__stack+0x39ff>
    4ab6:	88 33       	cpi	r24, 0x38	; 56
    4ab8:	91 05       	cpc	r25, r1
    4aba:	69 f1       	breq	.+90     	; 0x4b16 <__stack+0x3a17>
    4abc:	c9 97       	sbiw	r24, 0x39	; 57
    4abe:	09 f0       	breq	.+2      	; 0x4ac2 <__stack+0x39c3>
    4ac0:	e7 c0       	rjmp	.+462    	; 0x4c90 <__stack+0x3b91>
    4ac2:	2f c0       	rjmp	.+94     	; 0x4b22 <__stack+0x3a23>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    4ac4:	8c e0       	ldi	r24, 0x0C	; 12
    4ac6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[5] = '1';
    4aca:	81 e3       	ldi	r24, 0x31	; 49
    4acc:	88 af       	std	Y+56, r24	; 0x38
    4ace:	e0 c0       	rjmp	.+448    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    4ad0:	8c e0       	ldi	r24, 0x0C	; 12
    4ad2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[5] = '2';
    4ad6:	82 e3       	ldi	r24, 0x32	; 50
    4ad8:	88 af       	std	Y+56, r24	; 0x38
    4ada:	da c0       	rjmp	.+436    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    4adc:	8c e0       	ldi	r24, 0x0C	; 12
    4ade:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[5] = '3';
    4ae2:	83 e3       	ldi	r24, 0x33	; 51
    4ae4:	88 af       	std	Y+56, r24	; 0x38
    4ae6:	d4 c0       	rjmp	.+424    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    4ae8:	8c e0       	ldi	r24, 0x0C	; 12
    4aea:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[5] = '4';
    4aee:	88 ae       	std	Y+56, r8	; 0x38
    4af0:	cf c0       	rjmp	.+414    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    4af2:	8c e0       	ldi	r24, 0x0C	; 12
    4af4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     Speed_Buf[5] = '5';
    4af8:	85 e3       	ldi	r24, 0x35	; 53
    4afa:	88 af       	std	Y+56, r24	; 0x38
    4afc:	c9 c0       	rjmp	.+402    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    4afe:	8c e0       	ldi	r24, 0x0C	; 12
    4b00:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[5] = '6';
    4b04:	86 e3       	ldi	r24, 0x36	; 54
    4b06:	88 af       	std	Y+56, r24	; 0x38
    4b08:	c3 c0       	rjmp	.+390    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    4b0a:	8c e0       	ldi	r24, 0x0C	; 12
    4b0c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[5] = '7';
    4b10:	87 e3       	ldi	r24, 0x37	; 55
    4b12:	88 af       	std	Y+56, r24	; 0x38
    4b14:	bd c0       	rjmp	.+378    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    4b16:	8c e0       	ldi	r24, 0x0C	; 12
    4b18:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[5] = '8';
    4b1c:	88 e3       	ldi	r24, 0x38	; 56
    4b1e:	88 af       	std	Y+56, r24	; 0x38
    4b20:	b7 c0       	rjmp	.+366    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    4b22:	8c e0       	ldi	r24, 0x0C	; 12
    4b24:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[5] = '9';
    4b28:	89 e3       	ldi	r24, 0x39	; 57
    4b2a:	88 af       	std	Y+56, r24	; 0x38
    4b2c:	b1 c0       	rjmp	.+354    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    4b2e:	8c e0       	ldi	r24, 0x0C	; 12
    4b30:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[5] = '0';
    4b34:	80 e3       	ldi	r24, 0x30	; 48
    4b36:	88 af       	std	Y+56, r24	; 0x38
    4b38:	ab c0       	rjmp	.+342    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
										  }	
								         break;
								case 7:  Speed = atof(Speed_Buf);	 
    4b3a:	c3 01       	movw	r24, r6
    4b3c:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    4b40:	60 93 7e 02 	sts	0x027E, r22
    4b44:	70 93 7f 02 	sts	0x027F, r23
    4b48:	80 93 80 02 	sts	0x0280, r24
    4b4c:	90 93 81 02 	sts	0x0281, r25
										 lcd_gotoxy(8,3);
    4b50:	88 e0       	ldi	r24, 0x08	; 8
    4b52:	63 e0       	ldi	r22, 0x03	; 3
    4b54:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(Speed_Buf,"%07.3f", Speed);
    4b58:	40 91 7e 02 	lds	r20, 0x027E
    4b5c:	50 91 7f 02 	lds	r21, 0x027F
    4b60:	60 91 80 02 	lds	r22, 0x0280
    4b64:	70 91 81 02 	lds	r23, 0x0281
    4b68:	8d b7       	in	r24, 0x3d	; 61
    4b6a:	9e b7       	in	r25, 0x3e	; 62
    4b6c:	08 97       	sbiw	r24, 0x08	; 8
    4b6e:	0f b6       	in	r0, 0x3f	; 63
    4b70:	f8 94       	cli
    4b72:	9e bf       	out	0x3e, r25	; 62
    4b74:	0f be       	out	0x3f, r0	; 63
    4b76:	8d bf       	out	0x3d, r24	; 61
    4b78:	ed b7       	in	r30, 0x3d	; 61
    4b7a:	fe b7       	in	r31, 0x3e	; 62
    4b7c:	31 96       	adiw	r30, 0x01	; 1
    4b7e:	ad b7       	in	r26, 0x3d	; 61
    4b80:	be b7       	in	r27, 0x3e	; 62
    4b82:	12 96       	adiw	r26, 0x02	; 2
    4b84:	7c 92       	st	X, r7
    4b86:	6e 92       	st	-X, r6
    4b88:	11 97       	sbiw	r26, 0x01	; 1
    4b8a:	e2 82       	std	Z+2, r14	; 0x02
    4b8c:	f3 82       	std	Z+3, r15	; 0x03
    4b8e:	44 83       	std	Z+4, r20	; 0x04
    4b90:	55 83       	std	Z+5, r21	; 0x05
    4b92:	66 83       	std	Z+6, r22	; 0x06
    4b94:	77 83       	std	Z+7, r23	; 0x07
    4b96:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(Speed_Buf);
    4b9a:	2d b7       	in	r18, 0x3d	; 61
    4b9c:	3e b7       	in	r19, 0x3e	; 62
    4b9e:	28 5f       	subi	r18, 0xF8	; 248
    4ba0:	3f 4f       	sbci	r19, 0xFF	; 255
    4ba2:	0f b6       	in	r0, 0x3f	; 63
    4ba4:	f8 94       	cli
    4ba6:	3e bf       	out	0x3e, r19	; 62
    4ba8:	0f be       	out	0x3f, r0	; 63
    4baa:	2d bf       	out	0x3d, r18	; 61
    4bac:	c3 01       	movw	r24, r6
    4bae:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(14,3);
    4bb2:	8e e0       	ldi	r24, 0x0E	; 14
    4bb4:	63 e0       	ldi	r22, 0x03	; 3
    4bb6:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    4bba:	8f e0       	ldi	r24, 0x0F	; 15
    4bbc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    4bc0:	80 91 68 03 	lds	r24, 0x0368
    4bc4:	90 91 69 03 	lds	r25, 0x0369
    4bc8:	84 33       	cpi	r24, 0x34	; 52
    4bca:	91 05       	cpc	r25, r1
    4bcc:	c9 f1       	breq	.+114    	; 0x4c40 <__stack+0x3b41>
    4bce:	85 33       	cpi	r24, 0x35	; 53
    4bd0:	91 05       	cpc	r25, r1
    4bd2:	8c f4       	brge	.+34     	; 0x4bf6 <__stack+0x3af7>
    4bd4:	81 33       	cpi	r24, 0x31	; 49
    4bd6:	91 05       	cpc	r25, r1
    4bd8:	09 f1       	breq	.+66     	; 0x4c1c <__stack+0x3b1d>
    4bda:	82 33       	cpi	r24, 0x32	; 50
    4bdc:	91 05       	cpc	r25, r1
    4bde:	24 f4       	brge	.+8      	; 0x4be8 <__stack+0x3ae9>
    4be0:	c0 97       	sbiw	r24, 0x30	; 48
    4be2:	09 f0       	breq	.+2      	; 0x4be6 <__stack+0x3ae7>
    4be4:	55 c0       	rjmp	.+170    	; 0x4c90 <__stack+0x3b91>
    4be6:	4f c0       	rjmp	.+158    	; 0x4c86 <__stack+0x3b87>
    4be8:	82 33       	cpi	r24, 0x32	; 50
    4bea:	91 05       	cpc	r25, r1
    4bec:	e9 f0       	breq	.+58     	; 0x4c28 <__stack+0x3b29>
    4bee:	c3 97       	sbiw	r24, 0x33	; 51
    4bf0:	09 f0       	breq	.+2      	; 0x4bf4 <__stack+0x3af5>
    4bf2:	4e c0       	rjmp	.+156    	; 0x4c90 <__stack+0x3b91>
    4bf4:	1f c0       	rjmp	.+62     	; 0x4c34 <__stack+0x3b35>
    4bf6:	87 33       	cpi	r24, 0x37	; 55
    4bf8:	91 05       	cpc	r25, r1
    4bfa:	99 f1       	breq	.+102    	; 0x4c62 <__stack+0x3b63>
    4bfc:	88 33       	cpi	r24, 0x38	; 56
    4bfe:	91 05       	cpc	r25, r1
    4c00:	3c f4       	brge	.+14     	; 0x4c10 <__stack+0x3b11>
    4c02:	85 33       	cpi	r24, 0x35	; 53
    4c04:	91 05       	cpc	r25, r1
    4c06:	09 f1       	breq	.+66     	; 0x4c4a <__stack+0x3b4b>
    4c08:	c6 97       	sbiw	r24, 0x36	; 54
    4c0a:	09 f0       	breq	.+2      	; 0x4c0e <__stack+0x3b0f>
    4c0c:	41 c0       	rjmp	.+130    	; 0x4c90 <__stack+0x3b91>
    4c0e:	23 c0       	rjmp	.+70     	; 0x4c56 <__stack+0x3b57>
    4c10:	88 33       	cpi	r24, 0x38	; 56
    4c12:	91 05       	cpc	r25, r1
    4c14:	61 f1       	breq	.+88     	; 0x4c6e <__stack+0x3b6f>
    4c16:	c9 97       	sbiw	r24, 0x39	; 57
    4c18:	d9 f5       	brne	.+118    	; 0x4c90 <__stack+0x3b91>
    4c1a:	2f c0       	rjmp	.+94     	; 0x4c7a <__stack+0x3b7b>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    4c1c:	8c e0       	ldi	r24, 0x0C	; 12
    4c1e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[6] = '1';
    4c22:	81 e3       	ldi	r24, 0x31	; 49
    4c24:	89 af       	std	Y+57, r24	; 0x39
    4c26:	34 c0       	rjmp	.+104    	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    4c28:	8c e0       	ldi	r24, 0x0C	; 12
    4c2a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[6] = '2';
    4c2e:	82 e3       	ldi	r24, 0x32	; 50
    4c30:	89 af       	std	Y+57, r24	; 0x39
    4c32:	2e c0       	rjmp	.+92     	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    4c34:	8c e0       	ldi	r24, 0x0C	; 12
    4c36:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[6] = '3';
    4c3a:	83 e3       	ldi	r24, 0x33	; 51
    4c3c:	89 af       	std	Y+57, r24	; 0x39
    4c3e:	28 c0       	rjmp	.+80     	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    4c40:	8c e0       	ldi	r24, 0x0C	; 12
    4c42:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[6] = '4';
    4c46:	89 ae       	std	Y+57, r8	; 0x39
    4c48:	23 c0       	rjmp	.+70     	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    4c4a:	8c e0       	ldi	r24, 0x0C	; 12
    4c4c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     Speed_Buf[6] = '5';
    4c50:	85 e3       	ldi	r24, 0x35	; 53
    4c52:	89 af       	std	Y+57, r24	; 0x39
    4c54:	1d c0       	rjmp	.+58     	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    4c56:	8c e0       	ldi	r24, 0x0C	; 12
    4c58:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 Speed_Buf[6] = '6';
    4c5c:	86 e3       	ldi	r24, 0x36	; 54
    4c5e:	89 af       	std	Y+57, r24	; 0x39
    4c60:	17 c0       	rjmp	.+46     	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    4c62:	8c e0       	ldi	r24, 0x0C	; 12
    4c64:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[6] = '7';
    4c68:	87 e3       	ldi	r24, 0x37	; 55
    4c6a:	89 af       	std	Y+57, r24	; 0x39
    4c6c:	11 c0       	rjmp	.+34     	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    4c6e:	8c e0       	ldi	r24, 0x0C	; 12
    4c70:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[6] = '8';
    4c74:	88 e3       	ldi	r24, 0x38	; 56
    4c76:	89 af       	std	Y+57, r24	; 0x39
    4c78:	0b c0       	rjmp	.+22     	; 0x4c90 <__stack+0x3b91>
														 
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    4c7a:	8c e0       	ldi	r24, 0x0C	; 12
    4c7c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[6] = '9';
    4c80:	89 e3       	ldi	r24, 0x39	; 57
    4c82:	89 af       	std	Y+57, r24	; 0x39
    4c84:	05 c0       	rjmp	.+10     	; 0x4c90 <__stack+0x3b91>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    4c86:	8c e0       	ldi	r24, 0x0C	; 12
    4c88:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         Speed_Buf[6] = '0';
    4c8c:	80 e3       	ldi	r24, 0x30	; 48
    4c8e:	89 af       	std	Y+57, r24	; 0x39
			lcd_gotoxy(8,3);
			sprintf(U_Load_Buf,"%07.3f", U_Load);
			lcd_puts(U_Load_Buf);
			
			
			while(key != '*')
    4c90:	80 91 68 03 	lds	r24, 0x0368
    4c94:	90 91 69 03 	lds	r25, 0x0369
    4c98:	8a 97       	sbiw	r24, 0x2a	; 42
    4c9a:	11 f0       	breq	.+4      	; 0x4ca0 <__stack+0x3ba1>
    4c9c:	0c 94 aa 08 	jmp	0x1154	; 0x1154 <__stack+0x55>
    4ca0:	06 c0       	rjmp	.+12     	; 0x4cae <__stack+0x3baf>
						    
					}
			}
			while(KeyPressedStatus == 1)	
		  	{
				key = GetKeyPressed(); // wait for key release
    4ca2:	0e 94 a1 04 	call	0x942	; 0x942 <GetKeyPressed>
    4ca6:	90 93 69 03 	sts	0x0369, r25
    4caa:	80 93 68 03 	sts	0x0368, r24
					        } 
		 
						    
					}
			}
			while(KeyPressedStatus == 1)	
    4cae:	80 91 52 03 	lds	r24, 0x0352
    4cb2:	81 30       	cpi	r24, 0x01	; 1
    4cb4:	b1 f3       	breq	.-20     	; 0x4ca2 <__stack+0x3ba3>
		  	{
				key = GetKeyPressed(); // wait for key release
		  	}
			eeprom_write_float(&Epromadress_W_Span,W_Span);
    4cb6:	40 91 9b 02 	lds	r20, 0x029B
    4cba:	50 91 9c 02 	lds	r21, 0x029C
    4cbe:	60 91 9d 02 	lds	r22, 0x029D
    4cc2:	70 91 9e 02 	lds	r23, 0x029E
    4cc6:	80 e0       	ldi	r24, 0x00	; 0
    4cc8:	90 e0       	ldi	r25, 0x00	; 0
    4cca:	0e 94 4f 4a 	call	0x949e	; 0x949e <__eewr_dword_m128>
			eeprom_write_float(&Epromadress_L_Offset,L_Offset);
    4cce:	40 91 8f 02 	lds	r20, 0x028F
    4cd2:	50 91 90 02 	lds	r21, 0x0290
    4cd6:	60 91 91 02 	lds	r22, 0x0291
    4cda:	70 91 92 02 	lds	r23, 0x0292
    4cde:	8f e9       	ldi	r24, 0x9F	; 159
    4ce0:	92 e0       	ldi	r25, 0x02	; 2
    4ce2:	0e 94 4f 4a 	call	0x949e	; 0x949e <__eewr_dword_m128>
			eeprom_write_float(&Epromadress_U_Load,U_Load);
    4ce6:	40 91 b9 02 	lds	r20, 0x02B9
    4cea:	50 91 ba 02 	lds	r21, 0x02BA
    4cee:	60 91 bb 02 	lds	r22, 0x02BB
    4cf2:	70 91 bc 02 	lds	r23, 0x02BC
    4cf6:	86 e4       	ldi	r24, 0x46	; 70
    4cf8:	93 e0       	ldi	r25, 0x03	; 3
    4cfa:	0e 94 4f 4a 	call	0x949e	; 0x949e <__eewr_dword_m128>
			eeprom_write_float(&Epromadress_O_Load,O_Load);
    4cfe:	40 91 ad 02 	lds	r20, 0x02AD
    4d02:	50 91 ae 02 	lds	r21, 0x02AE
    4d06:	60 91 af 02 	lds	r22, 0x02AF
    4d0a:	70 91 b0 02 	lds	r23, 0x02B0
    4d0e:	8a e8       	ldi	r24, 0x8A	; 138
    4d10:	92 e0       	ldi	r25, 0x02	; 2
    4d12:	0e 94 4f 4a 	call	0x949e	; 0x949e <__eewr_dword_m128>
			eeprom_write_float(&Epromadress_C_Factor,C_Factor);
    4d16:	40 91 ea 02 	lds	r20, 0x02EA
    4d1a:	50 91 eb 02 	lds	r21, 0x02EB
    4d1e:	60 91 ec 02 	lds	r22, 0x02EC
    4d22:	70 91 ed 02 	lds	r23, 0x02ED
    4d26:	8d eb       	ldi	r24, 0xBD	; 189
    4d28:	92 e0       	ldi	r25, 0x02	; 2
    4d2a:	0e 94 4f 4a 	call	0x949e	; 0x949e <__eewr_dword_m128>
			eeprom_write_float(&Epromadress_Speed,Speed);
    4d2e:	40 91 7e 02 	lds	r20, 0x027E
    4d32:	50 91 7f 02 	lds	r21, 0x027F
    4d36:	60 91 80 02 	lds	r22, 0x0280
    4d3a:	70 91 81 02 	lds	r23, 0x0281
    4d3e:	83 e5       	ldi	r24, 0x53	; 83
    4d40:	93 e0       	ldi	r25, 0x03	; 3
    4d42:	0e 94 4f 4a 	call	0x949e	; 0x949e <__eewr_dword_m128>
			lcd_command(LCD_DISP_ON);
    4d46:	8c e0       	ldi	r24, 0x0C	; 12
    4d48:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
			lcd_clrscr();		
    4d4c:	0e 94 25 04 	call	0x84a	; 0x84a <lcd_clrscr>

}
    4d50:	cd 5b       	subi	r28, 0xBD	; 189
    4d52:	df 4f       	sbci	r29, 0xFF	; 255
    4d54:	0f b6       	in	r0, 0x3f	; 63
    4d56:	f8 94       	cli
    4d58:	de bf       	out	0x3e, r29	; 62
    4d5a:	0f be       	out	0x3f, r0	; 63
    4d5c:	cd bf       	out	0x3d, r28	; 61
    4d5e:	cf 91       	pop	r28
    4d60:	df 91       	pop	r29
    4d62:	1f 91       	pop	r17
    4d64:	0f 91       	pop	r16
    4d66:	ff 90       	pop	r15
    4d68:	ef 90       	pop	r14
    4d6a:	df 90       	pop	r13
    4d6c:	cf 90       	pop	r12
    4d6e:	bf 90       	pop	r11
    4d70:	af 90       	pop	r10
    4d72:	9f 90       	pop	r9
    4d74:	8f 90       	pop	r8
    4d76:	7f 90       	pop	r7
    4d78:	6f 90       	pop	r6
    4d7a:	5f 90       	pop	r5
    4d7c:	4f 90       	pop	r4
    4d7e:	3f 90       	pop	r3
    4d80:	2f 90       	pop	r2
    4d82:	08 95       	ret
							ProcessDataPage1_Print_Falg = 0;
						 
					}	
					 

					if(ProcessDataPageCursor == 1)
    4d84:	3e ad       	ldd	r19, Y+62	; 0x3e
    4d86:	31 30       	cpi	r19, 0x01	; 1
    4d88:	11 f4       	brne	.+4      	; 0x4d8e <__stack+0x3c8f>
    4d8a:	0c 94 d8 0a 	jmp	0x15b0	; 0x15b0 <__stack+0x4b1>
    4d8e:	0c 94 b1 0f 	jmp	0x1f62	; 0x1f62 <__stack+0xe63>

00004d92 <Calibrate_Data_Page>:
		   
				 
}

void Calibrate_Data_Page(void)
{
    4d92:	2f 92       	push	r2
    4d94:	3f 92       	push	r3
    4d96:	4f 92       	push	r4
    4d98:	5f 92       	push	r5
    4d9a:	6f 92       	push	r6
    4d9c:	7f 92       	push	r7
    4d9e:	8f 92       	push	r8
    4da0:	9f 92       	push	r9
    4da2:	af 92       	push	r10
    4da4:	bf 92       	push	r11
    4da6:	cf 92       	push	r12
    4da8:	df 92       	push	r13
    4daa:	ef 92       	push	r14
    4dac:	ff 92       	push	r15
    4dae:	0f 93       	push	r16
    4db0:	1f 93       	push	r17
    4db2:	df 93       	push	r29
    4db4:	cf 93       	push	r28
    4db6:	cd b7       	in	r28, 0x3d	; 61
    4db8:	de b7       	in	r29, 0x3e	; 62
    4dba:	ac 97       	sbiw	r28, 0x2c	; 44
    4dbc:	0f b6       	in	r0, 0x3f	; 63
    4dbe:	f8 94       	cli
    4dc0:	de bf       	out	0x3e, r29	; 62
    4dc2:	0f be       	out	0x3f, r0	; 63
    4dc4:	cd bf       	out	0x3d, r28	; 61

unsigned char CalibrateDataPageCursor = 1;
unsigned char CalibrateDataLineCursor = 1;	 
unsigned char CalibrateDataPage1_Print_Falg = 0,CalibrateDataPage2_Print_Falg = 0;

			MI = eeprom_read_float(&Epromadress_MI);
    4dc6:	8b e5       	ldi	r24, 0x5B	; 91
    4dc8:	93 e0       	ldi	r25, 0x03	; 3
    4dca:	0e 94 49 4a 	call	0x9492	; 0x9492 <__eerd_dword_m128>
    4dce:	60 93 42 03 	sts	0x0342, r22
    4dd2:	70 93 43 03 	sts	0x0343, r23
    4dd6:	80 93 44 03 	sts	0x0344, r24
    4dda:	90 93 45 03 	sts	0x0345, r25
			ZO = eeprom_read_float(&Epromadress_ZO);
    4dde:	83 ea       	ldi	r24, 0xA3	; 163
    4de0:	92 e0       	ldi	r25, 0x02	; 2
    4de2:	0e 94 49 4a 	call	0x9492	; 0x9492 <__eerd_dword_m128>
    4de6:	60 93 b1 02 	sts	0x02B1, r22
    4dea:	70 93 b2 02 	sts	0x02B2, r23
    4dee:	80 93 b3 02 	sts	0x02B3, r24
    4df2:	90 93 b4 02 	sts	0x02B4, r25
			SN = eeprom_read_float(&Epromadress_SN);
    4df6:	8a e4       	ldi	r24, 0x4A	; 74
    4df8:	93 e0       	ldi	r25, 0x03	; 3
    4dfa:	0e 94 49 4a 	call	0x9492	; 0x9492 <__eerd_dword_m128>
    4dfe:	60 93 ee 02 	sts	0x02EE, r22
    4e02:	70 93 ef 02 	sts	0x02EF, r23
    4e06:	80 93 f0 02 	sts	0x02F0, r24
    4e0a:	90 93 f1 02 	sts	0x02F1, r25
			MA = eeprom_read_float(&Epromadress_MA);
    4e0e:	82 e8       	ldi	r24, 0x82	; 130
    4e10:	92 e0       	ldi	r25, 0x02	; 2
    4e12:	0e 94 49 4a 	call	0x9492	; 0x9492 <__eerd_dword_m128>
    4e16:	60 93 93 02 	sts	0x0293, r22
    4e1a:	70 93 94 02 	sts	0x0294, r23
    4e1e:	80 93 95 02 	sts	0x0295, r24
    4e22:	90 93 96 02 	sts	0x0296, r25
			 


 			lcd_clrscr();
    4e26:	0e 94 25 04 	call	0x84a	; 0x84a <lcd_clrscr>
			lcd_gotoxy(0,0);
    4e2a:	80 e0       	ldi	r24, 0x00	; 0
    4e2c:	60 e0       	ldi	r22, 0x00	; 0
    4e2e:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			lcd_puts("CALIBRATE DATA....");
    4e32:	8d e9       	ldi	r24, 0x9D	; 157
    4e34:	91 e0       	ldi	r25, 0x01	; 1
    4e36:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
			lcd_gotoxy(0,1);
    4e3a:	80 e0       	ldi	r24, 0x00	; 0
    4e3c:	61 e0       	ldi	r22, 0x01	; 1
    4e3e:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			lcd_puts("MI");
    4e42:	80 eb       	ldi	r24, 0xB0	; 176
    4e44:	91 e0       	ldi	r25, 0x01	; 1
    4e46:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
			lcd_gotoxy(0,2);
    4e4a:	80 e0       	ldi	r24, 0x00	; 0
    4e4c:	62 e0       	ldi	r22, 0x02	; 2
    4e4e:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			lcd_puts("ZO");
    4e52:	83 eb       	ldi	r24, 0xB3	; 179
    4e54:	91 e0       	ldi	r25, 0x01	; 1
    4e56:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
			lcd_gotoxy(0,3);
    4e5a:	80 e0       	ldi	r24, 0x00	; 0
    4e5c:	63 e0       	ldi	r22, 0x03	; 3
    4e5e:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			lcd_puts("SN");
    4e62:	86 eb       	ldi	r24, 0xB6	; 182
    4e64:	91 e0       	ldi	r25, 0x01	; 1
    4e66:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
			lcd_gotoxy(8,1);
    4e6a:	88 e0       	ldi	r24, 0x08	; 8
    4e6c:	61 e0       	ldi	r22, 0x01	; 1
    4e6e:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			sprintf(MI_Buf,"%07.3f", W_Span);
    4e72:	40 91 9b 02 	lds	r20, 0x029B
    4e76:	50 91 9c 02 	lds	r21, 0x029C
    4e7a:	60 91 9d 02 	lds	r22, 0x029D
    4e7e:	70 91 9e 02 	lds	r23, 0x029E
    4e82:	2d b7       	in	r18, 0x3d	; 61
    4e84:	3e b7       	in	r19, 0x3e	; 62
    4e86:	28 50       	subi	r18, 0x08	; 8
    4e88:	30 40       	sbci	r19, 0x00	; 0
    4e8a:	0f b6       	in	r0, 0x3f	; 63
    4e8c:	f8 94       	cli
    4e8e:	3e bf       	out	0x3e, r19	; 62
    4e90:	0f be       	out	0x3f, r0	; 63
    4e92:	2d bf       	out	0x3d, r18	; 61
    4e94:	ed b7       	in	r30, 0x3d	; 61
    4e96:	fe b7       	in	r31, 0x3e	; 62
    4e98:	31 96       	adiw	r30, 0x01	; 1
    4e9a:	5e 01       	movw	r10, r28
    4e9c:	08 94       	sec
    4e9e:	a1 1c       	adc	r10, r1
    4ea0:	b1 1c       	adc	r11, r1
    4ea2:	ad b7       	in	r26, 0x3d	; 61
    4ea4:	be b7       	in	r27, 0x3e	; 62
    4ea6:	12 96       	adiw	r26, 0x02	; 2
    4ea8:	bc 92       	st	X, r11
    4eaa:	ae 92       	st	-X, r10
    4eac:	11 97       	sbiw	r26, 0x01	; 1
    4eae:	b5 e7       	ldi	r27, 0x75	; 117
    4eb0:	eb 2e       	mov	r14, r27
    4eb2:	b1 e0       	ldi	r27, 0x01	; 1
    4eb4:	fb 2e       	mov	r15, r27
    4eb6:	f3 82       	std	Z+3, r15	; 0x03
    4eb8:	e2 82       	std	Z+2, r14	; 0x02
    4eba:	44 83       	std	Z+4, r20	; 0x04
    4ebc:	55 83       	std	Z+5, r21	; 0x05
    4ebe:	66 83       	std	Z+6, r22	; 0x06
    4ec0:	77 83       	std	Z+7, r23	; 0x07
    4ec2:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
			lcd_puts(MI_Buf);
    4ec6:	2d b7       	in	r18, 0x3d	; 61
    4ec8:	3e b7       	in	r19, 0x3e	; 62
    4eca:	28 5f       	subi	r18, 0xF8	; 248
    4ecc:	3f 4f       	sbci	r19, 0xFF	; 255
    4ece:	0f b6       	in	r0, 0x3f	; 63
    4ed0:	f8 94       	cli
    4ed2:	3e bf       	out	0x3e, r19	; 62
    4ed4:	0f be       	out	0x3f, r0	; 63
    4ed6:	2d bf       	out	0x3d, r18	; 61
    4ed8:	c5 01       	movw	r24, r10
    4eda:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
			lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    4ede:	8f e0       	ldi	r24, 0x0F	; 15
    4ee0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
			lcd_gotoxy(8,2);
    4ee4:	88 e0       	ldi	r24, 0x08	; 8
    4ee6:	62 e0       	ldi	r22, 0x02	; 2
    4ee8:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			sprintf(ZO_Buf,"%07.3f", L_Offset);
    4eec:	40 91 8f 02 	lds	r20, 0x028F
    4ef0:	50 91 90 02 	lds	r21, 0x0290
    4ef4:	60 91 91 02 	lds	r22, 0x0291
    4ef8:	70 91 92 02 	lds	r23, 0x0292
    4efc:	8d b7       	in	r24, 0x3d	; 61
    4efe:	9e b7       	in	r25, 0x3e	; 62
    4f00:	08 97       	sbiw	r24, 0x08	; 8
    4f02:	0f b6       	in	r0, 0x3f	; 63
    4f04:	f8 94       	cli
    4f06:	9e bf       	out	0x3e, r25	; 62
    4f08:	0f be       	out	0x3f, r0	; 63
    4f0a:	8d bf       	out	0x3d, r24	; 61
    4f0c:	ed b7       	in	r30, 0x3d	; 61
    4f0e:	fe b7       	in	r31, 0x3e	; 62
    4f10:	31 96       	adiw	r30, 0x01	; 1
    4f12:	ab e0       	ldi	r26, 0x0B	; 11
    4f14:	ca 2e       	mov	r12, r26
    4f16:	d1 2c       	mov	r13, r1
    4f18:	cc 0e       	add	r12, r28
    4f1a:	dd 1e       	adc	r13, r29
    4f1c:	ad b7       	in	r26, 0x3d	; 61
    4f1e:	be b7       	in	r27, 0x3e	; 62
    4f20:	12 96       	adiw	r26, 0x02	; 2
    4f22:	dc 92       	st	X, r13
    4f24:	ce 92       	st	-X, r12
    4f26:	11 97       	sbiw	r26, 0x01	; 1
    4f28:	f3 82       	std	Z+3, r15	; 0x03
    4f2a:	e2 82       	std	Z+2, r14	; 0x02
    4f2c:	44 83       	std	Z+4, r20	; 0x04
    4f2e:	55 83       	std	Z+5, r21	; 0x05
    4f30:	66 83       	std	Z+6, r22	; 0x06
    4f32:	77 83       	std	Z+7, r23	; 0x07
    4f34:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
			lcd_puts(ZO_Buf);
    4f38:	2d b7       	in	r18, 0x3d	; 61
    4f3a:	3e b7       	in	r19, 0x3e	; 62
    4f3c:	28 5f       	subi	r18, 0xF8	; 248
    4f3e:	3f 4f       	sbci	r19, 0xFF	; 255
    4f40:	0f b6       	in	r0, 0x3f	; 63
    4f42:	f8 94       	cli
    4f44:	3e bf       	out	0x3e, r19	; 62
    4f46:	0f be       	out	0x3f, r0	; 63
    4f48:	2d bf       	out	0x3d, r18	; 61
    4f4a:	c6 01       	movw	r24, r12
    4f4c:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
			lcd_gotoxy(8,3);
    4f50:	88 e0       	ldi	r24, 0x08	; 8
    4f52:	63 e0       	ldi	r22, 0x03	; 3
    4f54:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			sprintf(SN_Buf,"%07.3f", U_Load);
    4f58:	40 91 b9 02 	lds	r20, 0x02B9
    4f5c:	50 91 ba 02 	lds	r21, 0x02BA
    4f60:	60 91 bb 02 	lds	r22, 0x02BB
    4f64:	70 91 bc 02 	lds	r23, 0x02BC
    4f68:	8d b7       	in	r24, 0x3d	; 61
    4f6a:	9e b7       	in	r25, 0x3e	; 62
    4f6c:	08 97       	sbiw	r24, 0x08	; 8
    4f6e:	0f b6       	in	r0, 0x3f	; 63
    4f70:	f8 94       	cli
    4f72:	9e bf       	out	0x3e, r25	; 62
    4f74:	0f be       	out	0x3f, r0	; 63
    4f76:	8d bf       	out	0x3d, r24	; 61
    4f78:	ed b7       	in	r30, 0x3d	; 61
    4f7a:	fe b7       	in	r31, 0x3e	; 62
    4f7c:	31 96       	adiw	r30, 0x01	; 1
    4f7e:	25 e1       	ldi	r18, 0x15	; 21
    4f80:	30 e0       	ldi	r19, 0x00	; 0
    4f82:	2c 0f       	add	r18, r28
    4f84:	3d 1f       	adc	r19, r29
    4f86:	ad b7       	in	r26, 0x3d	; 61
    4f88:	be b7       	in	r27, 0x3e	; 62
    4f8a:	12 96       	adiw	r26, 0x02	; 2
    4f8c:	3c 93       	st	X, r19
    4f8e:	2e 93       	st	-X, r18
    4f90:	11 97       	sbiw	r26, 0x01	; 1
    4f92:	f3 82       	std	Z+3, r15	; 0x03
    4f94:	e2 82       	std	Z+2, r14	; 0x02
    4f96:	44 83       	std	Z+4, r20	; 0x04
    4f98:	55 83       	std	Z+5, r21	; 0x05
    4f9a:	66 83       	std	Z+6, r22	; 0x06
    4f9c:	77 83       	std	Z+7, r23	; 0x07
    4f9e:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
			lcd_puts(SN_Buf);
    4fa2:	8d b7       	in	r24, 0x3d	; 61
    4fa4:	9e b7       	in	r25, 0x3e	; 62
    4fa6:	08 96       	adiw	r24, 0x08	; 8
    4fa8:	0f b6       	in	r0, 0x3f	; 63
    4faa:	f8 94       	cli
    4fac:	9e bf       	out	0x3e, r25	; 62
    4fae:	0f be       	out	0x3f, r0	; 63
    4fb0:	8d bf       	out	0x3d, r24	; 61
    4fb2:	ce 01       	movw	r24, r28
    4fb4:	45 96       	adiw	r24, 0x15	; 21
    4fb6:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
    4fba:	99 24       	eor	r9, r9
    4fbc:	93 94       	inc	r9
    4fbe:	00 e0       	ldi	r16, 0x00	; 0
    4fc0:	19 a6       	std	Y+41, r1	; 0x29
    4fc2:	91 e0       	ldi	r25, 0x01	; 1
    4fc4:	9a a7       	std	Y+42, r25	; 0x2a
												         MA_Buf[4] = '0';
														  
										 				 break;	
										  }	
								         break;
								case 6:  MA = atof(MA_Buf);	 
    4fc6:	4f e1       	ldi	r20, 0x1F	; 31
    4fc8:	44 2e       	mov	r4, r20
    4fca:	51 2c       	mov	r5, r1
    4fcc:	4c 0e       	add	r4, r28
    4fce:	5d 1e       	adc	r5, r29
												case '3':lcd_command(LCD_DISP_ON);
														 MA_Buf[5] = '3';
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
												         MA_Buf[5] = '4';
    4fd0:	34 e3       	ldi	r19, 0x34	; 52
    4fd2:	33 2e       	mov	r3, r19
												case '6':lcd_command(LCD_DISP_ON);
														 MA_Buf[5] = '6';
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
												         MA_Buf[5] = '7';
    4fd4:	27 e3       	ldi	r18, 0x37	; 55
    4fd6:	22 2e       	mov	r2, r18
												case '4':lcd_command(LCD_DISP_ON);
												         MA_Buf[5] = '4';
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
													     MA_Buf[5] = '5';
    4fd8:	95 e3       	ldi	r25, 0x35	; 53
    4fda:	69 2e       	mov	r6, r25
												         SN_Buf[4] = '0';
														  
										 				 break;	
										  }	
								         break;
								case 6:  SN = atof(SN_Buf);	 
    4fdc:	de 01       	movw	r26, r28
    4fde:	55 96       	adiw	r26, 0x15	; 21
    4fe0:	bc a7       	std	Y+44, r27	; 0x2c
    4fe2:	ab a7       	std	Y+43, r26	; 0x2b
    4fe4:	8b a4       	ldd	r8, Y+43	; 0x2b
    4fe6:	7c a4       	ldd	r7, Y+44	; 0x2c
												         MI_Buf[4] = '0';
														  
										 				 break;	
										  }	
								         break;
								case 6:  MI = atof(MI_Buf);	 
    4fe8:	1b 2d       	mov	r17, r11
    4fea:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
			lcd_puts(SN_Buf);
			
			
			while(key != '*')
			{
			    key = GetKeyPressed();
    4fee:	0e 94 a1 04 	call	0x942	; 0x942 <GetKeyPressed>
    4ff2:	90 93 69 03 	sts	0x0369, r25
    4ff6:	80 93 68 03 	sts	0x0368, r24
				sprintf(buf,"%d", CalibrateDataPageCursor);
    4ffa:	00 d0       	rcall	.+0      	; 0x4ffc <Calibrate_Data_Page+0x26a>
    4ffc:	00 d0       	rcall	.+0      	; 0x4ffe <Calibrate_Data_Page+0x26c>
    4ffe:	00 d0       	rcall	.+0      	; 0x5000 <Calibrate_Data_Page+0x26e>
    5000:	ed b7       	in	r30, 0x3d	; 61
    5002:	fe b7       	in	r31, 0x3e	; 62
    5004:	31 96       	adiw	r30, 0x01	; 1
    5006:	22 ef       	ldi	r18, 0xF2	; 242
    5008:	32 e0       	ldi	r19, 0x02	; 2
    500a:	ad b7       	in	r26, 0x3d	; 61
    500c:	be b7       	in	r27, 0x3e	; 62
    500e:	12 96       	adiw	r26, 0x02	; 2
    5010:	3c 93       	st	X, r19
    5012:	2e 93       	st	-X, r18
    5014:	11 97       	sbiw	r26, 0x01	; 1
    5016:	8c e7       	ldi	r24, 0x7C	; 124
    5018:	91 e0       	ldi	r25, 0x01	; 1
    501a:	93 83       	std	Z+3, r25	; 0x03
    501c:	82 83       	std	Z+2, r24	; 0x02
    501e:	9a a5       	ldd	r25, Y+42	; 0x2a
    5020:	94 83       	std	Z+4, r25	; 0x04
    5022:	15 82       	std	Z+5, r1	; 0x05
    5024:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
				USART0_Transmit_String(buf);
    5028:	ad b7       	in	r26, 0x3d	; 61
    502a:	be b7       	in	r27, 0x3e	; 62
    502c:	16 96       	adiw	r26, 0x06	; 6
    502e:	0f b6       	in	r0, 0x3f	; 63
    5030:	f8 94       	cli
    5032:	be bf       	out	0x3e, r27	; 62
    5034:	0f be       	out	0x3f, r0	; 63
    5036:	ad bf       	out	0x3d, r26	; 61
    5038:	82 ef       	ldi	r24, 0xF2	; 242
    503a:	92 e0       	ldi	r25, 0x02	; 2
    503c:	0e 94 ed 02 	call	0x5da	; 0x5da <USART0_Transmit_String>
				sprintf(buf,"%c", key);
    5040:	00 d0       	rcall	.+0      	; 0x5042 <Calibrate_Data_Page+0x2b0>
    5042:	00 d0       	rcall	.+0      	; 0x5044 <Calibrate_Data_Page+0x2b2>
    5044:	00 d0       	rcall	.+0      	; 0x5046 <Calibrate_Data_Page+0x2b4>
    5046:	ed b7       	in	r30, 0x3d	; 61
    5048:	fe b7       	in	r31, 0x3e	; 62
    504a:	31 96       	adiw	r30, 0x01	; 1
    504c:	22 ef       	ldi	r18, 0xF2	; 242
    504e:	32 e0       	ldi	r19, 0x02	; 2
    5050:	ad b7       	in	r26, 0x3d	; 61
    5052:	be b7       	in	r27, 0x3e	; 62
    5054:	12 96       	adiw	r26, 0x02	; 2
    5056:	3c 93       	st	X, r19
    5058:	2e 93       	st	-X, r18
    505a:	11 97       	sbiw	r26, 0x01	; 1
    505c:	8f e7       	ldi	r24, 0x7F	; 127
    505e:	91 e0       	ldi	r25, 0x01	; 1
    5060:	93 83       	std	Z+3, r25	; 0x03
    5062:	82 83       	std	Z+2, r24	; 0x02
    5064:	80 91 68 03 	lds	r24, 0x0368
    5068:	90 91 69 03 	lds	r25, 0x0369
    506c:	95 83       	std	Z+5, r25	; 0x05
    506e:	84 83       	std	Z+4, r24	; 0x04
    5070:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
				USART0_Transmit_String(buf);
    5074:	ad b7       	in	r26, 0x3d	; 61
    5076:	be b7       	in	r27, 0x3e	; 62
    5078:	16 96       	adiw	r26, 0x06	; 6
    507a:	0f b6       	in	r0, 0x3f	; 63
    507c:	f8 94       	cli
    507e:	be bf       	out	0x3e, r27	; 62
    5080:	0f be       	out	0x3f, r0	; 63
    5082:	ad bf       	out	0x3d, r26	; 61
    5084:	82 ef       	ldi	r24, 0xF2	; 242
    5086:	92 e0       	ldi	r25, 0x02	; 2
    5088:	0e 94 ed 02 	call	0x5da	; 0x5da <USART0_Transmit_String>
				USART0_Transmit_Char(13);
    508c:	8d e0       	ldi	r24, 0x0D	; 13
    508e:	0e 94 21 01 	call	0x242	; 0x242 <USART0_Transmit_Char>
				    if(key == 'A')
    5092:	80 91 68 03 	lds	r24, 0x0368
    5096:	90 91 69 03 	lds	r25, 0x0369
    509a:	81 34       	cpi	r24, 0x41	; 65
    509c:	91 05       	cpc	r25, r1
    509e:	61 f4       	brne	.+24     	; 0x50b8 <Calibrate_Data_Page+0x326>
    50a0:	88 eb       	ldi	r24, 0xB8	; 184
    50a2:	9b e0       	ldi	r25, 0x0B	; 11
    50a4:	e0 e9       	ldi	r30, 0x90	; 144
    50a6:	f1 e0       	ldi	r31, 0x01	; 1
    50a8:	31 97       	sbiw	r30, 0x01	; 1
    50aa:	f1 f7       	brne	.-4      	; 0x50a8 <Calibrate_Data_Page+0x316>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    50ac:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    50ae:	d1 f7       	brne	.-12     	; 0x50a4 <Calibrate_Data_Page+0x312>
					{
					    _delay_ms(300);
						CalibrateDataPageCursor--;
    50b0:	ba a5       	ldd	r27, Y+42	; 0x2a
    50b2:	b1 50       	subi	r27, 0x01	; 1
    50b4:	ba a7       	std	Y+42, r27	; 0x2a
    50b6:	28 c0       	rjmp	.+80     	; 0x5108 <Calibrate_Data_Page+0x376>
					}
			 	    if(key == 'B')
    50b8:	82 34       	cpi	r24, 0x42	; 66
    50ba:	91 05       	cpc	r25, r1
    50bc:	61 f4       	brne	.+24     	; 0x50d6 <Calibrate_Data_Page+0x344>
    50be:	88 eb       	ldi	r24, 0xB8	; 184
    50c0:	9b e0       	ldi	r25, 0x0B	; 11
    50c2:	e0 e9       	ldi	r30, 0x90	; 144
    50c4:	f1 e0       	ldi	r31, 0x01	; 1
    50c6:	31 97       	sbiw	r30, 0x01	; 1
    50c8:	f1 f7       	brne	.-4      	; 0x50c6 <Calibrate_Data_Page+0x334>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    50ca:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    50cc:	d1 f7       	brne	.-12     	; 0x50c2 <Calibrate_Data_Page+0x330>
					{
						_delay_ms(300); 
						CalibrateDataPageCursor++;
    50ce:	2a a5       	ldd	r18, Y+42	; 0x2a
    50d0:	2f 5f       	subi	r18, 0xFF	; 255
    50d2:	2a a7       	std	Y+42, r18	; 0x2a
    50d4:	19 c0       	rjmp	.+50     	; 0x5108 <Calibrate_Data_Page+0x376>
					}
					if(key == 'C')
    50d6:	83 34       	cpi	r24, 0x43	; 67
    50d8:	91 05       	cpc	r25, r1
    50da:	51 f4       	brne	.+20     	; 0x50f0 <Calibrate_Data_Page+0x35e>
    50dc:	88 eb       	ldi	r24, 0xB8	; 184
    50de:	9b e0       	ldi	r25, 0x0B	; 11
    50e0:	e0 e9       	ldi	r30, 0x90	; 144
    50e2:	f1 e0       	ldi	r31, 0x01	; 1
    50e4:	31 97       	sbiw	r30, 0x01	; 1
    50e6:	f1 f7       	brne	.-4      	; 0x50e4 <Calibrate_Data_Page+0x352>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    50e8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    50ea:	d1 f7       	brne	.-12     	; 0x50e0 <Calibrate_Data_Page+0x34e>
					{
					    _delay_ms(300);
						CalibrateDataLineCursor--;
    50ec:	9a 94       	dec	r9
    50ee:	12 c0       	rjmp	.+36     	; 0x5114 <Calibrate_Data_Page+0x382>
					}
			 	    if(key == 'D')
    50f0:	84 34       	cpi	r24, 0x44	; 68
    50f2:	91 05       	cpc	r25, r1
    50f4:	49 f4       	brne	.+18     	; 0x5108 <Calibrate_Data_Page+0x376>
    50f6:	88 eb       	ldi	r24, 0xB8	; 184
    50f8:	9b e0       	ldi	r25, 0x0B	; 11
    50fa:	e0 e9       	ldi	r30, 0x90	; 144
    50fc:	f1 e0       	ldi	r31, 0x01	; 1
    50fe:	31 97       	sbiw	r30, 0x01	; 1
    5100:	f1 f7       	brne	.-4      	; 0x50fe <Calibrate_Data_Page+0x36c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5102:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5104:	d1 f7       	brne	.-12     	; 0x50fa <Calibrate_Data_Page+0x368>
					{
						_delay_ms(300); 
						CalibrateDataLineCursor++;
    5106:	93 94       	inc	r9
					}
					if(	CalibrateDataPageCursor > 4)
    5108:	3a a5       	ldd	r19, Y+42	; 0x2a
    510a:	35 30       	cpi	r19, 0x05	; 5
    510c:	18 f0       	brcs	.+6      	; 0x5114 <Calibrate_Data_Page+0x382>
    510e:	84 e0       	ldi	r24, 0x04	; 4
    5110:	8a a7       	std	Y+42, r24	; 0x2a
    5112:	05 c0       	rjmp	.+10     	; 0x511e <Calibrate_Data_Page+0x38c>
					{
						
						CalibrateDataPageCursor = 4;
					}
					if(	CalibrateDataPageCursor < 1)
    5114:	9a a5       	ldd	r25, Y+42	; 0x2a
    5116:	99 23       	and	r25, r25
    5118:	11 f4       	brne	.+4      	; 0x511e <Calibrate_Data_Page+0x38c>
    511a:	a1 e0       	ldi	r26, 0x01	; 1
    511c:	aa a7       	std	Y+42, r26	; 0x2a
					{
							CalibrateDataPageCursor = 1;
					}
					if(	CalibrateDataLineCursor > 7)
    511e:	b7 e0       	ldi	r27, 0x07	; 7
    5120:	b9 15       	cp	r27, r9
    5122:	18 f4       	brcc	.+6      	; 0x512a <Calibrate_Data_Page+0x398>
    5124:	87 e0       	ldi	r24, 0x07	; 7
    5126:	98 2e       	mov	r9, r24
    5128:	04 c0       	rjmp	.+8      	; 0x5132 <Calibrate_Data_Page+0x3a0>
					{
						
						CalibrateDataLineCursor = 7;
					}
					if(	CalibrateDataLineCursor < 1)
    512a:	99 20       	and	r9, r9
    512c:	11 f4       	brne	.+4      	; 0x5132 <Calibrate_Data_Page+0x3a0>
    512e:	99 24       	eor	r9, r9
    5130:	93 94       	inc	r9
					{
							CalibrateDataLineCursor = 1;
					}

					if((CalibrateDataPageCursor <= 3)&&(CalibrateDataPage1_Print_Falg == 0))
    5132:	2a a5       	ldd	r18, Y+42	; 0x2a
    5134:	24 30       	cpi	r18, 0x04	; 4
    5136:	09 f4       	brne	.+2      	; 0x513a <Calibrate_Data_Page+0x3a8>
    5138:	c1 c0       	rjmp	.+386    	; 0x52bc <Calibrate_Data_Page+0x52a>
    513a:	00 23       	and	r16, r16
    513c:	11 f0       	breq	.+4      	; 0x5142 <Calibrate_Data_Page+0x3b0>
    513e:	0c 94 68 3b 	jmp	0x76d0	; 0x76d0 <Calibrate_Data_Page+0x293e>
					{
							lcd_clrscr();
    5142:	0e 94 25 04 	call	0x84a	; 0x84a <lcd_clrscr>
							lcd_gotoxy(0,0);
    5146:	80 e0       	ldi	r24, 0x00	; 0
    5148:	60 e0       	ldi	r22, 0x00	; 0
    514a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("CALIBRATE DATA....");
    514e:	8d e9       	ldi	r24, 0x9D	; 157
    5150:	91 e0       	ldi	r25, 0x01	; 1
    5152:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(0,1);
    5156:	80 e0       	ldi	r24, 0x00	; 0
    5158:	61 e0       	ldi	r22, 0x01	; 1
    515a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("MI");
    515e:	80 eb       	ldi	r24, 0xB0	; 176
    5160:	91 e0       	ldi	r25, 0x01	; 1
    5162:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(0,2);
    5166:	80 e0       	ldi	r24, 0x00	; 0
    5168:	62 e0       	ldi	r22, 0x02	; 2
    516a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("ZO");
    516e:	83 eb       	ldi	r24, 0xB3	; 179
    5170:	91 e0       	ldi	r25, 0x01	; 1
    5172:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(0,3);
    5176:	80 e0       	ldi	r24, 0x00	; 0
    5178:	63 e0       	ldi	r22, 0x03	; 3
    517a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("SN");
    517e:	86 eb       	ldi	r24, 0xB6	; 182
    5180:	91 e0       	ldi	r25, 0x01	; 1
    5182:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(8,1);
    5186:	88 e0       	ldi	r24, 0x08	; 8
    5188:	61 e0       	ldi	r22, 0x01	; 1
    518a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							sprintf(MI_Buf,"%07.3f", MI);
    518e:	40 91 42 03 	lds	r20, 0x0342
    5192:	50 91 43 03 	lds	r21, 0x0343
    5196:	60 91 44 03 	lds	r22, 0x0344
    519a:	70 91 45 03 	lds	r23, 0x0345
    519e:	8d b7       	in	r24, 0x3d	; 61
    51a0:	9e b7       	in	r25, 0x3e	; 62
    51a2:	08 97       	sbiw	r24, 0x08	; 8
    51a4:	0f b6       	in	r0, 0x3f	; 63
    51a6:	f8 94       	cli
    51a8:	9e bf       	out	0x3e, r25	; 62
    51aa:	0f be       	out	0x3f, r0	; 63
    51ac:	8d bf       	out	0x3d, r24	; 61
    51ae:	ed b7       	in	r30, 0x3d	; 61
    51b0:	fe b7       	in	r31, 0x3e	; 62
    51b2:	31 96       	adiw	r30, 0x01	; 1
    51b4:	ad b7       	in	r26, 0x3d	; 61
    51b6:	be b7       	in	r27, 0x3e	; 62
    51b8:	11 96       	adiw	r26, 0x01	; 1
    51ba:	ac 92       	st	X, r10
    51bc:	11 97       	sbiw	r26, 0x01	; 1
    51be:	12 96       	adiw	r26, 0x02	; 2
    51c0:	1c 93       	st	X, r17
    51c2:	e2 82       	std	Z+2, r14	; 0x02
    51c4:	f3 82       	std	Z+3, r15	; 0x03
    51c6:	44 83       	std	Z+4, r20	; 0x04
    51c8:	55 83       	std	Z+5, r21	; 0x05
    51ca:	66 83       	std	Z+6, r22	; 0x06
    51cc:	77 83       	std	Z+7, r23	; 0x07
    51ce:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
							lcd_puts(MI_Buf);
    51d2:	2d b7       	in	r18, 0x3d	; 61
    51d4:	3e b7       	in	r19, 0x3e	; 62
    51d6:	28 5f       	subi	r18, 0xF8	; 248
    51d8:	3f 4f       	sbci	r19, 0xFF	; 255
    51da:	0f b6       	in	r0, 0x3f	; 63
    51dc:	f8 94       	cli
    51de:	3e bf       	out	0x3e, r19	; 62
    51e0:	0f be       	out	0x3f, r0	; 63
    51e2:	2d bf       	out	0x3d, r18	; 61
    51e4:	8a 2d       	mov	r24, r10
    51e6:	91 2f       	mov	r25, r17
    51e8:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(8,2);
    51ec:	88 e0       	ldi	r24, 0x08	; 8
    51ee:	62 e0       	ldi	r22, 0x02	; 2
    51f0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							sprintf(ZO_Buf,"%07.3f", ZO);
    51f4:	40 91 b1 02 	lds	r20, 0x02B1
    51f8:	50 91 b2 02 	lds	r21, 0x02B2
    51fc:	60 91 b3 02 	lds	r22, 0x02B3
    5200:	70 91 b4 02 	lds	r23, 0x02B4
    5204:	8d b7       	in	r24, 0x3d	; 61
    5206:	9e b7       	in	r25, 0x3e	; 62
    5208:	08 97       	sbiw	r24, 0x08	; 8
    520a:	0f b6       	in	r0, 0x3f	; 63
    520c:	f8 94       	cli
    520e:	9e bf       	out	0x3e, r25	; 62
    5210:	0f be       	out	0x3f, r0	; 63
    5212:	8d bf       	out	0x3d, r24	; 61
    5214:	ed b7       	in	r30, 0x3d	; 61
    5216:	fe b7       	in	r31, 0x3e	; 62
    5218:	31 96       	adiw	r30, 0x01	; 1
    521a:	ad b7       	in	r26, 0x3d	; 61
    521c:	be b7       	in	r27, 0x3e	; 62
    521e:	11 96       	adiw	r26, 0x01	; 1
    5220:	cc 92       	st	X, r12
    5222:	11 97       	sbiw	r26, 0x01	; 1
    5224:	12 96       	adiw	r26, 0x02	; 2
    5226:	dc 92       	st	X, r13
    5228:	e2 82       	std	Z+2, r14	; 0x02
    522a:	f3 82       	std	Z+3, r15	; 0x03
    522c:	44 83       	std	Z+4, r20	; 0x04
    522e:	55 83       	std	Z+5, r21	; 0x05
    5230:	66 83       	std	Z+6, r22	; 0x06
    5232:	77 83       	std	Z+7, r23	; 0x07
    5234:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
							lcd_puts(ZO_Buf);
    5238:	2d b7       	in	r18, 0x3d	; 61
    523a:	3e b7       	in	r19, 0x3e	; 62
    523c:	28 5f       	subi	r18, 0xF8	; 248
    523e:	3f 4f       	sbci	r19, 0xFF	; 255
    5240:	0f b6       	in	r0, 0x3f	; 63
    5242:	f8 94       	cli
    5244:	3e bf       	out	0x3e, r19	; 62
    5246:	0f be       	out	0x3f, r0	; 63
    5248:	2d bf       	out	0x3d, r18	; 61
    524a:	c6 01       	movw	r24, r12
    524c:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(8,3);
    5250:	88 e0       	ldi	r24, 0x08	; 8
    5252:	63 e0       	ldi	r22, 0x03	; 3
    5254:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							sprintf(SN_Buf,"%07.3f", SN);
    5258:	40 91 ee 02 	lds	r20, 0x02EE
    525c:	50 91 ef 02 	lds	r21, 0x02EF
    5260:	60 91 f0 02 	lds	r22, 0x02F0
    5264:	70 91 f1 02 	lds	r23, 0x02F1
    5268:	8d b7       	in	r24, 0x3d	; 61
    526a:	9e b7       	in	r25, 0x3e	; 62
    526c:	08 97       	sbiw	r24, 0x08	; 8
    526e:	0f b6       	in	r0, 0x3f	; 63
    5270:	f8 94       	cli
    5272:	9e bf       	out	0x3e, r25	; 62
    5274:	0f be       	out	0x3f, r0	; 63
    5276:	8d bf       	out	0x3d, r24	; 61
    5278:	ed b7       	in	r30, 0x3d	; 61
    527a:	fe b7       	in	r31, 0x3e	; 62
    527c:	31 96       	adiw	r30, 0x01	; 1
    527e:	ad b7       	in	r26, 0x3d	; 61
    5280:	be b7       	in	r27, 0x3e	; 62
    5282:	11 96       	adiw	r26, 0x01	; 1
    5284:	8c 92       	st	X, r8
    5286:	11 97       	sbiw	r26, 0x01	; 1
    5288:	12 96       	adiw	r26, 0x02	; 2
    528a:	7c 92       	st	X, r7
    528c:	e2 82       	std	Z+2, r14	; 0x02
    528e:	f3 82       	std	Z+3, r15	; 0x03
    5290:	44 83       	std	Z+4, r20	; 0x04
    5292:	55 83       	std	Z+5, r21	; 0x05
    5294:	66 83       	std	Z+6, r22	; 0x06
    5296:	77 83       	std	Z+7, r23	; 0x07
    5298:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
							lcd_puts(SN_Buf);
    529c:	2d b7       	in	r18, 0x3d	; 61
    529e:	3e b7       	in	r19, 0x3e	; 62
    52a0:	28 5f       	subi	r18, 0xF8	; 248
    52a2:	3f 4f       	sbci	r19, 0xFF	; 255
    52a4:	0f b6       	in	r0, 0x3f	; 63
    52a6:	f8 94       	cli
    52a8:	3e bf       	out	0x3e, r19	; 62
    52aa:	0f be       	out	0x3f, r0	; 63
    52ac:	2d bf       	out	0x3d, r18	; 61
    52ae:	88 2d       	mov	r24, r8
    52b0:	97 2d       	mov	r25, r7
    52b2:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
    52b6:	19 a6       	std	Y+41, r1	; 0x29
    52b8:	0c 94 68 3b 	jmp	0x76d0	; 0x76d0 <Calibrate_Data_Page+0x293e>
							CalibrateDataPage1_Print_Falg = 1;
							CalibrateDataPage2_Print_Falg = 0;
						 
					}
					//ProcessDataPage2_Print_Falg = 0;
					if((CalibrateDataPageCursor >= 4)&&(CalibrateDataPage2_Print_Falg == 0))
    52bc:	39 a5       	ldd	r19, Y+41	; 0x29
    52be:	33 23       	and	r19, r19
    52c0:	11 f0       	breq	.+4      	; 0x52c6 <Calibrate_Data_Page+0x534>
    52c2:	0c 94 6f 3b 	jmp	0x76de	; 0x76de <Calibrate_Data_Page+0x294c>
					{
						USART0_Transmit_String("page 2");
    52c6:	82 e8       	ldi	r24, 0x82	; 130
    52c8:	91 e0       	ldi	r25, 0x01	; 1
    52ca:	0e 94 ed 02 	call	0x5da	; 0x5da <USART0_Transmit_String>
							lcd_clrscr();
    52ce:	0e 94 25 04 	call	0x84a	; 0x84a <lcd_clrscr>
							lcd_gotoxy(0,0);
    52d2:	80 e0       	ldi	r24, 0x00	; 0
    52d4:	60 e0       	ldi	r22, 0x00	; 0
    52d6:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("CALIBRATE DATA....");
    52da:	8d e9       	ldi	r24, 0x9D	; 157
    52dc:	91 e0       	ldi	r25, 0x01	; 1
    52de:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(0,1);
    52e2:	80 e0       	ldi	r24, 0x00	; 0
    52e4:	61 e0       	ldi	r22, 0x01	; 1
    52e6:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("MA");
    52ea:	89 eb       	ldi	r24, 0xB9	; 185
    52ec:	91 e0       	ldi	r25, 0x01	; 1
    52ee:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(8,1);
    52f2:	88 e0       	ldi	r24, 0x08	; 8
    52f4:	61 e0       	ldi	r22, 0x01	; 1
    52f6:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							sprintf(MA_Buf,"%07.3f", MA);
    52fa:	40 91 93 02 	lds	r20, 0x0293
    52fe:	50 91 94 02 	lds	r21, 0x0294
    5302:	60 91 95 02 	lds	r22, 0x0295
    5306:	70 91 96 02 	lds	r23, 0x0296
    530a:	8d b7       	in	r24, 0x3d	; 61
    530c:	9e b7       	in	r25, 0x3e	; 62
    530e:	08 97       	sbiw	r24, 0x08	; 8
    5310:	0f b6       	in	r0, 0x3f	; 63
    5312:	f8 94       	cli
    5314:	9e bf       	out	0x3e, r25	; 62
    5316:	0f be       	out	0x3f, r0	; 63
    5318:	8d bf       	out	0x3d, r24	; 61
    531a:	ed b7       	in	r30, 0x3d	; 61
    531c:	fe b7       	in	r31, 0x3e	; 62
    531e:	31 96       	adiw	r30, 0x01	; 1
    5320:	ad b7       	in	r26, 0x3d	; 61
    5322:	be b7       	in	r27, 0x3e	; 62
    5324:	12 96       	adiw	r26, 0x02	; 2
    5326:	5c 92       	st	X, r5
    5328:	4e 92       	st	-X, r4
    532a:	11 97       	sbiw	r26, 0x01	; 1
    532c:	e2 82       	std	Z+2, r14	; 0x02
    532e:	f3 82       	std	Z+3, r15	; 0x03
    5330:	44 83       	std	Z+4, r20	; 0x04
    5332:	55 83       	std	Z+5, r21	; 0x05
    5334:	66 83       	std	Z+6, r22	; 0x06
    5336:	77 83       	std	Z+7, r23	; 0x07
    5338:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
							lcd_puts(MA_Buf);
    533c:	2d b7       	in	r18, 0x3d	; 61
    533e:	3e b7       	in	r19, 0x3e	; 62
    5340:	28 5f       	subi	r18, 0xF8	; 248
    5342:	3f 4f       	sbci	r19, 0xFF	; 255
    5344:	0f b6       	in	r0, 0x3f	; 63
    5346:	f8 94       	cli
    5348:	3e bf       	out	0x3e, r19	; 62
    534a:	0f be       	out	0x3f, r0	; 63
    534c:	2d bf       	out	0x3d, r18	; 61
    534e:	c2 01       	movw	r24, r4
    5350:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
    5354:	00 e0       	ldi	r16, 0x00	; 0
    5356:	0c 94 6f 3b 	jmp	0x76de	; 0x76de <Calibrate_Data_Page+0x294c>
					if(CalibrateDataPageCursor == 1)
					{
						   //lcd_gotoxy(8,1);
				           //lcd_command(LCD_DISP_ON_CURSOR_BLINK);
						   //USART0_Transmit_String(W_Span_Buf);
						    switch (CalibrateDataLineCursor)  // Main Menu Switch statement
    535a:	34 e0       	ldi	r19, 0x04	; 4
    535c:	93 16       	cp	r9, r19
    535e:	09 f4       	brne	.+2      	; 0x5362 <Calibrate_Data_Page+0x5d0>
    5360:	41 c2       	rjmp	.+1154   	; 0x57e4 <Calibrate_Data_Page+0xa52>
    5362:	39 15       	cp	r19, r9
    5364:	68 f0       	brcs	.+26     	; 0x5380 <Calibrate_Data_Page+0x5ee>
    5366:	82 e0       	ldi	r24, 0x02	; 2
    5368:	98 16       	cp	r9, r24
    536a:	09 f4       	brne	.+2      	; 0x536e <Calibrate_Data_Page+0x5dc>
    536c:	d5 c0       	rjmp	.+426    	; 0x5518 <Calibrate_Data_Page+0x786>
    536e:	89 15       	cp	r24, r9
    5370:	08 f4       	brcc	.+2      	; 0x5374 <Calibrate_Data_Page+0x5e2>
    5372:	8c c1       	rjmp	.+792    	; 0x568c <Calibrate_Data_Page+0x8fa>
    5374:	91 e0       	ldi	r25, 0x01	; 1
    5376:	99 16       	cp	r9, r25
    5378:	11 f0       	breq	.+4      	; 0x537e <Calibrate_Data_Page+0x5ec>
    537a:	0c 94 a9 32 	jmp	0x6552	; 0x6552 <Calibrate_Data_Page+0x17c0>
    537e:	0d c0       	rjmp	.+26     	; 0x539a <Calibrate_Data_Page+0x608>
    5380:	a6 e0       	ldi	r26, 0x06	; 6
    5382:	9a 16       	cp	r9, r26
    5384:	09 f4       	brne	.+2      	; 0x5388 <Calibrate_Data_Page+0x5f6>
    5386:	e2 c2       	rjmp	.+1476   	; 0x594c <Calibrate_Data_Page+0xbba>
    5388:	9a 16       	cp	r9, r26
    538a:	08 f4       	brcc	.+2      	; 0x538e <Calibrate_Data_Page+0x5fc>
    538c:	33 c2       	rjmp	.+1126   	; 0x57f4 <Calibrate_Data_Page+0xa62>
    538e:	b7 e0       	ldi	r27, 0x07	; 7
    5390:	9b 16       	cp	r9, r27
    5392:	11 f0       	breq	.+4      	; 0x5398 <Calibrate_Data_Page+0x606>
    5394:	0c 94 a9 32 	jmp	0x6552	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5398:	85 c3       	rjmp	.+1802   	; 0x5aa4 <Calibrate_Data_Page+0xd12>
						    {
								case 1:  MI = atof(MI_Buf);	 
    539a:	8a 2d       	mov	r24, r10
    539c:	91 2f       	mov	r25, r17
    539e:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    53a2:	60 93 42 03 	sts	0x0342, r22
    53a6:	70 93 43 03 	sts	0x0343, r23
    53aa:	80 93 44 03 	sts	0x0344, r24
    53ae:	90 93 45 03 	sts	0x0345, r25
										 lcd_gotoxy(8,1);
    53b2:	88 e0       	ldi	r24, 0x08	; 8
    53b4:	61 e0       	ldi	r22, 0x01	; 1
    53b6:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
										 sprintf(MI_Buf,"%07.3f", MI);
    53ba:	40 91 42 03 	lds	r20, 0x0342
    53be:	50 91 43 03 	lds	r21, 0x0343
    53c2:	60 91 44 03 	lds	r22, 0x0344
    53c6:	70 91 45 03 	lds	r23, 0x0345
    53ca:	2d b7       	in	r18, 0x3d	; 61
    53cc:	3e b7       	in	r19, 0x3e	; 62
    53ce:	28 50       	subi	r18, 0x08	; 8
    53d0:	30 40       	sbci	r19, 0x00	; 0
    53d2:	0f b6       	in	r0, 0x3f	; 63
    53d4:	f8 94       	cli
    53d6:	3e bf       	out	0x3e, r19	; 62
    53d8:	0f be       	out	0x3f, r0	; 63
    53da:	2d bf       	out	0x3d, r18	; 61
    53dc:	ed b7       	in	r30, 0x3d	; 61
    53de:	fe b7       	in	r31, 0x3e	; 62
    53e0:	31 96       	adiw	r30, 0x01	; 1
    53e2:	ad b7       	in	r26, 0x3d	; 61
    53e4:	be b7       	in	r27, 0x3e	; 62
    53e6:	11 96       	adiw	r26, 0x01	; 1
    53e8:	ac 92       	st	X, r10
    53ea:	11 97       	sbiw	r26, 0x01	; 1
    53ec:	12 96       	adiw	r26, 0x02	; 2
    53ee:	1c 93       	st	X, r17
    53f0:	e2 82       	std	Z+2, r14	; 0x02
    53f2:	f3 82       	std	Z+3, r15	; 0x03
    53f4:	44 83       	std	Z+4, r20	; 0x04
    53f6:	55 83       	std	Z+5, r21	; 0x05
    53f8:	66 83       	std	Z+6, r22	; 0x06
    53fa:	77 83       	std	Z+7, r23	; 0x07
    53fc:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(MI_Buf);
    5400:	2d b7       	in	r18, 0x3d	; 61
    5402:	3e b7       	in	r19, 0x3e	; 62
    5404:	28 5f       	subi	r18, 0xF8	; 248
    5406:	3f 4f       	sbci	r19, 0xFF	; 255
    5408:	0f b6       	in	r0, 0x3f	; 63
    540a:	f8 94       	cli
    540c:	3e bf       	out	0x3e, r19	; 62
    540e:	0f be       	out	0x3f, r0	; 63
    5410:	2d bf       	out	0x3d, r18	; 61
    5412:	8a 2d       	mov	r24, r10
    5414:	91 2f       	mov	r25, r17
    5416:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(8,1);
    541a:	88 e0       	ldi	r24, 0x08	; 8
    541c:	61 e0       	ldi	r22, 0x01	; 1
    541e:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    5422:	8f e0       	ldi	r24, 0x0F	; 15
    5424:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										  
										  switch (key)  // Main Menu Switch statement
    5428:	80 91 68 03 	lds	r24, 0x0368
    542c:	90 91 69 03 	lds	r25, 0x0369
    5430:	84 33       	cpi	r24, 0x34	; 52
    5432:	91 05       	cpc	r25, r1
    5434:	09 f4       	brne	.+2      	; 0x5438 <Calibrate_Data_Page+0x6a6>
    5436:	42 c0       	rjmp	.+132    	; 0x54bc <Calibrate_Data_Page+0x72a>
    5438:	85 33       	cpi	r24, 0x35	; 53
    543a:	91 05       	cpc	r25, r1
    543c:	9c f4       	brge	.+38     	; 0x5464 <Calibrate_Data_Page+0x6d2>
    543e:	81 33       	cpi	r24, 0x31	; 49
    5440:	91 05       	cpc	r25, r1
    5442:	31 f1       	breq	.+76     	; 0x5490 <Calibrate_Data_Page+0x6fe>
    5444:	82 33       	cpi	r24, 0x32	; 50
    5446:	91 05       	cpc	r25, r1
    5448:	2c f4       	brge	.+10     	; 0x5454 <Calibrate_Data_Page+0x6c2>
    544a:	c0 97       	sbiw	r24, 0x30	; 48
    544c:	11 f0       	breq	.+4      	; 0x5452 <Calibrate_Data_Page+0x6c0>
    544e:	0c 94 a9 32 	jmp	0x6552	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5452:	5b c0       	rjmp	.+182    	; 0x550a <Calibrate_Data_Page+0x778>
    5454:	82 33       	cpi	r24, 0x32	; 50
    5456:	91 05       	cpc	r25, r1
    5458:	19 f1       	breq	.+70     	; 0x54a0 <Calibrate_Data_Page+0x70e>
    545a:	c3 97       	sbiw	r24, 0x33	; 51
    545c:	11 f0       	breq	.+4      	; 0x5462 <Calibrate_Data_Page+0x6d0>
    545e:	0c 94 a9 32 	jmp	0x6552	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5462:	25 c0       	rjmp	.+74     	; 0x54ae <Calibrate_Data_Page+0x71c>
    5464:	87 33       	cpi	r24, 0x37	; 55
    5466:	91 05       	cpc	r25, r1
    5468:	e1 f1       	breq	.+120    	; 0x54e2 <Calibrate_Data_Page+0x750>
    546a:	88 33       	cpi	r24, 0x38	; 56
    546c:	91 05       	cpc	r25, r1
    546e:	44 f4       	brge	.+16     	; 0x5480 <Calibrate_Data_Page+0x6ee>
    5470:	85 33       	cpi	r24, 0x35	; 53
    5472:	91 05       	cpc	r25, r1
    5474:	49 f1       	breq	.+82     	; 0x54c8 <Calibrate_Data_Page+0x736>
    5476:	c6 97       	sbiw	r24, 0x36	; 54
    5478:	11 f0       	breq	.+4      	; 0x547e <Calibrate_Data_Page+0x6ec>
    547a:	0c 94 a9 32 	jmp	0x6552	; 0x6552 <Calibrate_Data_Page+0x17c0>
    547e:	2a c0       	rjmp	.+84     	; 0x54d4 <Calibrate_Data_Page+0x742>
    5480:	88 33       	cpi	r24, 0x38	; 56
    5482:	91 05       	cpc	r25, r1
    5484:	a1 f1       	breq	.+104    	; 0x54ee <Calibrate_Data_Page+0x75c>
    5486:	c9 97       	sbiw	r24, 0x39	; 57
    5488:	11 f0       	breq	.+4      	; 0x548e <Calibrate_Data_Page+0x6fc>
    548a:	0c 94 a9 32 	jmp	0x6552	; 0x6552 <Calibrate_Data_Page+0x17c0>
    548e:	36 c0       	rjmp	.+108    	; 0x54fc <Calibrate_Data_Page+0x76a>
										    {
											 
												case '1':lcd_command(LCD_DISP_ON);
    5490:	8c e0       	ldi	r24, 0x0C	; 12
    5492:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[0] = '1';
    5496:	81 e3       	ldi	r24, 0x31	; 49
    5498:	89 83       	std	Y+1, r24	; 0x01
    549a:	01 e0       	ldi	r16, 0x01	; 1
    549c:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														 
														 
								        				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    54a0:	8c e0       	ldi	r24, 0x0C	; 12
    54a2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[0] = '2';
    54a6:	82 e3       	ldi	r24, 0x32	; 50
    54a8:	89 83       	std	Y+1, r24	; 0x01
    54aa:	0c 94 72 3b 	jmp	0x76e4	; 0x76e4 <Calibrate_Data_Page+0x2952>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    54ae:	8c e0       	ldi	r24, 0x0C	; 12
    54b0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[0] = '3';
    54b4:	83 e3       	ldi	r24, 0x33	; 51
    54b6:	89 83       	std	Y+1, r24	; 0x01
    54b8:	0c 94 a9 32 	jmp	0x6552	; 0x6552 <Calibrate_Data_Page+0x17c0>
														 
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    54bc:	8c e0       	ldi	r24, 0x0C	; 12
    54be:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[0] = '4';
    54c2:	39 82       	std	Y+1, r3	; 0x01
    54c4:	0c 94 a9 32 	jmp	0x6552	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    54c8:	8c e0       	ldi	r24, 0x0C	; 12
    54ca:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     MI_Buf[0] = '5';
    54ce:	69 82       	std	Y+1, r6	; 0x01
    54d0:	0c 94 a9 32 	jmp	0x6552	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    54d4:	8c e0       	ldi	r24, 0x0C	; 12
    54d6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[0] = '6';
    54da:	86 e3       	ldi	r24, 0x36	; 54
    54dc:	89 83       	std	Y+1, r24	; 0x01
    54de:	0c 94 a9 32 	jmp	0x6552	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    54e2:	8c e0       	ldi	r24, 0x0C	; 12
    54e4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[0] = '7';
    54e8:	29 82       	std	Y+1, r2	; 0x01
    54ea:	0c 94 a9 32 	jmp	0x6552	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    54ee:	8c e0       	ldi	r24, 0x0C	; 12
    54f0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[0] = '8';
    54f4:	38 e3       	ldi	r19, 0x38	; 56
    54f6:	39 83       	std	Y+1, r19	; 0x01
    54f8:	0c 94 a9 32 	jmp	0x6552	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    54fc:	8c e0       	ldi	r24, 0x0C	; 12
    54fe:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[0] = '9';
    5502:	89 e3       	ldi	r24, 0x39	; 57
    5504:	89 83       	std	Y+1, r24	; 0x01
    5506:	0c 94 a9 32 	jmp	0x6552	; 0x6552 <Calibrate_Data_Page+0x17c0>
														 
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    550a:	8c e0       	ldi	r24, 0x0C	; 12
    550c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[0] = '0';
    5510:	80 e3       	ldi	r24, 0x30	; 48
    5512:	89 83       	std	Y+1, r24	; 0x01
    5514:	0c 94 a9 32 	jmp	0x6552	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
											 }	
																		
								         break;
								case 2:  MI = atof(MI_Buf);	 
    5518:	8a 2d       	mov	r24, r10
    551a:	91 2f       	mov	r25, r17
    551c:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    5520:	60 93 42 03 	sts	0x0342, r22
    5524:	70 93 43 03 	sts	0x0343, r23
    5528:	80 93 44 03 	sts	0x0344, r24
    552c:	90 93 45 03 	sts	0x0345, r25
										 lcd_gotoxy(8,1);
    5530:	88 e0       	ldi	r24, 0x08	; 8
    5532:	61 e0       	ldi	r22, 0x01	; 1
    5534:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
										 sprintf(MI_Buf,"%07.3f", MI);
    5538:	40 91 42 03 	lds	r20, 0x0342
    553c:	50 91 43 03 	lds	r21, 0x0343
    5540:	60 91 44 03 	lds	r22, 0x0344
    5544:	70 91 45 03 	lds	r23, 0x0345
    5548:	ad b7       	in	r26, 0x3d	; 61
    554a:	be b7       	in	r27, 0x3e	; 62
    554c:	18 97       	sbiw	r26, 0x08	; 8
    554e:	0f b6       	in	r0, 0x3f	; 63
    5550:	f8 94       	cli
    5552:	be bf       	out	0x3e, r27	; 62
    5554:	0f be       	out	0x3f, r0	; 63
    5556:	ad bf       	out	0x3d, r26	; 61
    5558:	ed b7       	in	r30, 0x3d	; 61
    555a:	fe b7       	in	r31, 0x3e	; 62
    555c:	31 96       	adiw	r30, 0x01	; 1
    555e:	11 96       	adiw	r26, 0x01	; 1
    5560:	ac 92       	st	X, r10
    5562:	11 97       	sbiw	r26, 0x01	; 1
    5564:	12 96       	adiw	r26, 0x02	; 2
    5566:	1c 93       	st	X, r17
    5568:	e2 82       	std	Z+2, r14	; 0x02
    556a:	f3 82       	std	Z+3, r15	; 0x03
    556c:	44 83       	std	Z+4, r20	; 0x04
    556e:	55 83       	std	Z+5, r21	; 0x05
    5570:	66 83       	std	Z+6, r22	; 0x06
    5572:	77 83       	std	Z+7, r23	; 0x07
    5574:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(MI_Buf); 
    5578:	2d b7       	in	r18, 0x3d	; 61
    557a:	3e b7       	in	r19, 0x3e	; 62
    557c:	28 5f       	subi	r18, 0xF8	; 248
    557e:	3f 4f       	sbci	r19, 0xFF	; 255
    5580:	0f b6       	in	r0, 0x3f	; 63
    5582:	f8 94       	cli
    5584:	3e bf       	out	0x3e, r19	; 62
    5586:	0f be       	out	0x3f, r0	; 63
    5588:	2d bf       	out	0x3d, r18	; 61
    558a:	8a 2d       	mov	r24, r10
    558c:	91 2f       	mov	r25, r17
    558e:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(9,1);
    5592:	89 e0       	ldi	r24, 0x09	; 9
    5594:	61 e0       	ldi	r22, 0x01	; 1
    5596:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    559a:	8f e0       	ldi	r24, 0x0F	; 15
    559c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    55a0:	80 91 68 03 	lds	r24, 0x0368
    55a4:	90 91 69 03 	lds	r25, 0x0369
    55a8:	84 33       	cpi	r24, 0x34	; 52
    55aa:	91 05       	cpc	r25, r1
    55ac:	09 f4       	brne	.+2      	; 0x55b0 <Calibrate_Data_Page+0x81e>
    55ae:	47 c0       	rjmp	.+142    	; 0x563e <Calibrate_Data_Page+0x8ac>
    55b0:	85 33       	cpi	r24, 0x35	; 53
    55b2:	91 05       	cpc	r25, r1
    55b4:	8c f4       	brge	.+34     	; 0x55d8 <Calibrate_Data_Page+0x846>
    55b6:	81 33       	cpi	r24, 0x31	; 49
    55b8:	91 05       	cpc	r25, r1
    55ba:	19 f1       	breq	.+70     	; 0x5602 <Calibrate_Data_Page+0x870>
    55bc:	82 33       	cpi	r24, 0x32	; 50
    55be:	91 05       	cpc	r25, r1
    55c0:	24 f4       	brge	.+8      	; 0x55ca <Calibrate_Data_Page+0x838>
    55c2:	c0 97       	sbiw	r24, 0x30	; 48
    55c4:	09 f0       	breq	.+2      	; 0x55c8 <Calibrate_Data_Page+0x836>
    55c6:	c5 c7       	rjmp	.+3978   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    55c8:	5b c0       	rjmp	.+182    	; 0x5680 <Calibrate_Data_Page+0x8ee>
    55ca:	82 33       	cpi	r24, 0x32	; 50
    55cc:	91 05       	cpc	r25, r1
    55ce:	59 f1       	breq	.+86     	; 0x5626 <Calibrate_Data_Page+0x894>
    55d0:	c3 97       	sbiw	r24, 0x33	; 51
    55d2:	09 f0       	breq	.+2      	; 0x55d6 <Calibrate_Data_Page+0x844>
    55d4:	be c7       	rjmp	.+3964   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    55d6:	2d c0       	rjmp	.+90     	; 0x5632 <Calibrate_Data_Page+0x8a0>
    55d8:	87 33       	cpi	r24, 0x37	; 55
    55da:	91 05       	cpc	r25, r1
    55dc:	09 f4       	brne	.+2      	; 0x55e0 <Calibrate_Data_Page+0x84e>
    55de:	3f c0       	rjmp	.+126    	; 0x565e <Calibrate_Data_Page+0x8cc>
    55e0:	88 33       	cpi	r24, 0x38	; 56
    55e2:	91 05       	cpc	r25, r1
    55e4:	3c f4       	brge	.+14     	; 0x55f4 <Calibrate_Data_Page+0x862>
    55e6:	85 33       	cpi	r24, 0x35	; 53
    55e8:	91 05       	cpc	r25, r1
    55ea:	71 f1       	breq	.+92     	; 0x5648 <Calibrate_Data_Page+0x8b6>
    55ec:	c6 97       	sbiw	r24, 0x36	; 54
    55ee:	09 f0       	breq	.+2      	; 0x55f2 <Calibrate_Data_Page+0x860>
    55f0:	b0 c7       	rjmp	.+3936   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    55f2:	2f c0       	rjmp	.+94     	; 0x5652 <Calibrate_Data_Page+0x8c0>
    55f4:	88 33       	cpi	r24, 0x38	; 56
    55f6:	91 05       	cpc	r25, r1
    55f8:	b9 f1       	breq	.+110    	; 0x5668 <Calibrate_Data_Page+0x8d6>
    55fa:	c9 97       	sbiw	r24, 0x39	; 57
    55fc:	09 f0       	breq	.+2      	; 0x5600 <Calibrate_Data_Page+0x86e>
    55fe:	a9 c7       	rjmp	.+3922   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5600:	39 c0       	rjmp	.+114    	; 0x5674 <Calibrate_Data_Page+0x8e2>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    5602:	8c e0       	ldi	r24, 0x0C	; 12
    5604:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[1] = '1';
    5608:	81 e3       	ldi	r24, 0x31	; 49
    560a:	8a 83       	std	Y+2, r24	; 0x02
														 MI = atof(MI_Buf);	 
    560c:	8a 2d       	mov	r24, r10
    560e:	91 2f       	mov	r25, r17
    5610:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    5614:	60 93 42 03 	sts	0x0342, r22
    5618:	70 93 43 03 	sts	0x0343, r23
    561c:	80 93 44 03 	sts	0x0344, r24
    5620:	90 93 45 03 	sts	0x0345, r25
    5624:	96 c7       	rjmp	.+3884   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    5626:	8c e0       	ldi	r24, 0x0C	; 12
    5628:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[1] = '2';
    562c:	82 e3       	ldi	r24, 0x32	; 50
    562e:	8a 83       	std	Y+2, r24	; 0x02
    5630:	90 c7       	rjmp	.+3872   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    5632:	8c e0       	ldi	r24, 0x0C	; 12
    5634:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[1] = '3';
    5638:	83 e3       	ldi	r24, 0x33	; 51
    563a:	8a 83       	std	Y+2, r24	; 0x02
    563c:	8a c7       	rjmp	.+3860   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    563e:	8c e0       	ldi	r24, 0x0C	; 12
    5640:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[1] = '4';
    5644:	3a 82       	std	Y+2, r3	; 0x02
    5646:	85 c7       	rjmp	.+3850   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    5648:	8c e0       	ldi	r24, 0x0C	; 12
    564a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     MI_Buf[1] = '5';
    564e:	6a 82       	std	Y+2, r6	; 0x02
    5650:	80 c7       	rjmp	.+3840   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    5652:	8c e0       	ldi	r24, 0x0C	; 12
    5654:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[1] = '6';
    5658:	86 e3       	ldi	r24, 0x36	; 54
    565a:	8a 83       	std	Y+2, r24	; 0x02
    565c:	7a c7       	rjmp	.+3828   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														 
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    565e:	8c e0       	ldi	r24, 0x0C	; 12
    5660:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[1] = '7';
    5664:	2a 82       	std	Y+2, r2	; 0x02
    5666:	75 c7       	rjmp	.+3818   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    5668:	8c e0       	ldi	r24, 0x0C	; 12
    566a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[1] = '8';
    566e:	38 e3       	ldi	r19, 0x38	; 56
    5670:	3a 83       	std	Y+2, r19	; 0x02
    5672:	6f c7       	rjmp	.+3806   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														 
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    5674:	8c e0       	ldi	r24, 0x0C	; 12
    5676:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[1] = '9';
    567a:	89 e3       	ldi	r24, 0x39	; 57
    567c:	8a 83       	std	Y+2, r24	; 0x02
    567e:	69 c7       	rjmp	.+3794   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    5680:	8c e0       	ldi	r24, 0x0C	; 12
    5682:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[1] = '0';
    5686:	80 e3       	ldi	r24, 0x30	; 48
    5688:	8a 83       	std	Y+2, r24	; 0x02
    568a:	63 c7       	rjmp	.+3782   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
										  }	
								         break;
								case 3:  MI = atof(MI_Buf);	 
    568c:	8a 2d       	mov	r24, r10
    568e:	91 2f       	mov	r25, r17
    5690:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    5694:	60 93 42 03 	sts	0x0342, r22
    5698:	70 93 43 03 	sts	0x0343, r23
    569c:	80 93 44 03 	sts	0x0344, r24
    56a0:	90 93 45 03 	sts	0x0345, r25
										 lcd_gotoxy(8,1);
    56a4:	88 e0       	ldi	r24, 0x08	; 8
    56a6:	61 e0       	ldi	r22, 0x01	; 1
    56a8:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
										 sprintf(MI_Buf,"%07.3f", MI);
    56ac:	40 91 42 03 	lds	r20, 0x0342
    56b0:	50 91 43 03 	lds	r21, 0x0343
    56b4:	60 91 44 03 	lds	r22, 0x0344
    56b8:	70 91 45 03 	lds	r23, 0x0345
    56bc:	ad b7       	in	r26, 0x3d	; 61
    56be:	be b7       	in	r27, 0x3e	; 62
    56c0:	18 97       	sbiw	r26, 0x08	; 8
    56c2:	0f b6       	in	r0, 0x3f	; 63
    56c4:	f8 94       	cli
    56c6:	be bf       	out	0x3e, r27	; 62
    56c8:	0f be       	out	0x3f, r0	; 63
    56ca:	ad bf       	out	0x3d, r26	; 61
    56cc:	ed b7       	in	r30, 0x3d	; 61
    56ce:	fe b7       	in	r31, 0x3e	; 62
    56d0:	31 96       	adiw	r30, 0x01	; 1
    56d2:	11 96       	adiw	r26, 0x01	; 1
    56d4:	ac 92       	st	X, r10
    56d6:	11 97       	sbiw	r26, 0x01	; 1
    56d8:	12 96       	adiw	r26, 0x02	; 2
    56da:	1c 93       	st	X, r17
    56dc:	e2 82       	std	Z+2, r14	; 0x02
    56de:	f3 82       	std	Z+3, r15	; 0x03
    56e0:	44 83       	std	Z+4, r20	; 0x04
    56e2:	55 83       	std	Z+5, r21	; 0x05
    56e4:	66 83       	std	Z+6, r22	; 0x06
    56e6:	77 83       	std	Z+7, r23	; 0x07
    56e8:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(MI_Buf);
    56ec:	2d b7       	in	r18, 0x3d	; 61
    56ee:	3e b7       	in	r19, 0x3e	; 62
    56f0:	28 5f       	subi	r18, 0xF8	; 248
    56f2:	3f 4f       	sbci	r19, 0xFF	; 255
    56f4:	0f b6       	in	r0, 0x3f	; 63
    56f6:	f8 94       	cli
    56f8:	3e bf       	out	0x3e, r19	; 62
    56fa:	0f be       	out	0x3f, r0	; 63
    56fc:	2d bf       	out	0x3d, r18	; 61
    56fe:	8a 2d       	mov	r24, r10
    5700:	91 2f       	mov	r25, r17
    5702:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(10,1);
    5706:	8a e0       	ldi	r24, 0x0A	; 10
    5708:	61 e0       	ldi	r22, 0x01	; 1
    570a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    570e:	8f e0       	ldi	r24, 0x0F	; 15
    5710:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    5714:	80 91 68 03 	lds	r24, 0x0368
    5718:	90 91 69 03 	lds	r25, 0x0369
    571c:	84 33       	cpi	r24, 0x34	; 52
    571e:	91 05       	cpc	r25, r1
    5720:	d1 f1       	breq	.+116    	; 0x5796 <Calibrate_Data_Page+0xa04>
    5722:	85 33       	cpi	r24, 0x35	; 53
    5724:	91 05       	cpc	r25, r1
    5726:	8c f4       	brge	.+34     	; 0x574a <Calibrate_Data_Page+0x9b8>
    5728:	81 33       	cpi	r24, 0x31	; 49
    572a:	91 05       	cpc	r25, r1
    572c:	11 f1       	breq	.+68     	; 0x5772 <Calibrate_Data_Page+0x9e0>
    572e:	82 33       	cpi	r24, 0x32	; 50
    5730:	91 05       	cpc	r25, r1
    5732:	24 f4       	brge	.+8      	; 0x573c <Calibrate_Data_Page+0x9aa>
    5734:	c0 97       	sbiw	r24, 0x30	; 48
    5736:	09 f0       	breq	.+2      	; 0x573a <Calibrate_Data_Page+0x9a8>
    5738:	0c c7       	rjmp	.+3608   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    573a:	4e c0       	rjmp	.+156    	; 0x57d8 <Calibrate_Data_Page+0xa46>
    573c:	82 33       	cpi	r24, 0x32	; 50
    573e:	91 05       	cpc	r25, r1
    5740:	f1 f0       	breq	.+60     	; 0x577e <Calibrate_Data_Page+0x9ec>
    5742:	c3 97       	sbiw	r24, 0x33	; 51
    5744:	09 f0       	breq	.+2      	; 0x5748 <Calibrate_Data_Page+0x9b6>
    5746:	05 c7       	rjmp	.+3594   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5748:	20 c0       	rjmp	.+64     	; 0x578a <Calibrate_Data_Page+0x9f8>
    574a:	87 33       	cpi	r24, 0x37	; 55
    574c:	91 05       	cpc	r25, r1
    574e:	99 f1       	breq	.+102    	; 0x57b6 <Calibrate_Data_Page+0xa24>
    5750:	88 33       	cpi	r24, 0x38	; 56
    5752:	91 05       	cpc	r25, r1
    5754:	3c f4       	brge	.+14     	; 0x5764 <Calibrate_Data_Page+0x9d2>
    5756:	85 33       	cpi	r24, 0x35	; 53
    5758:	91 05       	cpc	r25, r1
    575a:	11 f1       	breq	.+68     	; 0x57a0 <Calibrate_Data_Page+0xa0e>
    575c:	c6 97       	sbiw	r24, 0x36	; 54
    575e:	09 f0       	breq	.+2      	; 0x5762 <Calibrate_Data_Page+0x9d0>
    5760:	f8 c6       	rjmp	.+3568   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5762:	23 c0       	rjmp	.+70     	; 0x57aa <Calibrate_Data_Page+0xa18>
    5764:	88 33       	cpi	r24, 0x38	; 56
    5766:	91 05       	cpc	r25, r1
    5768:	59 f1       	breq	.+86     	; 0x57c0 <Calibrate_Data_Page+0xa2e>
    576a:	c9 97       	sbiw	r24, 0x39	; 57
    576c:	09 f0       	breq	.+2      	; 0x5770 <Calibrate_Data_Page+0x9de>
    576e:	f1 c6       	rjmp	.+3554   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5770:	2d c0       	rjmp	.+90     	; 0x57cc <Calibrate_Data_Page+0xa3a>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    5772:	8c e0       	ldi	r24, 0x0C	; 12
    5774:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[2] = '1';
    5778:	81 e3       	ldi	r24, 0x31	; 49
    577a:	8b 83       	std	Y+3, r24	; 0x03
    577c:	ea c6       	rjmp	.+3540   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    577e:	8c e0       	ldi	r24, 0x0C	; 12
    5780:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[2] = '2';
    5784:	82 e3       	ldi	r24, 0x32	; 50
    5786:	8b 83       	std	Y+3, r24	; 0x03
    5788:	e4 c6       	rjmp	.+3528   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    578a:	8c e0       	ldi	r24, 0x0C	; 12
    578c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[2] = '3';
    5790:	83 e3       	ldi	r24, 0x33	; 51
    5792:	8b 83       	std	Y+3, r24	; 0x03
    5794:	de c6       	rjmp	.+3516   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    5796:	8c e0       	ldi	r24, 0x0C	; 12
    5798:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[2] = '4';
    579c:	3b 82       	std	Y+3, r3	; 0x03
    579e:	d9 c6       	rjmp	.+3506   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    57a0:	8c e0       	ldi	r24, 0x0C	; 12
    57a2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     MI_Buf[2] = '5';
    57a6:	6b 82       	std	Y+3, r6	; 0x03
    57a8:	d4 c6       	rjmp	.+3496   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														 
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    57aa:	8c e0       	ldi	r24, 0x0C	; 12
    57ac:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[2] = '6';
    57b0:	86 e3       	ldi	r24, 0x36	; 54
    57b2:	8b 83       	std	Y+3, r24	; 0x03
    57b4:	ce c6       	rjmp	.+3484   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    57b6:	8c e0       	ldi	r24, 0x0C	; 12
    57b8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[2] = '7';
    57bc:	2b 82       	std	Y+3, r2	; 0x03
    57be:	c9 c6       	rjmp	.+3474   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    57c0:	8c e0       	ldi	r24, 0x0C	; 12
    57c2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[2] = '8';
    57c6:	38 e3       	ldi	r19, 0x38	; 56
    57c8:	3b 83       	std	Y+3, r19	; 0x03
    57ca:	c3 c6       	rjmp	.+3462   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    57cc:	8c e0       	ldi	r24, 0x0C	; 12
    57ce:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[2] = '9';
    57d2:	89 e3       	ldi	r24, 0x39	; 57
    57d4:	8b 83       	std	Y+3, r24	; 0x03
    57d6:	bd c6       	rjmp	.+3450   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    57d8:	8c e0       	ldi	r24, 0x0C	; 12
    57da:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[2] = '0';
    57de:	80 e3       	ldi	r24, 0x30	; 48
    57e0:	8b 83       	std	Y+3, r24	; 0x03
    57e2:	b7 c6       	rjmp	.+3438   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
										  }	
								         break;
								case 4:  lcd_gotoxy(11,1);
    57e4:	8b e0       	ldi	r24, 0x0B	; 11
    57e6:	61 e0       	ldi	r22, 0x01	; 1
    57e8:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    57ec:	8f e0       	ldi	r24, 0x0F	; 15
    57ee:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
    57f2:	af c6       	rjmp	.+3422   	; 0x6552 <Calibrate_Data_Page+0x17c0>
								         break;
								case 5:  MI = atof(MI_Buf);	 
    57f4:	8a 2d       	mov	r24, r10
    57f6:	91 2f       	mov	r25, r17
    57f8:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    57fc:	60 93 42 03 	sts	0x0342, r22
    5800:	70 93 43 03 	sts	0x0343, r23
    5804:	80 93 44 03 	sts	0x0344, r24
    5808:	90 93 45 03 	sts	0x0345, r25
										 lcd_gotoxy(8,1);
    580c:	88 e0       	ldi	r24, 0x08	; 8
    580e:	61 e0       	ldi	r22, 0x01	; 1
    5810:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
										 sprintf(MI_Buf,"%07.3f", MI);
    5814:	40 91 42 03 	lds	r20, 0x0342
    5818:	50 91 43 03 	lds	r21, 0x0343
    581c:	60 91 44 03 	lds	r22, 0x0344
    5820:	70 91 45 03 	lds	r23, 0x0345
    5824:	ad b7       	in	r26, 0x3d	; 61
    5826:	be b7       	in	r27, 0x3e	; 62
    5828:	18 97       	sbiw	r26, 0x08	; 8
    582a:	0f b6       	in	r0, 0x3f	; 63
    582c:	f8 94       	cli
    582e:	be bf       	out	0x3e, r27	; 62
    5830:	0f be       	out	0x3f, r0	; 63
    5832:	ad bf       	out	0x3d, r26	; 61
    5834:	ed b7       	in	r30, 0x3d	; 61
    5836:	fe b7       	in	r31, 0x3e	; 62
    5838:	31 96       	adiw	r30, 0x01	; 1
    583a:	11 96       	adiw	r26, 0x01	; 1
    583c:	ac 92       	st	X, r10
    583e:	11 97       	sbiw	r26, 0x01	; 1
    5840:	12 96       	adiw	r26, 0x02	; 2
    5842:	1c 93       	st	X, r17
    5844:	e2 82       	std	Z+2, r14	; 0x02
    5846:	f3 82       	std	Z+3, r15	; 0x03
    5848:	44 83       	std	Z+4, r20	; 0x04
    584a:	55 83       	std	Z+5, r21	; 0x05
    584c:	66 83       	std	Z+6, r22	; 0x06
    584e:	77 83       	std	Z+7, r23	; 0x07
    5850:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(MI_Buf);
    5854:	2d b7       	in	r18, 0x3d	; 61
    5856:	3e b7       	in	r19, 0x3e	; 62
    5858:	28 5f       	subi	r18, 0xF8	; 248
    585a:	3f 4f       	sbci	r19, 0xFF	; 255
    585c:	0f b6       	in	r0, 0x3f	; 63
    585e:	f8 94       	cli
    5860:	3e bf       	out	0x3e, r19	; 62
    5862:	0f be       	out	0x3f, r0	; 63
    5864:	2d bf       	out	0x3d, r18	; 61
    5866:	8a 2d       	mov	r24, r10
    5868:	91 2f       	mov	r25, r17
    586a:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(12,1);
    586e:	8c e0       	ldi	r24, 0x0C	; 12
    5870:	61 e0       	ldi	r22, 0x01	; 1
    5872:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    5876:	8f e0       	ldi	r24, 0x0F	; 15
    5878:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    587c:	80 91 68 03 	lds	r24, 0x0368
    5880:	90 91 69 03 	lds	r25, 0x0369
    5884:	84 33       	cpi	r24, 0x34	; 52
    5886:	91 05       	cpc	r25, r1
    5888:	d1 f1       	breq	.+116    	; 0x58fe <Calibrate_Data_Page+0xb6c>
    588a:	85 33       	cpi	r24, 0x35	; 53
    588c:	91 05       	cpc	r25, r1
    588e:	8c f4       	brge	.+34     	; 0x58b2 <Calibrate_Data_Page+0xb20>
    5890:	81 33       	cpi	r24, 0x31	; 49
    5892:	91 05       	cpc	r25, r1
    5894:	11 f1       	breq	.+68     	; 0x58da <Calibrate_Data_Page+0xb48>
    5896:	82 33       	cpi	r24, 0x32	; 50
    5898:	91 05       	cpc	r25, r1
    589a:	24 f4       	brge	.+8      	; 0x58a4 <Calibrate_Data_Page+0xb12>
    589c:	c0 97       	sbiw	r24, 0x30	; 48
    589e:	09 f0       	breq	.+2      	; 0x58a2 <Calibrate_Data_Page+0xb10>
    58a0:	58 c6       	rjmp	.+3248   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    58a2:	4e c0       	rjmp	.+156    	; 0x5940 <Calibrate_Data_Page+0xbae>
    58a4:	82 33       	cpi	r24, 0x32	; 50
    58a6:	91 05       	cpc	r25, r1
    58a8:	f1 f0       	breq	.+60     	; 0x58e6 <Calibrate_Data_Page+0xb54>
    58aa:	c3 97       	sbiw	r24, 0x33	; 51
    58ac:	09 f0       	breq	.+2      	; 0x58b0 <Calibrate_Data_Page+0xb1e>
    58ae:	51 c6       	rjmp	.+3234   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    58b0:	20 c0       	rjmp	.+64     	; 0x58f2 <Calibrate_Data_Page+0xb60>
    58b2:	87 33       	cpi	r24, 0x37	; 55
    58b4:	91 05       	cpc	r25, r1
    58b6:	99 f1       	breq	.+102    	; 0x591e <Calibrate_Data_Page+0xb8c>
    58b8:	88 33       	cpi	r24, 0x38	; 56
    58ba:	91 05       	cpc	r25, r1
    58bc:	3c f4       	brge	.+14     	; 0x58cc <Calibrate_Data_Page+0xb3a>
    58be:	85 33       	cpi	r24, 0x35	; 53
    58c0:	91 05       	cpc	r25, r1
    58c2:	11 f1       	breq	.+68     	; 0x5908 <Calibrate_Data_Page+0xb76>
    58c4:	c6 97       	sbiw	r24, 0x36	; 54
    58c6:	09 f0       	breq	.+2      	; 0x58ca <Calibrate_Data_Page+0xb38>
    58c8:	44 c6       	rjmp	.+3208   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    58ca:	23 c0       	rjmp	.+70     	; 0x5912 <Calibrate_Data_Page+0xb80>
    58cc:	88 33       	cpi	r24, 0x38	; 56
    58ce:	91 05       	cpc	r25, r1
    58d0:	59 f1       	breq	.+86     	; 0x5928 <Calibrate_Data_Page+0xb96>
    58d2:	c9 97       	sbiw	r24, 0x39	; 57
    58d4:	09 f0       	breq	.+2      	; 0x58d8 <Calibrate_Data_Page+0xb46>
    58d6:	3d c6       	rjmp	.+3194   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    58d8:	2d c0       	rjmp	.+90     	; 0x5934 <Calibrate_Data_Page+0xba2>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    58da:	8c e0       	ldi	r24, 0x0C	; 12
    58dc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[4] = '1';
    58e0:	81 e3       	ldi	r24, 0x31	; 49
    58e2:	8d 83       	std	Y+5, r24	; 0x05
    58e4:	36 c6       	rjmp	.+3180   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														 
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    58e6:	8c e0       	ldi	r24, 0x0C	; 12
    58e8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[4] = '2';
    58ec:	82 e3       	ldi	r24, 0x32	; 50
    58ee:	8d 83       	std	Y+5, r24	; 0x05
    58f0:	30 c6       	rjmp	.+3168   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    58f2:	8c e0       	ldi	r24, 0x0C	; 12
    58f4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[4] = '3';
    58f8:	83 e3       	ldi	r24, 0x33	; 51
    58fa:	8d 83       	std	Y+5, r24	; 0x05
    58fc:	2a c6       	rjmp	.+3156   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    58fe:	8c e0       	ldi	r24, 0x0C	; 12
    5900:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[4] = '4';
    5904:	3d 82       	std	Y+5, r3	; 0x05
    5906:	25 c6       	rjmp	.+3146   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    5908:	8c e0       	ldi	r24, 0x0C	; 12
    590a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     MI_Buf[4] = '5';
    590e:	6d 82       	std	Y+5, r6	; 0x05
    5910:	20 c6       	rjmp	.+3136   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    5912:	8c e0       	ldi	r24, 0x0C	; 12
    5914:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[4] = '6';
    5918:	86 e3       	ldi	r24, 0x36	; 54
    591a:	8d 83       	std	Y+5, r24	; 0x05
    591c:	1a c6       	rjmp	.+3124   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    591e:	8c e0       	ldi	r24, 0x0C	; 12
    5920:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[4] = '7';
    5924:	2d 82       	std	Y+5, r2	; 0x05
    5926:	15 c6       	rjmp	.+3114   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    5928:	8c e0       	ldi	r24, 0x0C	; 12
    592a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[4] = '8';
    592e:	38 e3       	ldi	r19, 0x38	; 56
    5930:	3d 83       	std	Y+5, r19	; 0x05
    5932:	0f c6       	rjmp	.+3102   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    5934:	8c e0       	ldi	r24, 0x0C	; 12
    5936:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[4] = '9';
    593a:	89 e3       	ldi	r24, 0x39	; 57
    593c:	8d 83       	std	Y+5, r24	; 0x05
    593e:	09 c6       	rjmp	.+3090   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														 
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    5940:	8c e0       	ldi	r24, 0x0C	; 12
    5942:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[4] = '0';
    5946:	80 e3       	ldi	r24, 0x30	; 48
    5948:	8d 83       	std	Y+5, r24	; 0x05
    594a:	03 c6       	rjmp	.+3078   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
										  }	
								         break;
								case 6:  MI = atof(MI_Buf);	 
    594c:	8a 2d       	mov	r24, r10
    594e:	91 2f       	mov	r25, r17
    5950:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    5954:	60 93 42 03 	sts	0x0342, r22
    5958:	70 93 43 03 	sts	0x0343, r23
    595c:	80 93 44 03 	sts	0x0344, r24
    5960:	90 93 45 03 	sts	0x0345, r25
										 lcd_gotoxy(8,1);
    5964:	88 e0       	ldi	r24, 0x08	; 8
    5966:	61 e0       	ldi	r22, 0x01	; 1
    5968:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
										 sprintf(MI_Buf,"%07.3f", MI);
    596c:	40 91 42 03 	lds	r20, 0x0342
    5970:	50 91 43 03 	lds	r21, 0x0343
    5974:	60 91 44 03 	lds	r22, 0x0344
    5978:	70 91 45 03 	lds	r23, 0x0345
    597c:	ad b7       	in	r26, 0x3d	; 61
    597e:	be b7       	in	r27, 0x3e	; 62
    5980:	18 97       	sbiw	r26, 0x08	; 8
    5982:	0f b6       	in	r0, 0x3f	; 63
    5984:	f8 94       	cli
    5986:	be bf       	out	0x3e, r27	; 62
    5988:	0f be       	out	0x3f, r0	; 63
    598a:	ad bf       	out	0x3d, r26	; 61
    598c:	ed b7       	in	r30, 0x3d	; 61
    598e:	fe b7       	in	r31, 0x3e	; 62
    5990:	31 96       	adiw	r30, 0x01	; 1
    5992:	11 96       	adiw	r26, 0x01	; 1
    5994:	ac 92       	st	X, r10
    5996:	11 97       	sbiw	r26, 0x01	; 1
    5998:	12 96       	adiw	r26, 0x02	; 2
    599a:	1c 93       	st	X, r17
    599c:	e2 82       	std	Z+2, r14	; 0x02
    599e:	f3 82       	std	Z+3, r15	; 0x03
    59a0:	44 83       	std	Z+4, r20	; 0x04
    59a2:	55 83       	std	Z+5, r21	; 0x05
    59a4:	66 83       	std	Z+6, r22	; 0x06
    59a6:	77 83       	std	Z+7, r23	; 0x07
    59a8:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(MI_Buf);
    59ac:	2d b7       	in	r18, 0x3d	; 61
    59ae:	3e b7       	in	r19, 0x3e	; 62
    59b0:	28 5f       	subi	r18, 0xF8	; 248
    59b2:	3f 4f       	sbci	r19, 0xFF	; 255
    59b4:	0f b6       	in	r0, 0x3f	; 63
    59b6:	f8 94       	cli
    59b8:	3e bf       	out	0x3e, r19	; 62
    59ba:	0f be       	out	0x3f, r0	; 63
    59bc:	2d bf       	out	0x3d, r18	; 61
    59be:	8a 2d       	mov	r24, r10
    59c0:	91 2f       	mov	r25, r17
    59c2:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(13,1);
    59c6:	8d e0       	ldi	r24, 0x0D	; 13
    59c8:	61 e0       	ldi	r22, 0x01	; 1
    59ca:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    59ce:	8f e0       	ldi	r24, 0x0F	; 15
    59d0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    59d4:	80 91 68 03 	lds	r24, 0x0368
    59d8:	90 91 69 03 	lds	r25, 0x0369
    59dc:	84 33       	cpi	r24, 0x34	; 52
    59de:	91 05       	cpc	r25, r1
    59e0:	d1 f1       	breq	.+116    	; 0x5a56 <Calibrate_Data_Page+0xcc4>
    59e2:	85 33       	cpi	r24, 0x35	; 53
    59e4:	91 05       	cpc	r25, r1
    59e6:	8c f4       	brge	.+34     	; 0x5a0a <Calibrate_Data_Page+0xc78>
    59e8:	81 33       	cpi	r24, 0x31	; 49
    59ea:	91 05       	cpc	r25, r1
    59ec:	11 f1       	breq	.+68     	; 0x5a32 <Calibrate_Data_Page+0xca0>
    59ee:	82 33       	cpi	r24, 0x32	; 50
    59f0:	91 05       	cpc	r25, r1
    59f2:	24 f4       	brge	.+8      	; 0x59fc <Calibrate_Data_Page+0xc6a>
    59f4:	c0 97       	sbiw	r24, 0x30	; 48
    59f6:	09 f0       	breq	.+2      	; 0x59fa <Calibrate_Data_Page+0xc68>
    59f8:	ac c5       	rjmp	.+2904   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    59fa:	4e c0       	rjmp	.+156    	; 0x5a98 <Calibrate_Data_Page+0xd06>
    59fc:	82 33       	cpi	r24, 0x32	; 50
    59fe:	91 05       	cpc	r25, r1
    5a00:	f1 f0       	breq	.+60     	; 0x5a3e <Calibrate_Data_Page+0xcac>
    5a02:	c3 97       	sbiw	r24, 0x33	; 51
    5a04:	09 f0       	breq	.+2      	; 0x5a08 <Calibrate_Data_Page+0xc76>
    5a06:	a5 c5       	rjmp	.+2890   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5a08:	20 c0       	rjmp	.+64     	; 0x5a4a <Calibrate_Data_Page+0xcb8>
    5a0a:	87 33       	cpi	r24, 0x37	; 55
    5a0c:	91 05       	cpc	r25, r1
    5a0e:	99 f1       	breq	.+102    	; 0x5a76 <Calibrate_Data_Page+0xce4>
    5a10:	88 33       	cpi	r24, 0x38	; 56
    5a12:	91 05       	cpc	r25, r1
    5a14:	3c f4       	brge	.+14     	; 0x5a24 <Calibrate_Data_Page+0xc92>
    5a16:	85 33       	cpi	r24, 0x35	; 53
    5a18:	91 05       	cpc	r25, r1
    5a1a:	11 f1       	breq	.+68     	; 0x5a60 <Calibrate_Data_Page+0xcce>
    5a1c:	c6 97       	sbiw	r24, 0x36	; 54
    5a1e:	09 f0       	breq	.+2      	; 0x5a22 <Calibrate_Data_Page+0xc90>
    5a20:	98 c5       	rjmp	.+2864   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5a22:	23 c0       	rjmp	.+70     	; 0x5a6a <Calibrate_Data_Page+0xcd8>
    5a24:	88 33       	cpi	r24, 0x38	; 56
    5a26:	91 05       	cpc	r25, r1
    5a28:	59 f1       	breq	.+86     	; 0x5a80 <Calibrate_Data_Page+0xcee>
    5a2a:	c9 97       	sbiw	r24, 0x39	; 57
    5a2c:	09 f0       	breq	.+2      	; 0x5a30 <Calibrate_Data_Page+0xc9e>
    5a2e:	91 c5       	rjmp	.+2850   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5a30:	2d c0       	rjmp	.+90     	; 0x5a8c <Calibrate_Data_Page+0xcfa>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    5a32:	8c e0       	ldi	r24, 0x0C	; 12
    5a34:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[5] = '1';
    5a38:	81 e3       	ldi	r24, 0x31	; 49
    5a3a:	8e 83       	std	Y+6, r24	; 0x06
    5a3c:	8a c5       	rjmp	.+2836   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    5a3e:	8c e0       	ldi	r24, 0x0C	; 12
    5a40:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[5] = '2';
    5a44:	82 e3       	ldi	r24, 0x32	; 50
    5a46:	8e 83       	std	Y+6, r24	; 0x06
    5a48:	84 c5       	rjmp	.+2824   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    5a4a:	8c e0       	ldi	r24, 0x0C	; 12
    5a4c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[5] = '3';
    5a50:	83 e3       	ldi	r24, 0x33	; 51
    5a52:	8e 83       	std	Y+6, r24	; 0x06
    5a54:	7e c5       	rjmp	.+2812   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    5a56:	8c e0       	ldi	r24, 0x0C	; 12
    5a58:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[5] = '4';
    5a5c:	3e 82       	std	Y+6, r3	; 0x06
    5a5e:	79 c5       	rjmp	.+2802   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    5a60:	8c e0       	ldi	r24, 0x0C	; 12
    5a62:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     MI_Buf[5] = '5';
    5a66:	6e 82       	std	Y+6, r6	; 0x06
    5a68:	74 c5       	rjmp	.+2792   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    5a6a:	8c e0       	ldi	r24, 0x0C	; 12
    5a6c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[5] = '6';
    5a70:	86 e3       	ldi	r24, 0x36	; 54
    5a72:	8e 83       	std	Y+6, r24	; 0x06
    5a74:	6e c5       	rjmp	.+2780   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    5a76:	8c e0       	ldi	r24, 0x0C	; 12
    5a78:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[5] = '7';
    5a7c:	2e 82       	std	Y+6, r2	; 0x06
    5a7e:	69 c5       	rjmp	.+2770   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    5a80:	8c e0       	ldi	r24, 0x0C	; 12
    5a82:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[5] = '8';
    5a86:	38 e3       	ldi	r19, 0x38	; 56
    5a88:	3e 83       	std	Y+6, r19	; 0x06
    5a8a:	63 c5       	rjmp	.+2758   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    5a8c:	8c e0       	ldi	r24, 0x0C	; 12
    5a8e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[5] = '9';
    5a92:	89 e3       	ldi	r24, 0x39	; 57
    5a94:	8e 83       	std	Y+6, r24	; 0x06
    5a96:	5d c5       	rjmp	.+2746   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    5a98:	8c e0       	ldi	r24, 0x0C	; 12
    5a9a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[5] = '0';
    5a9e:	80 e3       	ldi	r24, 0x30	; 48
    5aa0:	8e 83       	std	Y+6, r24	; 0x06
    5aa2:	57 c5       	rjmp	.+2734   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
										  }	
								         break;
								case 7:  MI = atof(MI_Buf);	 
    5aa4:	8a 2d       	mov	r24, r10
    5aa6:	91 2f       	mov	r25, r17
    5aa8:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    5aac:	60 93 42 03 	sts	0x0342, r22
    5ab0:	70 93 43 03 	sts	0x0343, r23
    5ab4:	80 93 44 03 	sts	0x0344, r24
    5ab8:	90 93 45 03 	sts	0x0345, r25
										 lcd_gotoxy(8,1);
    5abc:	88 e0       	ldi	r24, 0x08	; 8
    5abe:	61 e0       	ldi	r22, 0x01	; 1
    5ac0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
										 sprintf(MI_Buf,"%07.3f", MI);
    5ac4:	40 91 42 03 	lds	r20, 0x0342
    5ac8:	50 91 43 03 	lds	r21, 0x0343
    5acc:	60 91 44 03 	lds	r22, 0x0344
    5ad0:	70 91 45 03 	lds	r23, 0x0345
    5ad4:	ad b7       	in	r26, 0x3d	; 61
    5ad6:	be b7       	in	r27, 0x3e	; 62
    5ad8:	18 97       	sbiw	r26, 0x08	; 8
    5ada:	0f b6       	in	r0, 0x3f	; 63
    5adc:	f8 94       	cli
    5ade:	be bf       	out	0x3e, r27	; 62
    5ae0:	0f be       	out	0x3f, r0	; 63
    5ae2:	ad bf       	out	0x3d, r26	; 61
    5ae4:	ed b7       	in	r30, 0x3d	; 61
    5ae6:	fe b7       	in	r31, 0x3e	; 62
    5ae8:	31 96       	adiw	r30, 0x01	; 1
    5aea:	11 96       	adiw	r26, 0x01	; 1
    5aec:	ac 92       	st	X, r10
    5aee:	11 97       	sbiw	r26, 0x01	; 1
    5af0:	12 96       	adiw	r26, 0x02	; 2
    5af2:	1c 93       	st	X, r17
    5af4:	e2 82       	std	Z+2, r14	; 0x02
    5af6:	f3 82       	std	Z+3, r15	; 0x03
    5af8:	44 83       	std	Z+4, r20	; 0x04
    5afa:	55 83       	std	Z+5, r21	; 0x05
    5afc:	66 83       	std	Z+6, r22	; 0x06
    5afe:	77 83       	std	Z+7, r23	; 0x07
    5b00:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(MI_Buf);
    5b04:	2d b7       	in	r18, 0x3d	; 61
    5b06:	3e b7       	in	r19, 0x3e	; 62
    5b08:	28 5f       	subi	r18, 0xF8	; 248
    5b0a:	3f 4f       	sbci	r19, 0xFF	; 255
    5b0c:	0f b6       	in	r0, 0x3f	; 63
    5b0e:	f8 94       	cli
    5b10:	3e bf       	out	0x3e, r19	; 62
    5b12:	0f be       	out	0x3f, r0	; 63
    5b14:	2d bf       	out	0x3d, r18	; 61
    5b16:	8a 2d       	mov	r24, r10
    5b18:	91 2f       	mov	r25, r17
    5b1a:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(14,1);
    5b1e:	8e e0       	ldi	r24, 0x0E	; 14
    5b20:	61 e0       	ldi	r22, 0x01	; 1
    5b22:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    5b26:	8f e0       	ldi	r24, 0x0F	; 15
    5b28:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    5b2c:	80 91 68 03 	lds	r24, 0x0368
    5b30:	90 91 69 03 	lds	r25, 0x0369
    5b34:	84 33       	cpi	r24, 0x34	; 52
    5b36:	91 05       	cpc	r25, r1
    5b38:	d1 f1       	breq	.+116    	; 0x5bae <Calibrate_Data_Page+0xe1c>
    5b3a:	85 33       	cpi	r24, 0x35	; 53
    5b3c:	91 05       	cpc	r25, r1
    5b3e:	8c f4       	brge	.+34     	; 0x5b62 <Calibrate_Data_Page+0xdd0>
    5b40:	81 33       	cpi	r24, 0x31	; 49
    5b42:	91 05       	cpc	r25, r1
    5b44:	11 f1       	breq	.+68     	; 0x5b8a <Calibrate_Data_Page+0xdf8>
    5b46:	82 33       	cpi	r24, 0x32	; 50
    5b48:	91 05       	cpc	r25, r1
    5b4a:	24 f4       	brge	.+8      	; 0x5b54 <Calibrate_Data_Page+0xdc2>
    5b4c:	c0 97       	sbiw	r24, 0x30	; 48
    5b4e:	09 f0       	breq	.+2      	; 0x5b52 <Calibrate_Data_Page+0xdc0>
    5b50:	00 c5       	rjmp	.+2560   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5b52:	4e c0       	rjmp	.+156    	; 0x5bf0 <Calibrate_Data_Page+0xe5e>
    5b54:	82 33       	cpi	r24, 0x32	; 50
    5b56:	91 05       	cpc	r25, r1
    5b58:	f1 f0       	breq	.+60     	; 0x5b96 <Calibrate_Data_Page+0xe04>
    5b5a:	c3 97       	sbiw	r24, 0x33	; 51
    5b5c:	09 f0       	breq	.+2      	; 0x5b60 <Calibrate_Data_Page+0xdce>
    5b5e:	f9 c4       	rjmp	.+2546   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5b60:	20 c0       	rjmp	.+64     	; 0x5ba2 <Calibrate_Data_Page+0xe10>
    5b62:	87 33       	cpi	r24, 0x37	; 55
    5b64:	91 05       	cpc	r25, r1
    5b66:	99 f1       	breq	.+102    	; 0x5bce <Calibrate_Data_Page+0xe3c>
    5b68:	88 33       	cpi	r24, 0x38	; 56
    5b6a:	91 05       	cpc	r25, r1
    5b6c:	3c f4       	brge	.+14     	; 0x5b7c <Calibrate_Data_Page+0xdea>
    5b6e:	85 33       	cpi	r24, 0x35	; 53
    5b70:	91 05       	cpc	r25, r1
    5b72:	11 f1       	breq	.+68     	; 0x5bb8 <Calibrate_Data_Page+0xe26>
    5b74:	c6 97       	sbiw	r24, 0x36	; 54
    5b76:	09 f0       	breq	.+2      	; 0x5b7a <Calibrate_Data_Page+0xde8>
    5b78:	ec c4       	rjmp	.+2520   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5b7a:	23 c0       	rjmp	.+70     	; 0x5bc2 <Calibrate_Data_Page+0xe30>
    5b7c:	88 33       	cpi	r24, 0x38	; 56
    5b7e:	91 05       	cpc	r25, r1
    5b80:	59 f1       	breq	.+86     	; 0x5bd8 <Calibrate_Data_Page+0xe46>
    5b82:	c9 97       	sbiw	r24, 0x39	; 57
    5b84:	09 f0       	breq	.+2      	; 0x5b88 <Calibrate_Data_Page+0xdf6>
    5b86:	e5 c4       	rjmp	.+2506   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5b88:	2d c0       	rjmp	.+90     	; 0x5be4 <Calibrate_Data_Page+0xe52>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    5b8a:	8c e0       	ldi	r24, 0x0C	; 12
    5b8c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[6] = '1';
    5b90:	81 e3       	ldi	r24, 0x31	; 49
    5b92:	8f 83       	std	Y+7, r24	; 0x07
    5b94:	de c4       	rjmp	.+2492   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    5b96:	8c e0       	ldi	r24, 0x0C	; 12
    5b98:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[6] = '2';
    5b9c:	82 e3       	ldi	r24, 0x32	; 50
    5b9e:	8f 83       	std	Y+7, r24	; 0x07
    5ba0:	d8 c4       	rjmp	.+2480   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    5ba2:	8c e0       	ldi	r24, 0x0C	; 12
    5ba4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[6] = '3';
    5ba8:	83 e3       	ldi	r24, 0x33	; 51
    5baa:	8f 83       	std	Y+7, r24	; 0x07
    5bac:	d2 c4       	rjmp	.+2468   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    5bae:	8c e0       	ldi	r24, 0x0C	; 12
    5bb0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[6] = '4';
    5bb4:	3f 82       	std	Y+7, r3	; 0x07
    5bb6:	cd c4       	rjmp	.+2458   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    5bb8:	8c e0       	ldi	r24, 0x0C	; 12
    5bba:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     MI_Buf[6] = '5';
    5bbe:	6f 82       	std	Y+7, r6	; 0x07
    5bc0:	c8 c4       	rjmp	.+2448   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    5bc2:	8c e0       	ldi	r24, 0x0C	; 12
    5bc4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MI_Buf[6] = '6';
    5bc8:	86 e3       	ldi	r24, 0x36	; 54
    5bca:	8f 83       	std	Y+7, r24	; 0x07
    5bcc:	c2 c4       	rjmp	.+2436   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    5bce:	8c e0       	ldi	r24, 0x0C	; 12
    5bd0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[6] = '7';
    5bd4:	2f 82       	std	Y+7, r2	; 0x07
    5bd6:	bd c4       	rjmp	.+2426   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    5bd8:	8c e0       	ldi	r24, 0x0C	; 12
    5bda:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[6] = '8';
    5bde:	38 e3       	ldi	r19, 0x38	; 56
    5be0:	3f 83       	std	Y+7, r19	; 0x07
    5be2:	b7 c4       	rjmp	.+2414   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    5be4:	8c e0       	ldi	r24, 0x0C	; 12
    5be6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[6] = '9';
    5bea:	89 e3       	ldi	r24, 0x39	; 57
    5bec:	8f 83       	std	Y+7, r24	; 0x07
    5bee:	b1 c4       	rjmp	.+2402   	; 0x6552 <Calibrate_Data_Page+0x17c0>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    5bf0:	8c e0       	ldi	r24, 0x0C	; 12
    5bf2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MI_Buf[6] = '0';
    5bf6:	80 e3       	ldi	r24, 0x30	; 48
    5bf8:	8f 83       	std	Y+7, r24	; 0x07
    5bfa:	ab c4       	rjmp	.+2390   	; 0x6552 <Calibrate_Data_Page+0x17c0>
								         break;
					        } 
		 
						    
					}
					if(CalibrateDataPageCursor == 2)
    5bfc:	9a a5       	ldd	r25, Y+42	; 0x2a
    5bfe:	92 30       	cpi	r25, 0x02	; 2
    5c00:	09 f0       	breq	.+2      	; 0x5c04 <Calibrate_Data_Page+0xe72>
    5c02:	a7 c4       	rjmp	.+2382   	; 0x6552 <Calibrate_Data_Page+0x17c0>
					{
							//lcd_gotoxy(8,2);
				          	//lcd_command(LCD_DISP_ON_CURSOR_BLINK);
						   // USART0_Transmit_String(L_Offset_Buf);
						    switch (CalibrateDataLineCursor)  // Main Menu Switch statement
    5c04:	a4 e0       	ldi	r26, 0x04	; 4
    5c06:	9a 16       	cp	r9, r26
    5c08:	09 f4       	brne	.+2      	; 0x5c0c <Calibrate_Data_Page+0xe7a>
    5c0a:	59 c2       	rjmp	.+1202   	; 0x60be <Calibrate_Data_Page+0x132c>
    5c0c:	a9 15       	cp	r26, r9
    5c0e:	60 f0       	brcs	.+24     	; 0x5c28 <Calibrate_Data_Page+0xe96>
    5c10:	b2 e0       	ldi	r27, 0x02	; 2
    5c12:	9b 16       	cp	r9, r27
    5c14:	09 f4       	brne	.+2      	; 0x5c18 <Calibrate_Data_Page+0xe86>
    5c16:	d3 c0       	rjmp	.+422    	; 0x5dbe <Calibrate_Data_Page+0x102c>
    5c18:	b9 15       	cp	r27, r9
    5c1a:	08 f4       	brcc	.+2      	; 0x5c1e <Calibrate_Data_Page+0xe8c>
    5c1c:	90 c1       	rjmp	.+800    	; 0x5f3e <Calibrate_Data_Page+0x11ac>
    5c1e:	21 e0       	ldi	r18, 0x01	; 1
    5c20:	92 16       	cp	r9, r18
    5c22:	09 f0       	breq	.+2      	; 0x5c26 <Calibrate_Data_Page+0xe94>
    5c24:	96 c4       	rjmp	.+2348   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5c26:	0c c0       	rjmp	.+24     	; 0x5c40 <Calibrate_Data_Page+0xeae>
    5c28:	36 e0       	ldi	r19, 0x06	; 6
    5c2a:	93 16       	cp	r9, r19
    5c2c:	09 f4       	brne	.+2      	; 0x5c30 <Calibrate_Data_Page+0xe9e>
    5c2e:	11 c3       	rjmp	.+1570   	; 0x6252 <Calibrate_Data_Page+0x14c0>
    5c30:	93 16       	cp	r9, r19
    5c32:	08 f4       	brcc	.+2      	; 0x5c36 <Calibrate_Data_Page+0xea4>
    5c34:	4e c2       	rjmp	.+1180   	; 0x60d2 <Calibrate_Data_Page+0x1340>
    5c36:	87 e0       	ldi	r24, 0x07	; 7
    5c38:	98 16       	cp	r9, r24
    5c3a:	09 f0       	breq	.+2      	; 0x5c3e <Calibrate_Data_Page+0xeac>
    5c3c:	8a c4       	rjmp	.+2324   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5c3e:	c9 c3       	rjmp	.+1938   	; 0x63d2 <Calibrate_Data_Page+0x1640>
						    {
								case 1:  ZO = atof(ZO_Buf);	 
    5c40:	c6 01       	movw	r24, r12
    5c42:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    5c46:	60 93 b1 02 	sts	0x02B1, r22
    5c4a:	70 93 b2 02 	sts	0x02B2, r23
    5c4e:	80 93 b3 02 	sts	0x02B3, r24
    5c52:	90 93 b4 02 	sts	0x02B4, r25
										 lcd_gotoxy(8,2);
    5c56:	88 e0       	ldi	r24, 0x08	; 8
    5c58:	62 e0       	ldi	r22, 0x02	; 2
    5c5a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(ZO_Buf,"%07.3f", ZO);
    5c5e:	40 91 b1 02 	lds	r20, 0x02B1
    5c62:	50 91 b2 02 	lds	r21, 0x02B2
    5c66:	60 91 b3 02 	lds	r22, 0x02B3
    5c6a:	70 91 b4 02 	lds	r23, 0x02B4
    5c6e:	ad b7       	in	r26, 0x3d	; 61
    5c70:	be b7       	in	r27, 0x3e	; 62
    5c72:	18 97       	sbiw	r26, 0x08	; 8
    5c74:	0f b6       	in	r0, 0x3f	; 63
    5c76:	f8 94       	cli
    5c78:	be bf       	out	0x3e, r27	; 62
    5c7a:	0f be       	out	0x3f, r0	; 63
    5c7c:	ad bf       	out	0x3d, r26	; 61
    5c7e:	ed b7       	in	r30, 0x3d	; 61
    5c80:	fe b7       	in	r31, 0x3e	; 62
    5c82:	31 96       	adiw	r30, 0x01	; 1
    5c84:	11 96       	adiw	r26, 0x01	; 1
    5c86:	cc 92       	st	X, r12
    5c88:	11 97       	sbiw	r26, 0x01	; 1
    5c8a:	12 96       	adiw	r26, 0x02	; 2
    5c8c:	dc 92       	st	X, r13
    5c8e:	e2 82       	std	Z+2, r14	; 0x02
    5c90:	f3 82       	std	Z+3, r15	; 0x03
    5c92:	44 83       	std	Z+4, r20	; 0x04
    5c94:	55 83       	std	Z+5, r21	; 0x05
    5c96:	66 83       	std	Z+6, r22	; 0x06
    5c98:	77 83       	std	Z+7, r23	; 0x07
    5c9a:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(ZO_Buf);
    5c9e:	2d b7       	in	r18, 0x3d	; 61
    5ca0:	3e b7       	in	r19, 0x3e	; 62
    5ca2:	28 5f       	subi	r18, 0xF8	; 248
    5ca4:	3f 4f       	sbci	r19, 0xFF	; 255
    5ca6:	0f b6       	in	r0, 0x3f	; 63
    5ca8:	f8 94       	cli
    5caa:	3e bf       	out	0x3e, r19	; 62
    5cac:	0f be       	out	0x3f, r0	; 63
    5cae:	2d bf       	out	0x3d, r18	; 61
    5cb0:	c6 01       	movw	r24, r12
    5cb2:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(8,2);
    5cb6:	88 e0       	ldi	r24, 0x08	; 8
    5cb8:	62 e0       	ldi	r22, 0x02	; 2
    5cba:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				          				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    5cbe:	8f e0       	ldi	r24, 0x0F	; 15
    5cc0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										  switch (key)  // Main Menu Switch statement
    5cc4:	80 91 68 03 	lds	r24, 0x0368
    5cc8:	90 91 69 03 	lds	r25, 0x0369
    5ccc:	84 33       	cpi	r24, 0x34	; 52
    5cce:	91 05       	cpc	r25, r1
    5cd0:	09 f4       	brne	.+2      	; 0x5cd4 <Calibrate_Data_Page+0xf42>
    5cd2:	40 c0       	rjmp	.+128    	; 0x5d54 <Calibrate_Data_Page+0xfc2>
    5cd4:	85 33       	cpi	r24, 0x35	; 53
    5cd6:	91 05       	cpc	r25, r1
    5cd8:	8c f4       	brge	.+34     	; 0x5cfc <Calibrate_Data_Page+0xf6a>
    5cda:	81 33       	cpi	r24, 0x31	; 49
    5cdc:	91 05       	cpc	r25, r1
    5cde:	19 f1       	breq	.+70     	; 0x5d26 <Calibrate_Data_Page+0xf94>
    5ce0:	82 33       	cpi	r24, 0x32	; 50
    5ce2:	91 05       	cpc	r25, r1
    5ce4:	24 f4       	brge	.+8      	; 0x5cee <Calibrate_Data_Page+0xf5c>
    5ce6:	c0 97       	sbiw	r24, 0x30	; 48
    5ce8:	09 f0       	breq	.+2      	; 0x5cec <Calibrate_Data_Page+0xf5a>
    5cea:	33 c4       	rjmp	.+2150   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5cec:	60 c0       	rjmp	.+192    	; 0x5dae <Calibrate_Data_Page+0x101c>
    5cee:	82 33       	cpi	r24, 0x32	; 50
    5cf0:	91 05       	cpc	r25, r1
    5cf2:	09 f1       	breq	.+66     	; 0x5d36 <Calibrate_Data_Page+0xfa4>
    5cf4:	c3 97       	sbiw	r24, 0x33	; 51
    5cf6:	09 f0       	breq	.+2      	; 0x5cfa <Calibrate_Data_Page+0xf68>
    5cf8:	2c c4       	rjmp	.+2136   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5cfa:	24 c0       	rjmp	.+72     	; 0x5d44 <Calibrate_Data_Page+0xfb2>
    5cfc:	87 33       	cpi	r24, 0x37	; 55
    5cfe:	91 05       	cpc	r25, r1
    5d00:	09 f4       	brne	.+2      	; 0x5d04 <Calibrate_Data_Page+0xf72>
    5d02:	3e c0       	rjmp	.+124    	; 0x5d80 <Calibrate_Data_Page+0xfee>
    5d04:	88 33       	cpi	r24, 0x38	; 56
    5d06:	91 05       	cpc	r25, r1
    5d08:	3c f4       	brge	.+14     	; 0x5d18 <Calibrate_Data_Page+0xf86>
    5d0a:	85 33       	cpi	r24, 0x35	; 53
    5d0c:	91 05       	cpc	r25, r1
    5d0e:	49 f1       	breq	.+82     	; 0x5d62 <Calibrate_Data_Page+0xfd0>
    5d10:	c6 97       	sbiw	r24, 0x36	; 54
    5d12:	09 f0       	breq	.+2      	; 0x5d16 <Calibrate_Data_Page+0xf84>
    5d14:	1e c4       	rjmp	.+2108   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5d16:	2c c0       	rjmp	.+88     	; 0x5d70 <Calibrate_Data_Page+0xfde>
    5d18:	88 33       	cpi	r24, 0x38	; 56
    5d1a:	91 05       	cpc	r25, r1
    5d1c:	c1 f1       	breq	.+112    	; 0x5d8e <Calibrate_Data_Page+0xffc>
    5d1e:	c9 97       	sbiw	r24, 0x39	; 57
    5d20:	09 f0       	breq	.+2      	; 0x5d24 <Calibrate_Data_Page+0xf92>
    5d22:	17 c4       	rjmp	.+2094   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5d24:	3c c0       	rjmp	.+120    	; 0x5d9e <Calibrate_Data_Page+0x100c>
										    {
											 
												case '1':lcd_command(LCD_DISP_ON);
    5d26:	8c e0       	ldi	r24, 0x0C	; 12
    5d28:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[0] = '1';
    5d2c:	81 e3       	ldi	r24, 0x31	; 49
    5d2e:	8b 87       	std	Y+11, r24	; 0x0b
    5d30:	01 e0       	ldi	r16, 0x01	; 1
    5d32:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    5d36:	8c e0       	ldi	r24, 0x0C	; 12
    5d38:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[0] = '2';
    5d3c:	82 e3       	ldi	r24, 0x32	; 50
    5d3e:	8b 87       	std	Y+11, r24	; 0x0b
    5d40:	0c 94 72 3b 	jmp	0x76e4	; 0x76e4 <Calibrate_Data_Page+0x2952>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    5d44:	8c e0       	ldi	r24, 0x0C	; 12
    5d46:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[0] = '3';
    5d4a:	83 e3       	ldi	r24, 0x33	; 51
    5d4c:	8b 87       	std	Y+11, r24	; 0x0b
    5d4e:	01 e0       	ldi	r16, 0x01	; 1
    5d50:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    5d54:	8c e0       	ldi	r24, 0x0C	; 12
    5d56:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[0] = '4';
    5d5a:	3b 86       	std	Y+11, r3	; 0x0b
    5d5c:	01 e0       	ldi	r16, 0x01	; 1
    5d5e:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    5d62:	8c e0       	ldi	r24, 0x0C	; 12
    5d64:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     ZO_Buf[0] = '5';
    5d68:	6b 86       	std	Y+11, r6	; 0x0b
    5d6a:	01 e0       	ldi	r16, 0x01	; 1
    5d6c:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    5d70:	8c e0       	ldi	r24, 0x0C	; 12
    5d72:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[0] = '6';
    5d76:	86 e3       	ldi	r24, 0x36	; 54
    5d78:	8b 87       	std	Y+11, r24	; 0x0b
    5d7a:	01 e0       	ldi	r16, 0x01	; 1
    5d7c:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    5d80:	8c e0       	ldi	r24, 0x0C	; 12
    5d82:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[0] = '7';
    5d86:	2b 86       	std	Y+11, r2	; 0x0b
    5d88:	01 e0       	ldi	r16, 0x01	; 1
    5d8a:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    5d8e:	8c e0       	ldi	r24, 0x0C	; 12
    5d90:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[0] = '8';
    5d94:	38 e3       	ldi	r19, 0x38	; 56
    5d96:	3b 87       	std	Y+11, r19	; 0x0b
    5d98:	01 e0       	ldi	r16, 0x01	; 1
    5d9a:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    5d9e:	8c e0       	ldi	r24, 0x0C	; 12
    5da0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[0] = '9';
    5da4:	89 e3       	ldi	r24, 0x39	; 57
    5da6:	8b 87       	std	Y+11, r24	; 0x0b
    5da8:	01 e0       	ldi	r16, 0x01	; 1
    5daa:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    5dae:	8c e0       	ldi	r24, 0x0C	; 12
    5db0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[0] = '0';
    5db4:	80 e3       	ldi	r24, 0x30	; 48
    5db6:	8b 87       	std	Y+11, r24	; 0x0b
    5db8:	01 e0       	ldi	r16, 0x01	; 1
    5dba:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
											 }									
								         break;
								case 2:  ZO = atof(ZO_Buf);	 
    5dbe:	c6 01       	movw	r24, r12
    5dc0:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    5dc4:	60 93 b1 02 	sts	0x02B1, r22
    5dc8:	70 93 b2 02 	sts	0x02B2, r23
    5dcc:	80 93 b3 02 	sts	0x02B3, r24
    5dd0:	90 93 b4 02 	sts	0x02B4, r25
										 lcd_gotoxy(8,2);
    5dd4:	88 e0       	ldi	r24, 0x08	; 8
    5dd6:	62 e0       	ldi	r22, 0x02	; 2
    5dd8:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(ZO_Buf,"%07.3f", ZO);
    5ddc:	40 91 b1 02 	lds	r20, 0x02B1
    5de0:	50 91 b2 02 	lds	r21, 0x02B2
    5de4:	60 91 b3 02 	lds	r22, 0x02B3
    5de8:	70 91 b4 02 	lds	r23, 0x02B4
    5dec:	ad b7       	in	r26, 0x3d	; 61
    5dee:	be b7       	in	r27, 0x3e	; 62
    5df0:	18 97       	sbiw	r26, 0x08	; 8
    5df2:	0f b6       	in	r0, 0x3f	; 63
    5df4:	f8 94       	cli
    5df6:	be bf       	out	0x3e, r27	; 62
    5df8:	0f be       	out	0x3f, r0	; 63
    5dfa:	ad bf       	out	0x3d, r26	; 61
    5dfc:	ed b7       	in	r30, 0x3d	; 61
    5dfe:	fe b7       	in	r31, 0x3e	; 62
    5e00:	31 96       	adiw	r30, 0x01	; 1
    5e02:	11 96       	adiw	r26, 0x01	; 1
    5e04:	cc 92       	st	X, r12
    5e06:	11 97       	sbiw	r26, 0x01	; 1
    5e08:	12 96       	adiw	r26, 0x02	; 2
    5e0a:	dc 92       	st	X, r13
    5e0c:	e2 82       	std	Z+2, r14	; 0x02
    5e0e:	f3 82       	std	Z+3, r15	; 0x03
    5e10:	44 83       	std	Z+4, r20	; 0x04
    5e12:	55 83       	std	Z+5, r21	; 0x05
    5e14:	66 83       	std	Z+6, r22	; 0x06
    5e16:	77 83       	std	Z+7, r23	; 0x07
    5e18:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(ZO_Buf);
    5e1c:	2d b7       	in	r18, 0x3d	; 61
    5e1e:	3e b7       	in	r19, 0x3e	; 62
    5e20:	28 5f       	subi	r18, 0xF8	; 248
    5e22:	3f 4f       	sbci	r19, 0xFF	; 255
    5e24:	0f b6       	in	r0, 0x3f	; 63
    5e26:	f8 94       	cli
    5e28:	3e bf       	out	0x3e, r19	; 62
    5e2a:	0f be       	out	0x3f, r0	; 63
    5e2c:	2d bf       	out	0x3d, r18	; 61
    5e2e:	c6 01       	movw	r24, r12
    5e30:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(9,2);
    5e34:	89 e0       	ldi	r24, 0x09	; 9
    5e36:	62 e0       	ldi	r22, 0x02	; 2
    5e38:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    5e3c:	8f e0       	ldi	r24, 0x0F	; 15
    5e3e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    5e42:	80 91 68 03 	lds	r24, 0x0368
    5e46:	90 91 69 03 	lds	r25, 0x0369
    5e4a:	84 33       	cpi	r24, 0x34	; 52
    5e4c:	91 05       	cpc	r25, r1
    5e4e:	09 f4       	brne	.+2      	; 0x5e52 <Calibrate_Data_Page+0x10c0>
    5e50:	41 c0       	rjmp	.+130    	; 0x5ed4 <Calibrate_Data_Page+0x1142>
    5e52:	85 33       	cpi	r24, 0x35	; 53
    5e54:	91 05       	cpc	r25, r1
    5e56:	8c f4       	brge	.+34     	; 0x5e7a <Calibrate_Data_Page+0x10e8>
    5e58:	81 33       	cpi	r24, 0x31	; 49
    5e5a:	91 05       	cpc	r25, r1
    5e5c:	19 f1       	breq	.+70     	; 0x5ea4 <Calibrate_Data_Page+0x1112>
    5e5e:	82 33       	cpi	r24, 0x32	; 50
    5e60:	91 05       	cpc	r25, r1
    5e62:	24 f4       	brge	.+8      	; 0x5e6c <Calibrate_Data_Page+0x10da>
    5e64:	c0 97       	sbiw	r24, 0x30	; 48
    5e66:	09 f0       	breq	.+2      	; 0x5e6a <Calibrate_Data_Page+0x10d8>
    5e68:	74 c3       	rjmp	.+1768   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5e6a:	61 c0       	rjmp	.+194    	; 0x5f2e <Calibrate_Data_Page+0x119c>
    5e6c:	82 33       	cpi	r24, 0x32	; 50
    5e6e:	91 05       	cpc	r25, r1
    5e70:	09 f1       	breq	.+66     	; 0x5eb4 <Calibrate_Data_Page+0x1122>
    5e72:	c3 97       	sbiw	r24, 0x33	; 51
    5e74:	09 f0       	breq	.+2      	; 0x5e78 <Calibrate_Data_Page+0x10e6>
    5e76:	6d c3       	rjmp	.+1754   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5e78:	25 c0       	rjmp	.+74     	; 0x5ec4 <Calibrate_Data_Page+0x1132>
    5e7a:	87 33       	cpi	r24, 0x37	; 55
    5e7c:	91 05       	cpc	r25, r1
    5e7e:	09 f4       	brne	.+2      	; 0x5e82 <Calibrate_Data_Page+0x10f0>
    5e80:	3f c0       	rjmp	.+126    	; 0x5f00 <Calibrate_Data_Page+0x116e>
    5e82:	88 33       	cpi	r24, 0x38	; 56
    5e84:	91 05       	cpc	r25, r1
    5e86:	3c f4       	brge	.+14     	; 0x5e96 <Calibrate_Data_Page+0x1104>
    5e88:	85 33       	cpi	r24, 0x35	; 53
    5e8a:	91 05       	cpc	r25, r1
    5e8c:	51 f1       	breq	.+84     	; 0x5ee2 <Calibrate_Data_Page+0x1150>
    5e8e:	c6 97       	sbiw	r24, 0x36	; 54
    5e90:	09 f0       	breq	.+2      	; 0x5e94 <Calibrate_Data_Page+0x1102>
    5e92:	5f c3       	rjmp	.+1726   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5e94:	2d c0       	rjmp	.+90     	; 0x5ef0 <Calibrate_Data_Page+0x115e>
    5e96:	88 33       	cpi	r24, 0x38	; 56
    5e98:	91 05       	cpc	r25, r1
    5e9a:	c9 f1       	breq	.+114    	; 0x5f0e <Calibrate_Data_Page+0x117c>
    5e9c:	c9 97       	sbiw	r24, 0x39	; 57
    5e9e:	09 f0       	breq	.+2      	; 0x5ea2 <Calibrate_Data_Page+0x1110>
    5ea0:	58 c3       	rjmp	.+1712   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5ea2:	3d c0       	rjmp	.+122    	; 0x5f1e <Calibrate_Data_Page+0x118c>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    5ea4:	8c e0       	ldi	r24, 0x0C	; 12
    5ea6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[1] = '1';
    5eaa:	81 e3       	ldi	r24, 0x31	; 49
    5eac:	8c 87       	std	Y+12, r24	; 0x0c
    5eae:	01 e0       	ldi	r16, 0x01	; 1
    5eb0:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														 
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    5eb4:	8c e0       	ldi	r24, 0x0C	; 12
    5eb6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[1] = '2';
    5eba:	82 e3       	ldi	r24, 0x32	; 50
    5ebc:	8c 87       	std	Y+12, r24	; 0x0c
    5ebe:	01 e0       	ldi	r16, 0x01	; 1
    5ec0:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    5ec4:	8c e0       	ldi	r24, 0x0C	; 12
    5ec6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[1] = '3';
    5eca:	83 e3       	ldi	r24, 0x33	; 51
    5ecc:	8c 87       	std	Y+12, r24	; 0x0c
    5ece:	01 e0       	ldi	r16, 0x01	; 1
    5ed0:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    5ed4:	8c e0       	ldi	r24, 0x0C	; 12
    5ed6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[1] = '4';
    5eda:	3c 86       	std	Y+12, r3	; 0x0c
    5edc:	01 e0       	ldi	r16, 0x01	; 1
    5ede:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    5ee2:	8c e0       	ldi	r24, 0x0C	; 12
    5ee4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     ZO_Buf[1] = '5';
    5ee8:	6c 86       	std	Y+12, r6	; 0x0c
    5eea:	01 e0       	ldi	r16, 0x01	; 1
    5eec:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    5ef0:	8c e0       	ldi	r24, 0x0C	; 12
    5ef2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[1] = '6';
    5ef6:	86 e3       	ldi	r24, 0x36	; 54
    5ef8:	8c 87       	std	Y+12, r24	; 0x0c
    5efa:	01 e0       	ldi	r16, 0x01	; 1
    5efc:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    5f00:	8c e0       	ldi	r24, 0x0C	; 12
    5f02:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[1] = '7';
    5f06:	2c 86       	std	Y+12, r2	; 0x0c
    5f08:	01 e0       	ldi	r16, 0x01	; 1
    5f0a:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    5f0e:	8c e0       	ldi	r24, 0x0C	; 12
    5f10:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[1] = '8';
    5f14:	38 e3       	ldi	r19, 0x38	; 56
    5f16:	3c 87       	std	Y+12, r19	; 0x0c
    5f18:	01 e0       	ldi	r16, 0x01	; 1
    5f1a:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    5f1e:	8c e0       	ldi	r24, 0x0C	; 12
    5f20:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[1] = '9';
    5f24:	89 e3       	ldi	r24, 0x39	; 57
    5f26:	8c 87       	std	Y+12, r24	; 0x0c
    5f28:	01 e0       	ldi	r16, 0x01	; 1
    5f2a:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    5f2e:	8c e0       	ldi	r24, 0x0C	; 12
    5f30:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[1] = '0';
    5f34:	80 e3       	ldi	r24, 0x30	; 48
    5f36:	8c 87       	std	Y+12, r24	; 0x0c
    5f38:	01 e0       	ldi	r16, 0x01	; 1
    5f3a:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
										  }	
								         break;
								case 3:  ZO = atof(ZO_Buf);	 
    5f3e:	c6 01       	movw	r24, r12
    5f40:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    5f44:	60 93 b1 02 	sts	0x02B1, r22
    5f48:	70 93 b2 02 	sts	0x02B2, r23
    5f4c:	80 93 b3 02 	sts	0x02B3, r24
    5f50:	90 93 b4 02 	sts	0x02B4, r25
										 lcd_gotoxy(8,2);
    5f54:	88 e0       	ldi	r24, 0x08	; 8
    5f56:	62 e0       	ldi	r22, 0x02	; 2
    5f58:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(ZO_Buf,"%07.3f", ZO);
    5f5c:	40 91 b1 02 	lds	r20, 0x02B1
    5f60:	50 91 b2 02 	lds	r21, 0x02B2
    5f64:	60 91 b3 02 	lds	r22, 0x02B3
    5f68:	70 91 b4 02 	lds	r23, 0x02B4
    5f6c:	ad b7       	in	r26, 0x3d	; 61
    5f6e:	be b7       	in	r27, 0x3e	; 62
    5f70:	18 97       	sbiw	r26, 0x08	; 8
    5f72:	0f b6       	in	r0, 0x3f	; 63
    5f74:	f8 94       	cli
    5f76:	be bf       	out	0x3e, r27	; 62
    5f78:	0f be       	out	0x3f, r0	; 63
    5f7a:	ad bf       	out	0x3d, r26	; 61
    5f7c:	ed b7       	in	r30, 0x3d	; 61
    5f7e:	fe b7       	in	r31, 0x3e	; 62
    5f80:	31 96       	adiw	r30, 0x01	; 1
    5f82:	11 96       	adiw	r26, 0x01	; 1
    5f84:	cc 92       	st	X, r12
    5f86:	11 97       	sbiw	r26, 0x01	; 1
    5f88:	12 96       	adiw	r26, 0x02	; 2
    5f8a:	dc 92       	st	X, r13
    5f8c:	e2 82       	std	Z+2, r14	; 0x02
    5f8e:	f3 82       	std	Z+3, r15	; 0x03
    5f90:	44 83       	std	Z+4, r20	; 0x04
    5f92:	55 83       	std	Z+5, r21	; 0x05
    5f94:	66 83       	std	Z+6, r22	; 0x06
    5f96:	77 83       	std	Z+7, r23	; 0x07
    5f98:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(ZO_Buf);
    5f9c:	2d b7       	in	r18, 0x3d	; 61
    5f9e:	3e b7       	in	r19, 0x3e	; 62
    5fa0:	28 5f       	subi	r18, 0xF8	; 248
    5fa2:	3f 4f       	sbci	r19, 0xFF	; 255
    5fa4:	0f b6       	in	r0, 0x3f	; 63
    5fa6:	f8 94       	cli
    5fa8:	3e bf       	out	0x3e, r19	; 62
    5faa:	0f be       	out	0x3f, r0	; 63
    5fac:	2d bf       	out	0x3d, r18	; 61
    5fae:	c6 01       	movw	r24, r12
    5fb0:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(10,2);
    5fb4:	8a e0       	ldi	r24, 0x0A	; 10
    5fb6:	62 e0       	ldi	r22, 0x02	; 2
    5fb8:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    5fbc:	8f e0       	ldi	r24, 0x0F	; 15
    5fbe:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    5fc2:	80 91 68 03 	lds	r24, 0x0368
    5fc6:	90 91 69 03 	lds	r25, 0x0369
    5fca:	84 33       	cpi	r24, 0x34	; 52
    5fcc:	91 05       	cpc	r25, r1
    5fce:	09 f4       	brne	.+2      	; 0x5fd2 <Calibrate_Data_Page+0x1240>
    5fd0:	41 c0       	rjmp	.+130    	; 0x6054 <Calibrate_Data_Page+0x12c2>
    5fd2:	85 33       	cpi	r24, 0x35	; 53
    5fd4:	91 05       	cpc	r25, r1
    5fd6:	8c f4       	brge	.+34     	; 0x5ffa <Calibrate_Data_Page+0x1268>
    5fd8:	81 33       	cpi	r24, 0x31	; 49
    5fda:	91 05       	cpc	r25, r1
    5fdc:	19 f1       	breq	.+70     	; 0x6024 <Calibrate_Data_Page+0x1292>
    5fde:	82 33       	cpi	r24, 0x32	; 50
    5fe0:	91 05       	cpc	r25, r1
    5fe2:	24 f4       	brge	.+8      	; 0x5fec <Calibrate_Data_Page+0x125a>
    5fe4:	c0 97       	sbiw	r24, 0x30	; 48
    5fe6:	09 f0       	breq	.+2      	; 0x5fea <Calibrate_Data_Page+0x1258>
    5fe8:	b4 c2       	rjmp	.+1384   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5fea:	61 c0       	rjmp	.+194    	; 0x60ae <Calibrate_Data_Page+0x131c>
    5fec:	82 33       	cpi	r24, 0x32	; 50
    5fee:	91 05       	cpc	r25, r1
    5ff0:	09 f1       	breq	.+66     	; 0x6034 <Calibrate_Data_Page+0x12a2>
    5ff2:	c3 97       	sbiw	r24, 0x33	; 51
    5ff4:	09 f0       	breq	.+2      	; 0x5ff8 <Calibrate_Data_Page+0x1266>
    5ff6:	ad c2       	rjmp	.+1370   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    5ff8:	25 c0       	rjmp	.+74     	; 0x6044 <Calibrate_Data_Page+0x12b2>
    5ffa:	87 33       	cpi	r24, 0x37	; 55
    5ffc:	91 05       	cpc	r25, r1
    5ffe:	09 f4       	brne	.+2      	; 0x6002 <Calibrate_Data_Page+0x1270>
    6000:	3f c0       	rjmp	.+126    	; 0x6080 <Calibrate_Data_Page+0x12ee>
    6002:	88 33       	cpi	r24, 0x38	; 56
    6004:	91 05       	cpc	r25, r1
    6006:	3c f4       	brge	.+14     	; 0x6016 <Calibrate_Data_Page+0x1284>
    6008:	85 33       	cpi	r24, 0x35	; 53
    600a:	91 05       	cpc	r25, r1
    600c:	51 f1       	breq	.+84     	; 0x6062 <Calibrate_Data_Page+0x12d0>
    600e:	c6 97       	sbiw	r24, 0x36	; 54
    6010:	09 f0       	breq	.+2      	; 0x6014 <Calibrate_Data_Page+0x1282>
    6012:	9f c2       	rjmp	.+1342   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    6014:	2d c0       	rjmp	.+90     	; 0x6070 <Calibrate_Data_Page+0x12de>
    6016:	88 33       	cpi	r24, 0x38	; 56
    6018:	91 05       	cpc	r25, r1
    601a:	c9 f1       	breq	.+114    	; 0x608e <Calibrate_Data_Page+0x12fc>
    601c:	c9 97       	sbiw	r24, 0x39	; 57
    601e:	09 f0       	breq	.+2      	; 0x6022 <Calibrate_Data_Page+0x1290>
    6020:	98 c2       	rjmp	.+1328   	; 0x6552 <Calibrate_Data_Page+0x17c0>
    6022:	3d c0       	rjmp	.+122    	; 0x609e <Calibrate_Data_Page+0x130c>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    6024:	8c e0       	ldi	r24, 0x0C	; 12
    6026:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[2] = '1';
    602a:	81 e3       	ldi	r24, 0x31	; 49
    602c:	8d 87       	std	Y+13, r24	; 0x0d
    602e:	01 e0       	ldi	r16, 0x01	; 1
    6030:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    6034:	8c e0       	ldi	r24, 0x0C	; 12
    6036:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[2] = '2';
    603a:	82 e3       	ldi	r24, 0x32	; 50
    603c:	8d 87       	std	Y+13, r24	; 0x0d
    603e:	01 e0       	ldi	r16, 0x01	; 1
    6040:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    6044:	8c e0       	ldi	r24, 0x0C	; 12
    6046:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[2] = '3';
    604a:	83 e3       	ldi	r24, 0x33	; 51
    604c:	8d 87       	std	Y+13, r24	; 0x0d
    604e:	01 e0       	ldi	r16, 0x01	; 1
    6050:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    6054:	8c e0       	ldi	r24, 0x0C	; 12
    6056:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[2] = '4';
    605a:	3d 86       	std	Y+13, r3	; 0x0d
    605c:	01 e0       	ldi	r16, 0x01	; 1
    605e:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														 
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    6062:	8c e0       	ldi	r24, 0x0C	; 12
    6064:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     ZO_Buf[2] = '5';
    6068:	6d 86       	std	Y+13, r6	; 0x0d
    606a:	01 e0       	ldi	r16, 0x01	; 1
    606c:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    6070:	8c e0       	ldi	r24, 0x0C	; 12
    6072:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[2] = '6';
    6076:	86 e3       	ldi	r24, 0x36	; 54
    6078:	8d 87       	std	Y+13, r24	; 0x0d
    607a:	01 e0       	ldi	r16, 0x01	; 1
    607c:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    6080:	8c e0       	ldi	r24, 0x0C	; 12
    6082:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[2] = '7';
    6086:	2d 86       	std	Y+13, r2	; 0x0d
    6088:	01 e0       	ldi	r16, 0x01	; 1
    608a:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    608e:	8c e0       	ldi	r24, 0x0C	; 12
    6090:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[2] = '8';
    6094:	38 e3       	ldi	r19, 0x38	; 56
    6096:	3d 87       	std	Y+13, r19	; 0x0d
    6098:	01 e0       	ldi	r16, 0x01	; 1
    609a:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    609e:	8c e0       	ldi	r24, 0x0C	; 12
    60a0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[2] = '9';
    60a4:	89 e3       	ldi	r24, 0x39	; 57
    60a6:	8d 87       	std	Y+13, r24	; 0x0d
    60a8:	01 e0       	ldi	r16, 0x01	; 1
    60aa:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    60ae:	8c e0       	ldi	r24, 0x0C	; 12
    60b0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[2] = '0';
    60b4:	80 e3       	ldi	r24, 0x30	; 48
    60b6:	8d 87       	std	Y+13, r24	; 0x0d
    60b8:	01 e0       	ldi	r16, 0x01	; 1
    60ba:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
										  }	
								         break;
								case 4:  lcd_gotoxy(11,2);
    60be:	8b e0       	ldi	r24, 0x0B	; 11
    60c0:	62 e0       	ldi	r22, 0x02	; 2
    60c2:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    60c6:	8f e0       	ldi	r24, 0x0F	; 15
    60c8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
    60cc:	01 e0       	ldi	r16, 0x01	; 1
    60ce:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
								         break;
								case 5: ZO = atof(ZO_Buf);	 
    60d2:	c6 01       	movw	r24, r12
    60d4:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    60d8:	60 93 b1 02 	sts	0x02B1, r22
    60dc:	70 93 b2 02 	sts	0x02B2, r23
    60e0:	80 93 b3 02 	sts	0x02B3, r24
    60e4:	90 93 b4 02 	sts	0x02B4, r25
										 lcd_gotoxy(8,2);
    60e8:	88 e0       	ldi	r24, 0x08	; 8
    60ea:	62 e0       	ldi	r22, 0x02	; 2
    60ec:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(ZO_Buf,"%07.3f", ZO);
    60f0:	40 91 b1 02 	lds	r20, 0x02B1
    60f4:	50 91 b2 02 	lds	r21, 0x02B2
    60f8:	60 91 b3 02 	lds	r22, 0x02B3
    60fc:	70 91 b4 02 	lds	r23, 0x02B4
    6100:	ad b7       	in	r26, 0x3d	; 61
    6102:	be b7       	in	r27, 0x3e	; 62
    6104:	18 97       	sbiw	r26, 0x08	; 8
    6106:	0f b6       	in	r0, 0x3f	; 63
    6108:	f8 94       	cli
    610a:	be bf       	out	0x3e, r27	; 62
    610c:	0f be       	out	0x3f, r0	; 63
    610e:	ad bf       	out	0x3d, r26	; 61
    6110:	ed b7       	in	r30, 0x3d	; 61
    6112:	fe b7       	in	r31, 0x3e	; 62
    6114:	31 96       	adiw	r30, 0x01	; 1
    6116:	11 96       	adiw	r26, 0x01	; 1
    6118:	cc 92       	st	X, r12
    611a:	11 97       	sbiw	r26, 0x01	; 1
    611c:	12 96       	adiw	r26, 0x02	; 2
    611e:	dc 92       	st	X, r13
    6120:	e2 82       	std	Z+2, r14	; 0x02
    6122:	f3 82       	std	Z+3, r15	; 0x03
    6124:	44 83       	std	Z+4, r20	; 0x04
    6126:	55 83       	std	Z+5, r21	; 0x05
    6128:	66 83       	std	Z+6, r22	; 0x06
    612a:	77 83       	std	Z+7, r23	; 0x07
    612c:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(ZO_Buf);
    6130:	2d b7       	in	r18, 0x3d	; 61
    6132:	3e b7       	in	r19, 0x3e	; 62
    6134:	28 5f       	subi	r18, 0xF8	; 248
    6136:	3f 4f       	sbci	r19, 0xFF	; 255
    6138:	0f b6       	in	r0, 0x3f	; 63
    613a:	f8 94       	cli
    613c:	3e bf       	out	0x3e, r19	; 62
    613e:	0f be       	out	0x3f, r0	; 63
    6140:	2d bf       	out	0x3d, r18	; 61
    6142:	c6 01       	movw	r24, r12
    6144:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(12,2);
    6148:	8c e0       	ldi	r24, 0x0C	; 12
    614a:	62 e0       	ldi	r22, 0x02	; 2
    614c:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    6150:	8f e0       	ldi	r24, 0x0F	; 15
    6152:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    6156:	80 91 68 03 	lds	r24, 0x0368
    615a:	90 91 69 03 	lds	r25, 0x0369
    615e:	84 33       	cpi	r24, 0x34	; 52
    6160:	91 05       	cpc	r25, r1
    6162:	09 f4       	brne	.+2      	; 0x6166 <Calibrate_Data_Page+0x13d4>
    6164:	41 c0       	rjmp	.+130    	; 0x61e8 <Calibrate_Data_Page+0x1456>
    6166:	85 33       	cpi	r24, 0x35	; 53
    6168:	91 05       	cpc	r25, r1
    616a:	8c f4       	brge	.+34     	; 0x618e <Calibrate_Data_Page+0x13fc>
    616c:	81 33       	cpi	r24, 0x31	; 49
    616e:	91 05       	cpc	r25, r1
    6170:	19 f1       	breq	.+70     	; 0x61b8 <Calibrate_Data_Page+0x1426>
    6172:	82 33       	cpi	r24, 0x32	; 50
    6174:	91 05       	cpc	r25, r1
    6176:	24 f4       	brge	.+8      	; 0x6180 <Calibrate_Data_Page+0x13ee>
    6178:	c0 97       	sbiw	r24, 0x30	; 48
    617a:	09 f0       	breq	.+2      	; 0x617e <Calibrate_Data_Page+0x13ec>
    617c:	ea c1       	rjmp	.+980    	; 0x6552 <Calibrate_Data_Page+0x17c0>
    617e:	61 c0       	rjmp	.+194    	; 0x6242 <Calibrate_Data_Page+0x14b0>
    6180:	82 33       	cpi	r24, 0x32	; 50
    6182:	91 05       	cpc	r25, r1
    6184:	09 f1       	breq	.+66     	; 0x61c8 <Calibrate_Data_Page+0x1436>
    6186:	c3 97       	sbiw	r24, 0x33	; 51
    6188:	09 f0       	breq	.+2      	; 0x618c <Calibrate_Data_Page+0x13fa>
    618a:	e3 c1       	rjmp	.+966    	; 0x6552 <Calibrate_Data_Page+0x17c0>
    618c:	25 c0       	rjmp	.+74     	; 0x61d8 <Calibrate_Data_Page+0x1446>
    618e:	87 33       	cpi	r24, 0x37	; 55
    6190:	91 05       	cpc	r25, r1
    6192:	09 f4       	brne	.+2      	; 0x6196 <Calibrate_Data_Page+0x1404>
    6194:	3f c0       	rjmp	.+126    	; 0x6214 <Calibrate_Data_Page+0x1482>
    6196:	88 33       	cpi	r24, 0x38	; 56
    6198:	91 05       	cpc	r25, r1
    619a:	3c f4       	brge	.+14     	; 0x61aa <Calibrate_Data_Page+0x1418>
    619c:	85 33       	cpi	r24, 0x35	; 53
    619e:	91 05       	cpc	r25, r1
    61a0:	51 f1       	breq	.+84     	; 0x61f6 <Calibrate_Data_Page+0x1464>
    61a2:	c6 97       	sbiw	r24, 0x36	; 54
    61a4:	09 f0       	breq	.+2      	; 0x61a8 <Calibrate_Data_Page+0x1416>
    61a6:	d5 c1       	rjmp	.+938    	; 0x6552 <Calibrate_Data_Page+0x17c0>
    61a8:	2d c0       	rjmp	.+90     	; 0x6204 <Calibrate_Data_Page+0x1472>
    61aa:	88 33       	cpi	r24, 0x38	; 56
    61ac:	91 05       	cpc	r25, r1
    61ae:	c9 f1       	breq	.+114    	; 0x6222 <Calibrate_Data_Page+0x1490>
    61b0:	c9 97       	sbiw	r24, 0x39	; 57
    61b2:	09 f0       	breq	.+2      	; 0x61b6 <Calibrate_Data_Page+0x1424>
    61b4:	ce c1       	rjmp	.+924    	; 0x6552 <Calibrate_Data_Page+0x17c0>
    61b6:	3d c0       	rjmp	.+122    	; 0x6232 <Calibrate_Data_Page+0x14a0>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    61b8:	8c e0       	ldi	r24, 0x0C	; 12
    61ba:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[4] = '1';
    61be:	81 e3       	ldi	r24, 0x31	; 49
    61c0:	8f 87       	std	Y+15, r24	; 0x0f
    61c2:	01 e0       	ldi	r16, 0x01	; 1
    61c4:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    61c8:	8c e0       	ldi	r24, 0x0C	; 12
    61ca:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[4] = '2';
    61ce:	82 e3       	ldi	r24, 0x32	; 50
    61d0:	8f 87       	std	Y+15, r24	; 0x0f
    61d2:	01 e0       	ldi	r16, 0x01	; 1
    61d4:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    61d8:	8c e0       	ldi	r24, 0x0C	; 12
    61da:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[4] = '3';
    61de:	83 e3       	ldi	r24, 0x33	; 51
    61e0:	8f 87       	std	Y+15, r24	; 0x0f
    61e2:	01 e0       	ldi	r16, 0x01	; 1
    61e4:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    61e8:	8c e0       	ldi	r24, 0x0C	; 12
    61ea:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[4] = '4';
    61ee:	3f 86       	std	Y+15, r3	; 0x0f
    61f0:	01 e0       	ldi	r16, 0x01	; 1
    61f2:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    61f6:	8c e0       	ldi	r24, 0x0C	; 12
    61f8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     ZO_Buf[4] = '5';
    61fc:	6f 86       	std	Y+15, r6	; 0x0f
    61fe:	01 e0       	ldi	r16, 0x01	; 1
    6200:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    6204:	8c e0       	ldi	r24, 0x0C	; 12
    6206:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[4] = '6';
    620a:	86 e3       	ldi	r24, 0x36	; 54
    620c:	8f 87       	std	Y+15, r24	; 0x0f
    620e:	01 e0       	ldi	r16, 0x01	; 1
    6210:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    6214:	8c e0       	ldi	r24, 0x0C	; 12
    6216:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[4] = '7';
    621a:	2f 86       	std	Y+15, r2	; 0x0f
    621c:	01 e0       	ldi	r16, 0x01	; 1
    621e:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    6222:	8c e0       	ldi	r24, 0x0C	; 12
    6224:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[4] = '8';
    6228:	38 e3       	ldi	r19, 0x38	; 56
    622a:	3f 87       	std	Y+15, r19	; 0x0f
    622c:	01 e0       	ldi	r16, 0x01	; 1
    622e:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    6232:	8c e0       	ldi	r24, 0x0C	; 12
    6234:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[4] = '9';
    6238:	89 e3       	ldi	r24, 0x39	; 57
    623a:	8f 87       	std	Y+15, r24	; 0x0f
    623c:	01 e0       	ldi	r16, 0x01	; 1
    623e:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    6242:	8c e0       	ldi	r24, 0x0C	; 12
    6244:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[4] = '0';
    6248:	80 e3       	ldi	r24, 0x30	; 48
    624a:	8f 87       	std	Y+15, r24	; 0x0f
    624c:	01 e0       	ldi	r16, 0x01	; 1
    624e:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
										  }	
								         break;
								case 6:  ZO = atof(ZO_Buf);	 
    6252:	c6 01       	movw	r24, r12
    6254:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    6258:	60 93 b1 02 	sts	0x02B1, r22
    625c:	70 93 b2 02 	sts	0x02B2, r23
    6260:	80 93 b3 02 	sts	0x02B3, r24
    6264:	90 93 b4 02 	sts	0x02B4, r25
										 lcd_gotoxy(8,2);
    6268:	88 e0       	ldi	r24, 0x08	; 8
    626a:	62 e0       	ldi	r22, 0x02	; 2
    626c:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(ZO_Buf,"%07.3f", ZO);
    6270:	40 91 b1 02 	lds	r20, 0x02B1
    6274:	50 91 b2 02 	lds	r21, 0x02B2
    6278:	60 91 b3 02 	lds	r22, 0x02B3
    627c:	70 91 b4 02 	lds	r23, 0x02B4
    6280:	ad b7       	in	r26, 0x3d	; 61
    6282:	be b7       	in	r27, 0x3e	; 62
    6284:	18 97       	sbiw	r26, 0x08	; 8
    6286:	0f b6       	in	r0, 0x3f	; 63
    6288:	f8 94       	cli
    628a:	be bf       	out	0x3e, r27	; 62
    628c:	0f be       	out	0x3f, r0	; 63
    628e:	ad bf       	out	0x3d, r26	; 61
    6290:	ed b7       	in	r30, 0x3d	; 61
    6292:	fe b7       	in	r31, 0x3e	; 62
    6294:	31 96       	adiw	r30, 0x01	; 1
    6296:	11 96       	adiw	r26, 0x01	; 1
    6298:	cc 92       	st	X, r12
    629a:	11 97       	sbiw	r26, 0x01	; 1
    629c:	12 96       	adiw	r26, 0x02	; 2
    629e:	dc 92       	st	X, r13
    62a0:	e2 82       	std	Z+2, r14	; 0x02
    62a2:	f3 82       	std	Z+3, r15	; 0x03
    62a4:	44 83       	std	Z+4, r20	; 0x04
    62a6:	55 83       	std	Z+5, r21	; 0x05
    62a8:	66 83       	std	Z+6, r22	; 0x06
    62aa:	77 83       	std	Z+7, r23	; 0x07
    62ac:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(ZO_Buf);
    62b0:	2d b7       	in	r18, 0x3d	; 61
    62b2:	3e b7       	in	r19, 0x3e	; 62
    62b4:	28 5f       	subi	r18, 0xF8	; 248
    62b6:	3f 4f       	sbci	r19, 0xFF	; 255
    62b8:	0f b6       	in	r0, 0x3f	; 63
    62ba:	f8 94       	cli
    62bc:	3e bf       	out	0x3e, r19	; 62
    62be:	0f be       	out	0x3f, r0	; 63
    62c0:	2d bf       	out	0x3d, r18	; 61
    62c2:	c6 01       	movw	r24, r12
    62c4:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(13,2);
    62c8:	8d e0       	ldi	r24, 0x0D	; 13
    62ca:	62 e0       	ldi	r22, 0x02	; 2
    62cc:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    62d0:	8f e0       	ldi	r24, 0x0F	; 15
    62d2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    62d6:	80 91 68 03 	lds	r24, 0x0368
    62da:	90 91 69 03 	lds	r25, 0x0369
    62de:	84 33       	cpi	r24, 0x34	; 52
    62e0:	91 05       	cpc	r25, r1
    62e2:	09 f4       	brne	.+2      	; 0x62e6 <Calibrate_Data_Page+0x1554>
    62e4:	41 c0       	rjmp	.+130    	; 0x6368 <Calibrate_Data_Page+0x15d6>
    62e6:	85 33       	cpi	r24, 0x35	; 53
    62e8:	91 05       	cpc	r25, r1
    62ea:	8c f4       	brge	.+34     	; 0x630e <Calibrate_Data_Page+0x157c>
    62ec:	81 33       	cpi	r24, 0x31	; 49
    62ee:	91 05       	cpc	r25, r1
    62f0:	19 f1       	breq	.+70     	; 0x6338 <Calibrate_Data_Page+0x15a6>
    62f2:	82 33       	cpi	r24, 0x32	; 50
    62f4:	91 05       	cpc	r25, r1
    62f6:	24 f4       	brge	.+8      	; 0x6300 <Calibrate_Data_Page+0x156e>
    62f8:	c0 97       	sbiw	r24, 0x30	; 48
    62fa:	09 f0       	breq	.+2      	; 0x62fe <Calibrate_Data_Page+0x156c>
    62fc:	2a c1       	rjmp	.+596    	; 0x6552 <Calibrate_Data_Page+0x17c0>
    62fe:	61 c0       	rjmp	.+194    	; 0x63c2 <Calibrate_Data_Page+0x1630>
    6300:	82 33       	cpi	r24, 0x32	; 50
    6302:	91 05       	cpc	r25, r1
    6304:	09 f1       	breq	.+66     	; 0x6348 <Calibrate_Data_Page+0x15b6>
    6306:	c3 97       	sbiw	r24, 0x33	; 51
    6308:	09 f0       	breq	.+2      	; 0x630c <Calibrate_Data_Page+0x157a>
    630a:	23 c1       	rjmp	.+582    	; 0x6552 <Calibrate_Data_Page+0x17c0>
    630c:	25 c0       	rjmp	.+74     	; 0x6358 <Calibrate_Data_Page+0x15c6>
    630e:	87 33       	cpi	r24, 0x37	; 55
    6310:	91 05       	cpc	r25, r1
    6312:	09 f4       	brne	.+2      	; 0x6316 <Calibrate_Data_Page+0x1584>
    6314:	3f c0       	rjmp	.+126    	; 0x6394 <Calibrate_Data_Page+0x1602>
    6316:	88 33       	cpi	r24, 0x38	; 56
    6318:	91 05       	cpc	r25, r1
    631a:	3c f4       	brge	.+14     	; 0x632a <Calibrate_Data_Page+0x1598>
    631c:	85 33       	cpi	r24, 0x35	; 53
    631e:	91 05       	cpc	r25, r1
    6320:	51 f1       	breq	.+84     	; 0x6376 <Calibrate_Data_Page+0x15e4>
    6322:	c6 97       	sbiw	r24, 0x36	; 54
    6324:	09 f0       	breq	.+2      	; 0x6328 <Calibrate_Data_Page+0x1596>
    6326:	15 c1       	rjmp	.+554    	; 0x6552 <Calibrate_Data_Page+0x17c0>
    6328:	2d c0       	rjmp	.+90     	; 0x6384 <Calibrate_Data_Page+0x15f2>
    632a:	88 33       	cpi	r24, 0x38	; 56
    632c:	91 05       	cpc	r25, r1
    632e:	c9 f1       	breq	.+114    	; 0x63a2 <Calibrate_Data_Page+0x1610>
    6330:	c9 97       	sbiw	r24, 0x39	; 57
    6332:	09 f0       	breq	.+2      	; 0x6336 <Calibrate_Data_Page+0x15a4>
    6334:	0e c1       	rjmp	.+540    	; 0x6552 <Calibrate_Data_Page+0x17c0>
    6336:	3d c0       	rjmp	.+122    	; 0x63b2 <Calibrate_Data_Page+0x1620>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    6338:	8c e0       	ldi	r24, 0x0C	; 12
    633a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[5] = '1';
    633e:	81 e3       	ldi	r24, 0x31	; 49
    6340:	88 8b       	std	Y+16, r24	; 0x10
    6342:	01 e0       	ldi	r16, 0x01	; 1
    6344:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    6348:	8c e0       	ldi	r24, 0x0C	; 12
    634a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[5] = '2';
    634e:	82 e3       	ldi	r24, 0x32	; 50
    6350:	88 8b       	std	Y+16, r24	; 0x10
    6352:	01 e0       	ldi	r16, 0x01	; 1
    6354:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    6358:	8c e0       	ldi	r24, 0x0C	; 12
    635a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[5] = '3';
    635e:	83 e3       	ldi	r24, 0x33	; 51
    6360:	88 8b       	std	Y+16, r24	; 0x10
    6362:	01 e0       	ldi	r16, 0x01	; 1
    6364:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    6368:	8c e0       	ldi	r24, 0x0C	; 12
    636a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[5] = '4';
    636e:	38 8a       	std	Y+16, r3	; 0x10
    6370:	01 e0       	ldi	r16, 0x01	; 1
    6372:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														 
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    6376:	8c e0       	ldi	r24, 0x0C	; 12
    6378:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     ZO_Buf[5] = '5';
    637c:	68 8a       	std	Y+16, r6	; 0x10
    637e:	01 e0       	ldi	r16, 0x01	; 1
    6380:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    6384:	8c e0       	ldi	r24, 0x0C	; 12
    6386:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[5] = '6';
    638a:	86 e3       	ldi	r24, 0x36	; 54
    638c:	88 8b       	std	Y+16, r24	; 0x10
    638e:	01 e0       	ldi	r16, 0x01	; 1
    6390:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    6394:	8c e0       	ldi	r24, 0x0C	; 12
    6396:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[5] = '7';
    639a:	28 8a       	std	Y+16, r2	; 0x10
    639c:	01 e0       	ldi	r16, 0x01	; 1
    639e:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    63a2:	8c e0       	ldi	r24, 0x0C	; 12
    63a4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[5] = '8';
    63a8:	38 e3       	ldi	r19, 0x38	; 56
    63aa:	38 8b       	std	Y+16, r19	; 0x10
    63ac:	01 e0       	ldi	r16, 0x01	; 1
    63ae:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    63b2:	8c e0       	ldi	r24, 0x0C	; 12
    63b4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[5] = '9';
    63b8:	89 e3       	ldi	r24, 0x39	; 57
    63ba:	88 8b       	std	Y+16, r24	; 0x10
    63bc:	01 e0       	ldi	r16, 0x01	; 1
    63be:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    63c2:	8c e0       	ldi	r24, 0x0C	; 12
    63c4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[5] = '0';
    63c8:	80 e3       	ldi	r24, 0x30	; 48
    63ca:	88 8b       	std	Y+16, r24	; 0x10
    63cc:	01 e0       	ldi	r16, 0x01	; 1
    63ce:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
										  }	
								         break;
								case 7:  ZO = atof(ZO_Buf);	 
    63d2:	c6 01       	movw	r24, r12
    63d4:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    63d8:	60 93 b1 02 	sts	0x02B1, r22
    63dc:	70 93 b2 02 	sts	0x02B2, r23
    63e0:	80 93 b3 02 	sts	0x02B3, r24
    63e4:	90 93 b4 02 	sts	0x02B4, r25
										 lcd_gotoxy(8,2);
    63e8:	88 e0       	ldi	r24, 0x08	; 8
    63ea:	62 e0       	ldi	r22, 0x02	; 2
    63ec:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(ZO_Buf,"%07.3f", ZO);
    63f0:	40 91 b1 02 	lds	r20, 0x02B1
    63f4:	50 91 b2 02 	lds	r21, 0x02B2
    63f8:	60 91 b3 02 	lds	r22, 0x02B3
    63fc:	70 91 b4 02 	lds	r23, 0x02B4
    6400:	ad b7       	in	r26, 0x3d	; 61
    6402:	be b7       	in	r27, 0x3e	; 62
    6404:	18 97       	sbiw	r26, 0x08	; 8
    6406:	0f b6       	in	r0, 0x3f	; 63
    6408:	f8 94       	cli
    640a:	be bf       	out	0x3e, r27	; 62
    640c:	0f be       	out	0x3f, r0	; 63
    640e:	ad bf       	out	0x3d, r26	; 61
    6410:	ed b7       	in	r30, 0x3d	; 61
    6412:	fe b7       	in	r31, 0x3e	; 62
    6414:	31 96       	adiw	r30, 0x01	; 1
    6416:	11 96       	adiw	r26, 0x01	; 1
    6418:	cc 92       	st	X, r12
    641a:	11 97       	sbiw	r26, 0x01	; 1
    641c:	12 96       	adiw	r26, 0x02	; 2
    641e:	dc 92       	st	X, r13
    6420:	e2 82       	std	Z+2, r14	; 0x02
    6422:	f3 82       	std	Z+3, r15	; 0x03
    6424:	44 83       	std	Z+4, r20	; 0x04
    6426:	55 83       	std	Z+5, r21	; 0x05
    6428:	66 83       	std	Z+6, r22	; 0x06
    642a:	77 83       	std	Z+7, r23	; 0x07
    642c:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(ZO_Buf);
    6430:	2d b7       	in	r18, 0x3d	; 61
    6432:	3e b7       	in	r19, 0x3e	; 62
    6434:	28 5f       	subi	r18, 0xF8	; 248
    6436:	3f 4f       	sbci	r19, 0xFF	; 255
    6438:	0f b6       	in	r0, 0x3f	; 63
    643a:	f8 94       	cli
    643c:	3e bf       	out	0x3e, r19	; 62
    643e:	0f be       	out	0x3f, r0	; 63
    6440:	2d bf       	out	0x3d, r18	; 61
    6442:	c6 01       	movw	r24, r12
    6444:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(14,2);
    6448:	8e e0       	ldi	r24, 0x0E	; 14
    644a:	62 e0       	ldi	r22, 0x02	; 2
    644c:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    6450:	8f e0       	ldi	r24, 0x0F	; 15
    6452:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    6456:	80 91 68 03 	lds	r24, 0x0368
    645a:	90 91 69 03 	lds	r25, 0x0369
    645e:	84 33       	cpi	r24, 0x34	; 52
    6460:	91 05       	cpc	r25, r1
    6462:	09 f4       	brne	.+2      	; 0x6466 <Calibrate_Data_Page+0x16d4>
    6464:	41 c0       	rjmp	.+130    	; 0x64e8 <Calibrate_Data_Page+0x1756>
    6466:	85 33       	cpi	r24, 0x35	; 53
    6468:	91 05       	cpc	r25, r1
    646a:	8c f4       	brge	.+34     	; 0x648e <Calibrate_Data_Page+0x16fc>
    646c:	81 33       	cpi	r24, 0x31	; 49
    646e:	91 05       	cpc	r25, r1
    6470:	19 f1       	breq	.+70     	; 0x64b8 <Calibrate_Data_Page+0x1726>
    6472:	82 33       	cpi	r24, 0x32	; 50
    6474:	91 05       	cpc	r25, r1
    6476:	24 f4       	brge	.+8      	; 0x6480 <Calibrate_Data_Page+0x16ee>
    6478:	c0 97       	sbiw	r24, 0x30	; 48
    647a:	09 f0       	breq	.+2      	; 0x647e <Calibrate_Data_Page+0x16ec>
    647c:	6a c0       	rjmp	.+212    	; 0x6552 <Calibrate_Data_Page+0x17c0>
    647e:	61 c0       	rjmp	.+194    	; 0x6542 <Calibrate_Data_Page+0x17b0>
    6480:	82 33       	cpi	r24, 0x32	; 50
    6482:	91 05       	cpc	r25, r1
    6484:	09 f1       	breq	.+66     	; 0x64c8 <Calibrate_Data_Page+0x1736>
    6486:	c3 97       	sbiw	r24, 0x33	; 51
    6488:	09 f0       	breq	.+2      	; 0x648c <Calibrate_Data_Page+0x16fa>
    648a:	63 c0       	rjmp	.+198    	; 0x6552 <Calibrate_Data_Page+0x17c0>
    648c:	25 c0       	rjmp	.+74     	; 0x64d8 <Calibrate_Data_Page+0x1746>
    648e:	87 33       	cpi	r24, 0x37	; 55
    6490:	91 05       	cpc	r25, r1
    6492:	09 f4       	brne	.+2      	; 0x6496 <Calibrate_Data_Page+0x1704>
    6494:	3f c0       	rjmp	.+126    	; 0x6514 <Calibrate_Data_Page+0x1782>
    6496:	88 33       	cpi	r24, 0x38	; 56
    6498:	91 05       	cpc	r25, r1
    649a:	3c f4       	brge	.+14     	; 0x64aa <Calibrate_Data_Page+0x1718>
    649c:	85 33       	cpi	r24, 0x35	; 53
    649e:	91 05       	cpc	r25, r1
    64a0:	51 f1       	breq	.+84     	; 0x64f6 <Calibrate_Data_Page+0x1764>
    64a2:	c6 97       	sbiw	r24, 0x36	; 54
    64a4:	09 f0       	breq	.+2      	; 0x64a8 <Calibrate_Data_Page+0x1716>
    64a6:	55 c0       	rjmp	.+170    	; 0x6552 <Calibrate_Data_Page+0x17c0>
    64a8:	2d c0       	rjmp	.+90     	; 0x6504 <Calibrate_Data_Page+0x1772>
    64aa:	88 33       	cpi	r24, 0x38	; 56
    64ac:	91 05       	cpc	r25, r1
    64ae:	c9 f1       	breq	.+114    	; 0x6522 <Calibrate_Data_Page+0x1790>
    64b0:	c9 97       	sbiw	r24, 0x39	; 57
    64b2:	09 f0       	breq	.+2      	; 0x64b6 <Calibrate_Data_Page+0x1724>
    64b4:	4e c0       	rjmp	.+156    	; 0x6552 <Calibrate_Data_Page+0x17c0>
    64b6:	3d c0       	rjmp	.+122    	; 0x6532 <Calibrate_Data_Page+0x17a0>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    64b8:	8c e0       	ldi	r24, 0x0C	; 12
    64ba:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[6] = '1';
    64be:	81 e3       	ldi	r24, 0x31	; 49
    64c0:	89 8b       	std	Y+17, r24	; 0x11
    64c2:	01 e0       	ldi	r16, 0x01	; 1
    64c4:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    64c8:	8c e0       	ldi	r24, 0x0C	; 12
    64ca:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[6] = '2';
    64ce:	82 e3       	ldi	r24, 0x32	; 50
    64d0:	89 8b       	std	Y+17, r24	; 0x11
    64d2:	01 e0       	ldi	r16, 0x01	; 1
    64d4:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    64d8:	8c e0       	ldi	r24, 0x0C	; 12
    64da:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[6] = '3';
    64de:	83 e3       	ldi	r24, 0x33	; 51
    64e0:	89 8b       	std	Y+17, r24	; 0x11
    64e2:	01 e0       	ldi	r16, 0x01	; 1
    64e4:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    64e8:	8c e0       	ldi	r24, 0x0C	; 12
    64ea:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[6] = '4';
    64ee:	39 8a       	std	Y+17, r3	; 0x11
    64f0:	01 e0       	ldi	r16, 0x01	; 1
    64f2:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    64f6:	8c e0       	ldi	r24, 0x0C	; 12
    64f8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     ZO_Buf[6] = '5';
    64fc:	69 8a       	std	Y+17, r6	; 0x11
    64fe:	01 e0       	ldi	r16, 0x01	; 1
    6500:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    6504:	8c e0       	ldi	r24, 0x0C	; 12
    6506:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 ZO_Buf[6] = '6';
    650a:	86 e3       	ldi	r24, 0x36	; 54
    650c:	89 8b       	std	Y+17, r24	; 0x11
    650e:	01 e0       	ldi	r16, 0x01	; 1
    6510:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    6514:	8c e0       	ldi	r24, 0x0C	; 12
    6516:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[6] = '7';
    651a:	29 8a       	std	Y+17, r2	; 0x11
    651c:	01 e0       	ldi	r16, 0x01	; 1
    651e:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    6522:	8c e0       	ldi	r24, 0x0C	; 12
    6524:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[6] = '8';
    6528:	38 e3       	ldi	r19, 0x38	; 56
    652a:	39 8b       	std	Y+17, r19	; 0x11
    652c:	01 e0       	ldi	r16, 0x01	; 1
    652e:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    6532:	8c e0       	ldi	r24, 0x0C	; 12
    6534:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[6] = '9';
    6538:	89 e3       	ldi	r24, 0x39	; 57
    653a:	89 8b       	std	Y+17, r24	; 0x11
    653c:	01 e0       	ldi	r16, 0x01	; 1
    653e:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    6542:	8c e0       	ldi	r24, 0x0C	; 12
    6544:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         ZO_Buf[6] = '0';
    6548:	80 e3       	ldi	r24, 0x30	; 48
    654a:	89 8b       	std	Y+17, r24	; 0x11
    654c:	01 e0       	ldi	r16, 0x01	; 1
    654e:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
    6552:	01 e0       	ldi	r16, 0x01	; 1
										  }	
								         break;
					        } 
						    
					}
					if(CalibrateDataPageCursor == 3)
    6554:	9a a5       	ldd	r25, Y+42	; 0x2a
    6556:	93 30       	cpi	r25, 0x03	; 3
    6558:	09 f0       	breq	.+2      	; 0x655c <Calibrate_Data_Page+0x17ca>
    655a:	34 c4       	rjmp	.+2152   	; 0x6dc4 <Calibrate_Data_Page+0x2032>
					{
						    
						    switch (CalibrateDataLineCursor)  // Main Menu Switch statement
    655c:	a4 e0       	ldi	r26, 0x04	; 4
    655e:	9a 16       	cp	r9, r26
    6560:	09 f4       	brne	.+2      	; 0x6564 <Calibrate_Data_Page+0x17d2>
    6562:	24 c2       	rjmp	.+1096   	; 0x69ac <Calibrate_Data_Page+0x1c1a>
    6564:	a9 15       	cp	r26, r9
    6566:	60 f0       	brcs	.+24     	; 0x6580 <Calibrate_Data_Page+0x17ee>
    6568:	b2 e0       	ldi	r27, 0x02	; 2
    656a:	9b 16       	cp	r9, r27
    656c:	09 f4       	brne	.+2      	; 0x6570 <Calibrate_Data_Page+0x17de>
    656e:	c6 c0       	rjmp	.+396    	; 0x66fc <Calibrate_Data_Page+0x196a>
    6570:	b9 15       	cp	r27, r9
    6572:	08 f4       	brcc	.+2      	; 0x6576 <Calibrate_Data_Page+0x17e4>
    6574:	6f c1       	rjmp	.+734    	; 0x6854 <Calibrate_Data_Page+0x1ac2>
    6576:	90 16       	cp	r9, r16
    6578:	11 f0       	breq	.+4      	; 0x657e <Calibrate_Data_Page+0x17ec>
    657a:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
    657e:	0d c0       	rjmp	.+26     	; 0x659a <Calibrate_Data_Page+0x1808>
    6580:	26 e0       	ldi	r18, 0x06	; 6
    6582:	92 16       	cp	r9, r18
    6584:	09 f4       	brne	.+2      	; 0x6588 <Calibrate_Data_Page+0x17f6>
    6586:	c6 c2       	rjmp	.+1420   	; 0x6b14 <Calibrate_Data_Page+0x1d82>
    6588:	92 16       	cp	r9, r18
    658a:	08 f4       	brcc	.+2      	; 0x658e <Calibrate_Data_Page+0x17fc>
    658c:	17 c2       	rjmp	.+1070   	; 0x69bc <Calibrate_Data_Page+0x1c2a>
    658e:	37 e0       	ldi	r19, 0x07	; 7
    6590:	93 16       	cp	r9, r19
    6592:	11 f0       	breq	.+4      	; 0x6598 <Calibrate_Data_Page+0x1806>
    6594:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
    6598:	69 c3       	rjmp	.+1746   	; 0x6c6c <Calibrate_Data_Page+0x1eda>
						    {
								case 1:  SN = atof(SN_Buf);	 
    659a:	88 2d       	mov	r24, r8
    659c:	97 2d       	mov	r25, r7
    659e:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    65a2:	60 93 ee 02 	sts	0x02EE, r22
    65a6:	70 93 ef 02 	sts	0x02EF, r23
    65aa:	80 93 f0 02 	sts	0x02F0, r24
    65ae:	90 93 f1 02 	sts	0x02F1, r25
										 lcd_gotoxy(8,3);
    65b2:	88 e0       	ldi	r24, 0x08	; 8
    65b4:	63 e0       	ldi	r22, 0x03	; 3
    65b6:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(SN_Buf,"%07.3f", SN);
    65ba:	40 91 ee 02 	lds	r20, 0x02EE
    65be:	50 91 ef 02 	lds	r21, 0x02EF
    65c2:	60 91 f0 02 	lds	r22, 0x02F0
    65c6:	70 91 f1 02 	lds	r23, 0x02F1
    65ca:	8d b7       	in	r24, 0x3d	; 61
    65cc:	9e b7       	in	r25, 0x3e	; 62
    65ce:	08 97       	sbiw	r24, 0x08	; 8
    65d0:	0f b6       	in	r0, 0x3f	; 63
    65d2:	f8 94       	cli
    65d4:	9e bf       	out	0x3e, r25	; 62
    65d6:	0f be       	out	0x3f, r0	; 63
    65d8:	8d bf       	out	0x3d, r24	; 61
    65da:	ed b7       	in	r30, 0x3d	; 61
    65dc:	fe b7       	in	r31, 0x3e	; 62
    65de:	31 96       	adiw	r30, 0x01	; 1
    65e0:	ad b7       	in	r26, 0x3d	; 61
    65e2:	be b7       	in	r27, 0x3e	; 62
    65e4:	11 96       	adiw	r26, 0x01	; 1
    65e6:	8c 92       	st	X, r8
    65e8:	11 97       	sbiw	r26, 0x01	; 1
    65ea:	12 96       	adiw	r26, 0x02	; 2
    65ec:	7c 92       	st	X, r7
    65ee:	e2 82       	std	Z+2, r14	; 0x02
    65f0:	f3 82       	std	Z+3, r15	; 0x03
    65f2:	44 83       	std	Z+4, r20	; 0x04
    65f4:	55 83       	std	Z+5, r21	; 0x05
    65f6:	66 83       	std	Z+6, r22	; 0x06
    65f8:	77 83       	std	Z+7, r23	; 0x07
    65fa:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(SN_Buf);
    65fe:	2d b7       	in	r18, 0x3d	; 61
    6600:	3e b7       	in	r19, 0x3e	; 62
    6602:	28 5f       	subi	r18, 0xF8	; 248
    6604:	3f 4f       	sbci	r19, 0xFF	; 255
    6606:	0f b6       	in	r0, 0x3f	; 63
    6608:	f8 94       	cli
    660a:	3e bf       	out	0x3e, r19	; 62
    660c:	0f be       	out	0x3f, r0	; 63
    660e:	2d bf       	out	0x3d, r18	; 61
    6610:	88 2d       	mov	r24, r8
    6612:	97 2d       	mov	r25, r7
    6614:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(8,3);
    6618:	88 e0       	ldi	r24, 0x08	; 8
    661a:	63 e0       	ldi	r22, 0x03	; 3
    661c:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				          				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    6620:	8f e0       	ldi	r24, 0x0F	; 15
    6622:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										  switch (key)  // Main Menu Switch statement
    6626:	80 91 68 03 	lds	r24, 0x0368
    662a:	90 91 69 03 	lds	r25, 0x0369
    662e:	84 33       	cpi	r24, 0x34	; 52
    6630:	91 05       	cpc	r25, r1
    6632:	09 f4       	brne	.+2      	; 0x6636 <Calibrate_Data_Page+0x18a4>
    6634:	3c c0       	rjmp	.+120    	; 0x66ae <Calibrate_Data_Page+0x191c>
    6636:	85 33       	cpi	r24, 0x35	; 53
    6638:	91 05       	cpc	r25, r1
    663a:	9c f4       	brge	.+38     	; 0x6662 <Calibrate_Data_Page+0x18d0>
    663c:	81 33       	cpi	r24, 0x31	; 49
    663e:	91 05       	cpc	r25, r1
    6640:	21 f1       	breq	.+72     	; 0x668a <Calibrate_Data_Page+0x18f8>
    6642:	82 33       	cpi	r24, 0x32	; 50
    6644:	91 05       	cpc	r25, r1
    6646:	2c f4       	brge	.+10     	; 0x6652 <Calibrate_Data_Page+0x18c0>
    6648:	c0 97       	sbiw	r24, 0x30	; 48
    664a:	11 f0       	breq	.+4      	; 0x6650 <Calibrate_Data_Page+0x18be>
    664c:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
    6650:	4f c0       	rjmp	.+158    	; 0x66f0 <Calibrate_Data_Page+0x195e>
    6652:	82 33       	cpi	r24, 0x32	; 50
    6654:	91 05       	cpc	r25, r1
    6656:	f9 f0       	breq	.+62     	; 0x6696 <Calibrate_Data_Page+0x1904>
    6658:	c3 97       	sbiw	r24, 0x33	; 51
    665a:	11 f0       	breq	.+4      	; 0x6660 <Calibrate_Data_Page+0x18ce>
    665c:	0c 94 07 3b 	jmp	0x760e	; 0x760e <Calibrate_Data_Page+0x287c>
    6660:	20 c0       	rjmp	.+64     	; 0x66a2 <Calibrate_Data_Page+0x1910>
    6662:	87 33       	cpi	r24, 0x37	; 55
    6664:	91 05       	cpc	r25, r1
    6666:	99 f1       	breq	.+102    	; 0x66ce <Calibrate_Data_Page+0x193c>
    6668:	88 33       	cpi	r24, 0x38	; 56
    666a:	91 05       	cpc	r25, r1
    666c:	3c f4       	brge	.+14     	; 0x667c <Calibrate_Data_Page+0x18ea>
    666e:	85 33       	cpi	r24, 0x35	; 53
    6670:	91 05       	cpc	r25, r1
    6672:	11 f1       	breq	.+68     	; 0x66b8 <Calibrate_Data_Page+0x1926>
    6674:	c6 97       	sbiw	r24, 0x36	; 54
    6676:	09 f0       	breq	.+2      	; 0x667a <Calibrate_Data_Page+0x18e8>
    6678:	ca c7       	rjmp	.+3988   	; 0x760e <Calibrate_Data_Page+0x287c>
    667a:	23 c0       	rjmp	.+70     	; 0x66c2 <Calibrate_Data_Page+0x1930>
    667c:	88 33       	cpi	r24, 0x38	; 56
    667e:	91 05       	cpc	r25, r1
    6680:	59 f1       	breq	.+86     	; 0x66d8 <Calibrate_Data_Page+0x1946>
    6682:	c9 97       	sbiw	r24, 0x39	; 57
    6684:	09 f0       	breq	.+2      	; 0x6688 <Calibrate_Data_Page+0x18f6>
    6686:	c3 c7       	rjmp	.+3974   	; 0x760e <Calibrate_Data_Page+0x287c>
    6688:	2d c0       	rjmp	.+90     	; 0x66e4 <Calibrate_Data_Page+0x1952>
										    {
											 
												case '1':lcd_command(LCD_DISP_ON);
    668a:	8c e0       	ldi	r24, 0x0C	; 12
    668c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[0] = '1';
    6690:	81 e3       	ldi	r24, 0x31	; 49
    6692:	8d 8b       	std	Y+21, r24	; 0x15
    6694:	bc c7       	rjmp	.+3960   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    6696:	8c e0       	ldi	r24, 0x0C	; 12
    6698:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[0] = '2';
    669c:	82 e3       	ldi	r24, 0x32	; 50
    669e:	8d 8b       	std	Y+21, r24	; 0x15
    66a0:	b6 c7       	rjmp	.+3948   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    66a2:	8c e0       	ldi	r24, 0x0C	; 12
    66a4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[0] = '3';
    66a8:	83 e3       	ldi	r24, 0x33	; 51
    66aa:	8d 8b       	std	Y+21, r24	; 0x15
    66ac:	b0 c7       	rjmp	.+3936   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    66ae:	8c e0       	ldi	r24, 0x0C	; 12
    66b0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[0] = '4';
    66b4:	3d 8a       	std	Y+21, r3	; 0x15
    66b6:	ab c7       	rjmp	.+3926   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    66b8:	8c e0       	ldi	r24, 0x0C	; 12
    66ba:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     SN_Buf[0] = '5';
    66be:	6d 8a       	std	Y+21, r6	; 0x15
    66c0:	a6 c7       	rjmp	.+3916   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    66c2:	8c e0       	ldi	r24, 0x0C	; 12
    66c4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[0] = '6';
    66c8:	86 e3       	ldi	r24, 0x36	; 54
    66ca:	8d 8b       	std	Y+21, r24	; 0x15
    66cc:	a0 c7       	rjmp	.+3904   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    66ce:	8c e0       	ldi	r24, 0x0C	; 12
    66d0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[0] = '7';
    66d4:	2d 8a       	std	Y+21, r2	; 0x15
    66d6:	9b c7       	rjmp	.+3894   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    66d8:	8c e0       	ldi	r24, 0x0C	; 12
    66da:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[0] = '8';
    66de:	38 e3       	ldi	r19, 0x38	; 56
    66e0:	3d 8b       	std	Y+21, r19	; 0x15
    66e2:	95 c7       	rjmp	.+3882   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    66e4:	8c e0       	ldi	r24, 0x0C	; 12
    66e6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[0] = '9';
    66ea:	89 e3       	ldi	r24, 0x39	; 57
    66ec:	8d 8b       	std	Y+21, r24	; 0x15
    66ee:	8f c7       	rjmp	.+3870   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    66f0:	8c e0       	ldi	r24, 0x0C	; 12
    66f2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[0] = '0';
    66f6:	80 e3       	ldi	r24, 0x30	; 48
    66f8:	8d 8b       	std	Y+21, r24	; 0x15
    66fa:	89 c7       	rjmp	.+3858   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
											 }									
								         break;
								case 2:  SN = atof(SN_Buf);	 
    66fc:	88 2d       	mov	r24, r8
    66fe:	97 2d       	mov	r25, r7
    6700:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    6704:	60 93 ee 02 	sts	0x02EE, r22
    6708:	70 93 ef 02 	sts	0x02EF, r23
    670c:	80 93 f0 02 	sts	0x02F0, r24
    6710:	90 93 f1 02 	sts	0x02F1, r25
										 lcd_gotoxy(8,3);
    6714:	88 e0       	ldi	r24, 0x08	; 8
    6716:	63 e0       	ldi	r22, 0x03	; 3
    6718:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(SN_Buf,"%07.3f", SN);
    671c:	40 91 ee 02 	lds	r20, 0x02EE
    6720:	50 91 ef 02 	lds	r21, 0x02EF
    6724:	60 91 f0 02 	lds	r22, 0x02F0
    6728:	70 91 f1 02 	lds	r23, 0x02F1
    672c:	ad b7       	in	r26, 0x3d	; 61
    672e:	be b7       	in	r27, 0x3e	; 62
    6730:	18 97       	sbiw	r26, 0x08	; 8
    6732:	0f b6       	in	r0, 0x3f	; 63
    6734:	f8 94       	cli
    6736:	be bf       	out	0x3e, r27	; 62
    6738:	0f be       	out	0x3f, r0	; 63
    673a:	ad bf       	out	0x3d, r26	; 61
    673c:	ed b7       	in	r30, 0x3d	; 61
    673e:	fe b7       	in	r31, 0x3e	; 62
    6740:	31 96       	adiw	r30, 0x01	; 1
    6742:	11 96       	adiw	r26, 0x01	; 1
    6744:	8c 92       	st	X, r8
    6746:	11 97       	sbiw	r26, 0x01	; 1
    6748:	12 96       	adiw	r26, 0x02	; 2
    674a:	7c 92       	st	X, r7
    674c:	e2 82       	std	Z+2, r14	; 0x02
    674e:	f3 82       	std	Z+3, r15	; 0x03
    6750:	44 83       	std	Z+4, r20	; 0x04
    6752:	55 83       	std	Z+5, r21	; 0x05
    6754:	66 83       	std	Z+6, r22	; 0x06
    6756:	77 83       	std	Z+7, r23	; 0x07
    6758:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(SN_Buf);
    675c:	2d b7       	in	r18, 0x3d	; 61
    675e:	3e b7       	in	r19, 0x3e	; 62
    6760:	28 5f       	subi	r18, 0xF8	; 248
    6762:	3f 4f       	sbci	r19, 0xFF	; 255
    6764:	0f b6       	in	r0, 0x3f	; 63
    6766:	f8 94       	cli
    6768:	3e bf       	out	0x3e, r19	; 62
    676a:	0f be       	out	0x3f, r0	; 63
    676c:	2d bf       	out	0x3d, r18	; 61
    676e:	88 2d       	mov	r24, r8
    6770:	97 2d       	mov	r25, r7
    6772:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(9,3);
    6776:	89 e0       	ldi	r24, 0x09	; 9
    6778:	63 e0       	ldi	r22, 0x03	; 3
    677a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    677e:	8f e0       	ldi	r24, 0x0F	; 15
    6780:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    6784:	80 91 68 03 	lds	r24, 0x0368
    6788:	90 91 69 03 	lds	r25, 0x0369
    678c:	84 33       	cpi	r24, 0x34	; 52
    678e:	91 05       	cpc	r25, r1
    6790:	d1 f1       	breq	.+116    	; 0x6806 <Calibrate_Data_Page+0x1a74>
    6792:	85 33       	cpi	r24, 0x35	; 53
    6794:	91 05       	cpc	r25, r1
    6796:	8c f4       	brge	.+34     	; 0x67ba <Calibrate_Data_Page+0x1a28>
    6798:	81 33       	cpi	r24, 0x31	; 49
    679a:	91 05       	cpc	r25, r1
    679c:	11 f1       	breq	.+68     	; 0x67e2 <Calibrate_Data_Page+0x1a50>
    679e:	82 33       	cpi	r24, 0x32	; 50
    67a0:	91 05       	cpc	r25, r1
    67a2:	24 f4       	brge	.+8      	; 0x67ac <Calibrate_Data_Page+0x1a1a>
    67a4:	c0 97       	sbiw	r24, 0x30	; 48
    67a6:	09 f0       	breq	.+2      	; 0x67aa <Calibrate_Data_Page+0x1a18>
    67a8:	32 c7       	rjmp	.+3684   	; 0x760e <Calibrate_Data_Page+0x287c>
    67aa:	4e c0       	rjmp	.+156    	; 0x6848 <Calibrate_Data_Page+0x1ab6>
    67ac:	82 33       	cpi	r24, 0x32	; 50
    67ae:	91 05       	cpc	r25, r1
    67b0:	f1 f0       	breq	.+60     	; 0x67ee <Calibrate_Data_Page+0x1a5c>
    67b2:	c3 97       	sbiw	r24, 0x33	; 51
    67b4:	09 f0       	breq	.+2      	; 0x67b8 <Calibrate_Data_Page+0x1a26>
    67b6:	2b c7       	rjmp	.+3670   	; 0x760e <Calibrate_Data_Page+0x287c>
    67b8:	20 c0       	rjmp	.+64     	; 0x67fa <Calibrate_Data_Page+0x1a68>
    67ba:	87 33       	cpi	r24, 0x37	; 55
    67bc:	91 05       	cpc	r25, r1
    67be:	99 f1       	breq	.+102    	; 0x6826 <Calibrate_Data_Page+0x1a94>
    67c0:	88 33       	cpi	r24, 0x38	; 56
    67c2:	91 05       	cpc	r25, r1
    67c4:	3c f4       	brge	.+14     	; 0x67d4 <Calibrate_Data_Page+0x1a42>
    67c6:	85 33       	cpi	r24, 0x35	; 53
    67c8:	91 05       	cpc	r25, r1
    67ca:	11 f1       	breq	.+68     	; 0x6810 <Calibrate_Data_Page+0x1a7e>
    67cc:	c6 97       	sbiw	r24, 0x36	; 54
    67ce:	09 f0       	breq	.+2      	; 0x67d2 <Calibrate_Data_Page+0x1a40>
    67d0:	1e c7       	rjmp	.+3644   	; 0x760e <Calibrate_Data_Page+0x287c>
    67d2:	23 c0       	rjmp	.+70     	; 0x681a <Calibrate_Data_Page+0x1a88>
    67d4:	88 33       	cpi	r24, 0x38	; 56
    67d6:	91 05       	cpc	r25, r1
    67d8:	59 f1       	breq	.+86     	; 0x6830 <Calibrate_Data_Page+0x1a9e>
    67da:	c9 97       	sbiw	r24, 0x39	; 57
    67dc:	09 f0       	breq	.+2      	; 0x67e0 <Calibrate_Data_Page+0x1a4e>
    67de:	17 c7       	rjmp	.+3630   	; 0x760e <Calibrate_Data_Page+0x287c>
    67e0:	2d c0       	rjmp	.+90     	; 0x683c <Calibrate_Data_Page+0x1aaa>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    67e2:	8c e0       	ldi	r24, 0x0C	; 12
    67e4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[1] = '1';
    67e8:	81 e3       	ldi	r24, 0x31	; 49
    67ea:	8e 8b       	std	Y+22, r24	; 0x16
    67ec:	10 c7       	rjmp	.+3616   	; 0x760e <Calibrate_Data_Page+0x287c>
														 
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    67ee:	8c e0       	ldi	r24, 0x0C	; 12
    67f0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[1] = '2';
    67f4:	82 e3       	ldi	r24, 0x32	; 50
    67f6:	8e 8b       	std	Y+22, r24	; 0x16
    67f8:	0a c7       	rjmp	.+3604   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    67fa:	8c e0       	ldi	r24, 0x0C	; 12
    67fc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[1] = '3';
    6800:	83 e3       	ldi	r24, 0x33	; 51
    6802:	8e 8b       	std	Y+22, r24	; 0x16
    6804:	04 c7       	rjmp	.+3592   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    6806:	8c e0       	ldi	r24, 0x0C	; 12
    6808:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[1] = '4';
    680c:	3e 8a       	std	Y+22, r3	; 0x16
    680e:	ff c6       	rjmp	.+3582   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    6810:	8c e0       	ldi	r24, 0x0C	; 12
    6812:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     SN_Buf[1] = '5';
    6816:	6e 8a       	std	Y+22, r6	; 0x16
    6818:	fa c6       	rjmp	.+3572   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    681a:	8c e0       	ldi	r24, 0x0C	; 12
    681c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[1] = '6';
    6820:	86 e3       	ldi	r24, 0x36	; 54
    6822:	8e 8b       	std	Y+22, r24	; 0x16
    6824:	f4 c6       	rjmp	.+3560   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    6826:	8c e0       	ldi	r24, 0x0C	; 12
    6828:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[1] = '7';
    682c:	2e 8a       	std	Y+22, r2	; 0x16
    682e:	ef c6       	rjmp	.+3550   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    6830:	8c e0       	ldi	r24, 0x0C	; 12
    6832:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[1] = '8';
    6836:	38 e3       	ldi	r19, 0x38	; 56
    6838:	3e 8b       	std	Y+22, r19	; 0x16
    683a:	e9 c6       	rjmp	.+3538   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    683c:	8c e0       	ldi	r24, 0x0C	; 12
    683e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[1] = '9';
    6842:	89 e3       	ldi	r24, 0x39	; 57
    6844:	8e 8b       	std	Y+22, r24	; 0x16
    6846:	e3 c6       	rjmp	.+3526   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    6848:	8c e0       	ldi	r24, 0x0C	; 12
    684a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[1] = '0';
    684e:	80 e3       	ldi	r24, 0x30	; 48
    6850:	8e 8b       	std	Y+22, r24	; 0x16
    6852:	dd c6       	rjmp	.+3514   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
										  }	
								         break;
								case 3:  SN = atof(SN_Buf);	 
    6854:	88 2d       	mov	r24, r8
    6856:	97 2d       	mov	r25, r7
    6858:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    685c:	60 93 ee 02 	sts	0x02EE, r22
    6860:	70 93 ef 02 	sts	0x02EF, r23
    6864:	80 93 f0 02 	sts	0x02F0, r24
    6868:	90 93 f1 02 	sts	0x02F1, r25
										 lcd_gotoxy(8,3);
    686c:	88 e0       	ldi	r24, 0x08	; 8
    686e:	63 e0       	ldi	r22, 0x03	; 3
    6870:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(SN_Buf,"%07.3f", SN);
    6874:	40 91 ee 02 	lds	r20, 0x02EE
    6878:	50 91 ef 02 	lds	r21, 0x02EF
    687c:	60 91 f0 02 	lds	r22, 0x02F0
    6880:	70 91 f1 02 	lds	r23, 0x02F1
    6884:	ad b7       	in	r26, 0x3d	; 61
    6886:	be b7       	in	r27, 0x3e	; 62
    6888:	18 97       	sbiw	r26, 0x08	; 8
    688a:	0f b6       	in	r0, 0x3f	; 63
    688c:	f8 94       	cli
    688e:	be bf       	out	0x3e, r27	; 62
    6890:	0f be       	out	0x3f, r0	; 63
    6892:	ad bf       	out	0x3d, r26	; 61
    6894:	ed b7       	in	r30, 0x3d	; 61
    6896:	fe b7       	in	r31, 0x3e	; 62
    6898:	31 96       	adiw	r30, 0x01	; 1
    689a:	11 96       	adiw	r26, 0x01	; 1
    689c:	8c 92       	st	X, r8
    689e:	11 97       	sbiw	r26, 0x01	; 1
    68a0:	12 96       	adiw	r26, 0x02	; 2
    68a2:	7c 92       	st	X, r7
    68a4:	e2 82       	std	Z+2, r14	; 0x02
    68a6:	f3 82       	std	Z+3, r15	; 0x03
    68a8:	44 83       	std	Z+4, r20	; 0x04
    68aa:	55 83       	std	Z+5, r21	; 0x05
    68ac:	66 83       	std	Z+6, r22	; 0x06
    68ae:	77 83       	std	Z+7, r23	; 0x07
    68b0:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(SN_Buf);
    68b4:	2d b7       	in	r18, 0x3d	; 61
    68b6:	3e b7       	in	r19, 0x3e	; 62
    68b8:	28 5f       	subi	r18, 0xF8	; 248
    68ba:	3f 4f       	sbci	r19, 0xFF	; 255
    68bc:	0f b6       	in	r0, 0x3f	; 63
    68be:	f8 94       	cli
    68c0:	3e bf       	out	0x3e, r19	; 62
    68c2:	0f be       	out	0x3f, r0	; 63
    68c4:	2d bf       	out	0x3d, r18	; 61
    68c6:	88 2d       	mov	r24, r8
    68c8:	97 2d       	mov	r25, r7
    68ca:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(10,3);
    68ce:	8a e0       	ldi	r24, 0x0A	; 10
    68d0:	63 e0       	ldi	r22, 0x03	; 3
    68d2:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    68d6:	8f e0       	ldi	r24, 0x0F	; 15
    68d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    68dc:	80 91 68 03 	lds	r24, 0x0368
    68e0:	90 91 69 03 	lds	r25, 0x0369
    68e4:	84 33       	cpi	r24, 0x34	; 52
    68e6:	91 05       	cpc	r25, r1
    68e8:	d1 f1       	breq	.+116    	; 0x695e <Calibrate_Data_Page+0x1bcc>
    68ea:	85 33       	cpi	r24, 0x35	; 53
    68ec:	91 05       	cpc	r25, r1
    68ee:	8c f4       	brge	.+34     	; 0x6912 <Calibrate_Data_Page+0x1b80>
    68f0:	81 33       	cpi	r24, 0x31	; 49
    68f2:	91 05       	cpc	r25, r1
    68f4:	11 f1       	breq	.+68     	; 0x693a <Calibrate_Data_Page+0x1ba8>
    68f6:	82 33       	cpi	r24, 0x32	; 50
    68f8:	91 05       	cpc	r25, r1
    68fa:	24 f4       	brge	.+8      	; 0x6904 <Calibrate_Data_Page+0x1b72>
    68fc:	c0 97       	sbiw	r24, 0x30	; 48
    68fe:	09 f0       	breq	.+2      	; 0x6902 <Calibrate_Data_Page+0x1b70>
    6900:	86 c6       	rjmp	.+3340   	; 0x760e <Calibrate_Data_Page+0x287c>
    6902:	4e c0       	rjmp	.+156    	; 0x69a0 <Calibrate_Data_Page+0x1c0e>
    6904:	82 33       	cpi	r24, 0x32	; 50
    6906:	91 05       	cpc	r25, r1
    6908:	f1 f0       	breq	.+60     	; 0x6946 <Calibrate_Data_Page+0x1bb4>
    690a:	c3 97       	sbiw	r24, 0x33	; 51
    690c:	09 f0       	breq	.+2      	; 0x6910 <Calibrate_Data_Page+0x1b7e>
    690e:	7f c6       	rjmp	.+3326   	; 0x760e <Calibrate_Data_Page+0x287c>
    6910:	20 c0       	rjmp	.+64     	; 0x6952 <Calibrate_Data_Page+0x1bc0>
    6912:	87 33       	cpi	r24, 0x37	; 55
    6914:	91 05       	cpc	r25, r1
    6916:	99 f1       	breq	.+102    	; 0x697e <Calibrate_Data_Page+0x1bec>
    6918:	88 33       	cpi	r24, 0x38	; 56
    691a:	91 05       	cpc	r25, r1
    691c:	3c f4       	brge	.+14     	; 0x692c <Calibrate_Data_Page+0x1b9a>
    691e:	85 33       	cpi	r24, 0x35	; 53
    6920:	91 05       	cpc	r25, r1
    6922:	11 f1       	breq	.+68     	; 0x6968 <Calibrate_Data_Page+0x1bd6>
    6924:	c6 97       	sbiw	r24, 0x36	; 54
    6926:	09 f0       	breq	.+2      	; 0x692a <Calibrate_Data_Page+0x1b98>
    6928:	72 c6       	rjmp	.+3300   	; 0x760e <Calibrate_Data_Page+0x287c>
    692a:	23 c0       	rjmp	.+70     	; 0x6972 <Calibrate_Data_Page+0x1be0>
    692c:	88 33       	cpi	r24, 0x38	; 56
    692e:	91 05       	cpc	r25, r1
    6930:	59 f1       	breq	.+86     	; 0x6988 <Calibrate_Data_Page+0x1bf6>
    6932:	c9 97       	sbiw	r24, 0x39	; 57
    6934:	09 f0       	breq	.+2      	; 0x6938 <Calibrate_Data_Page+0x1ba6>
    6936:	6b c6       	rjmp	.+3286   	; 0x760e <Calibrate_Data_Page+0x287c>
    6938:	2d c0       	rjmp	.+90     	; 0x6994 <Calibrate_Data_Page+0x1c02>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    693a:	8c e0       	ldi	r24, 0x0C	; 12
    693c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[2] = '1';
    6940:	81 e3       	ldi	r24, 0x31	; 49
    6942:	8f 8b       	std	Y+23, r24	; 0x17
    6944:	64 c6       	rjmp	.+3272   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    6946:	8c e0       	ldi	r24, 0x0C	; 12
    6948:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[2] = '2';
    694c:	82 e3       	ldi	r24, 0x32	; 50
    694e:	8f 8b       	std	Y+23, r24	; 0x17
    6950:	5e c6       	rjmp	.+3260   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    6952:	8c e0       	ldi	r24, 0x0C	; 12
    6954:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[2] = '3';
    6958:	83 e3       	ldi	r24, 0x33	; 51
    695a:	8f 8b       	std	Y+23, r24	; 0x17
    695c:	58 c6       	rjmp	.+3248   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    695e:	8c e0       	ldi	r24, 0x0C	; 12
    6960:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[2] = '4';
    6964:	3f 8a       	std	Y+23, r3	; 0x17
    6966:	53 c6       	rjmp	.+3238   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    6968:	8c e0       	ldi	r24, 0x0C	; 12
    696a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     SN_Buf[2] = '5';
    696e:	6f 8a       	std	Y+23, r6	; 0x17
    6970:	4e c6       	rjmp	.+3228   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    6972:	8c e0       	ldi	r24, 0x0C	; 12
    6974:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[2] = '6';
    6978:	86 e3       	ldi	r24, 0x36	; 54
    697a:	8f 8b       	std	Y+23, r24	; 0x17
    697c:	48 c6       	rjmp	.+3216   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    697e:	8c e0       	ldi	r24, 0x0C	; 12
    6980:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[2] = '7';
    6984:	2f 8a       	std	Y+23, r2	; 0x17
    6986:	43 c6       	rjmp	.+3206   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    6988:	8c e0       	ldi	r24, 0x0C	; 12
    698a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[2] = '8';
    698e:	38 e3       	ldi	r19, 0x38	; 56
    6990:	3f 8b       	std	Y+23, r19	; 0x17
    6992:	3d c6       	rjmp	.+3194   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    6994:	8c e0       	ldi	r24, 0x0C	; 12
    6996:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[2] = '9';
    699a:	89 e3       	ldi	r24, 0x39	; 57
    699c:	8f 8b       	std	Y+23, r24	; 0x17
    699e:	37 c6       	rjmp	.+3182   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    69a0:	8c e0       	ldi	r24, 0x0C	; 12
    69a2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[2] = '0';
    69a6:	80 e3       	ldi	r24, 0x30	; 48
    69a8:	8f 8b       	std	Y+23, r24	; 0x17
    69aa:	31 c6       	rjmp	.+3170   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
										  }	
								         break;
								case 4:  lcd_gotoxy(11,3);
    69ac:	8b e0       	ldi	r24, 0x0B	; 11
    69ae:	63 e0       	ldi	r22, 0x03	; 3
    69b0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    69b4:	8f e0       	ldi	r24, 0x0F	; 15
    69b6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
    69ba:	29 c6       	rjmp	.+3154   	; 0x760e <Calibrate_Data_Page+0x287c>
								         break;
								case 5:  SN = atof(SN_Buf);	 
    69bc:	88 2d       	mov	r24, r8
    69be:	97 2d       	mov	r25, r7
    69c0:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    69c4:	60 93 ee 02 	sts	0x02EE, r22
    69c8:	70 93 ef 02 	sts	0x02EF, r23
    69cc:	80 93 f0 02 	sts	0x02F0, r24
    69d0:	90 93 f1 02 	sts	0x02F1, r25
										 lcd_gotoxy(8,3);
    69d4:	88 e0       	ldi	r24, 0x08	; 8
    69d6:	63 e0       	ldi	r22, 0x03	; 3
    69d8:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(SN_Buf,"%07.3f", SN);
    69dc:	40 91 ee 02 	lds	r20, 0x02EE
    69e0:	50 91 ef 02 	lds	r21, 0x02EF
    69e4:	60 91 f0 02 	lds	r22, 0x02F0
    69e8:	70 91 f1 02 	lds	r23, 0x02F1
    69ec:	ad b7       	in	r26, 0x3d	; 61
    69ee:	be b7       	in	r27, 0x3e	; 62
    69f0:	18 97       	sbiw	r26, 0x08	; 8
    69f2:	0f b6       	in	r0, 0x3f	; 63
    69f4:	f8 94       	cli
    69f6:	be bf       	out	0x3e, r27	; 62
    69f8:	0f be       	out	0x3f, r0	; 63
    69fa:	ad bf       	out	0x3d, r26	; 61
    69fc:	ed b7       	in	r30, 0x3d	; 61
    69fe:	fe b7       	in	r31, 0x3e	; 62
    6a00:	31 96       	adiw	r30, 0x01	; 1
    6a02:	11 96       	adiw	r26, 0x01	; 1
    6a04:	8c 92       	st	X, r8
    6a06:	11 97       	sbiw	r26, 0x01	; 1
    6a08:	12 96       	adiw	r26, 0x02	; 2
    6a0a:	7c 92       	st	X, r7
    6a0c:	e2 82       	std	Z+2, r14	; 0x02
    6a0e:	f3 82       	std	Z+3, r15	; 0x03
    6a10:	44 83       	std	Z+4, r20	; 0x04
    6a12:	55 83       	std	Z+5, r21	; 0x05
    6a14:	66 83       	std	Z+6, r22	; 0x06
    6a16:	77 83       	std	Z+7, r23	; 0x07
    6a18:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(SN_Buf);
    6a1c:	2d b7       	in	r18, 0x3d	; 61
    6a1e:	3e b7       	in	r19, 0x3e	; 62
    6a20:	28 5f       	subi	r18, 0xF8	; 248
    6a22:	3f 4f       	sbci	r19, 0xFF	; 255
    6a24:	0f b6       	in	r0, 0x3f	; 63
    6a26:	f8 94       	cli
    6a28:	3e bf       	out	0x3e, r19	; 62
    6a2a:	0f be       	out	0x3f, r0	; 63
    6a2c:	2d bf       	out	0x3d, r18	; 61
    6a2e:	88 2d       	mov	r24, r8
    6a30:	97 2d       	mov	r25, r7
    6a32:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(12,3);
    6a36:	8c e0       	ldi	r24, 0x0C	; 12
    6a38:	63 e0       	ldi	r22, 0x03	; 3
    6a3a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    6a3e:	8f e0       	ldi	r24, 0x0F	; 15
    6a40:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    6a44:	80 91 68 03 	lds	r24, 0x0368
    6a48:	90 91 69 03 	lds	r25, 0x0369
    6a4c:	84 33       	cpi	r24, 0x34	; 52
    6a4e:	91 05       	cpc	r25, r1
    6a50:	d1 f1       	breq	.+116    	; 0x6ac6 <Calibrate_Data_Page+0x1d34>
    6a52:	85 33       	cpi	r24, 0x35	; 53
    6a54:	91 05       	cpc	r25, r1
    6a56:	8c f4       	brge	.+34     	; 0x6a7a <Calibrate_Data_Page+0x1ce8>
    6a58:	81 33       	cpi	r24, 0x31	; 49
    6a5a:	91 05       	cpc	r25, r1
    6a5c:	11 f1       	breq	.+68     	; 0x6aa2 <Calibrate_Data_Page+0x1d10>
    6a5e:	82 33       	cpi	r24, 0x32	; 50
    6a60:	91 05       	cpc	r25, r1
    6a62:	24 f4       	brge	.+8      	; 0x6a6c <Calibrate_Data_Page+0x1cda>
    6a64:	c0 97       	sbiw	r24, 0x30	; 48
    6a66:	09 f0       	breq	.+2      	; 0x6a6a <Calibrate_Data_Page+0x1cd8>
    6a68:	d2 c5       	rjmp	.+2980   	; 0x760e <Calibrate_Data_Page+0x287c>
    6a6a:	4e c0       	rjmp	.+156    	; 0x6b08 <Calibrate_Data_Page+0x1d76>
    6a6c:	82 33       	cpi	r24, 0x32	; 50
    6a6e:	91 05       	cpc	r25, r1
    6a70:	f1 f0       	breq	.+60     	; 0x6aae <Calibrate_Data_Page+0x1d1c>
    6a72:	c3 97       	sbiw	r24, 0x33	; 51
    6a74:	09 f0       	breq	.+2      	; 0x6a78 <Calibrate_Data_Page+0x1ce6>
    6a76:	cb c5       	rjmp	.+2966   	; 0x760e <Calibrate_Data_Page+0x287c>
    6a78:	20 c0       	rjmp	.+64     	; 0x6aba <Calibrate_Data_Page+0x1d28>
    6a7a:	87 33       	cpi	r24, 0x37	; 55
    6a7c:	91 05       	cpc	r25, r1
    6a7e:	99 f1       	breq	.+102    	; 0x6ae6 <Calibrate_Data_Page+0x1d54>
    6a80:	88 33       	cpi	r24, 0x38	; 56
    6a82:	91 05       	cpc	r25, r1
    6a84:	3c f4       	brge	.+14     	; 0x6a94 <Calibrate_Data_Page+0x1d02>
    6a86:	85 33       	cpi	r24, 0x35	; 53
    6a88:	91 05       	cpc	r25, r1
    6a8a:	11 f1       	breq	.+68     	; 0x6ad0 <Calibrate_Data_Page+0x1d3e>
    6a8c:	c6 97       	sbiw	r24, 0x36	; 54
    6a8e:	09 f0       	breq	.+2      	; 0x6a92 <Calibrate_Data_Page+0x1d00>
    6a90:	be c5       	rjmp	.+2940   	; 0x760e <Calibrate_Data_Page+0x287c>
    6a92:	23 c0       	rjmp	.+70     	; 0x6ada <Calibrate_Data_Page+0x1d48>
    6a94:	88 33       	cpi	r24, 0x38	; 56
    6a96:	91 05       	cpc	r25, r1
    6a98:	59 f1       	breq	.+86     	; 0x6af0 <Calibrate_Data_Page+0x1d5e>
    6a9a:	c9 97       	sbiw	r24, 0x39	; 57
    6a9c:	09 f0       	breq	.+2      	; 0x6aa0 <Calibrate_Data_Page+0x1d0e>
    6a9e:	b7 c5       	rjmp	.+2926   	; 0x760e <Calibrate_Data_Page+0x287c>
    6aa0:	2d c0       	rjmp	.+90     	; 0x6afc <Calibrate_Data_Page+0x1d6a>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    6aa2:	8c e0       	ldi	r24, 0x0C	; 12
    6aa4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[4] = '1';
    6aa8:	81 e3       	ldi	r24, 0x31	; 49
    6aaa:	89 8f       	std	Y+25, r24	; 0x19
    6aac:	b0 c5       	rjmp	.+2912   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    6aae:	8c e0       	ldi	r24, 0x0C	; 12
    6ab0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[4] = '2';
    6ab4:	82 e3       	ldi	r24, 0x32	; 50
    6ab6:	89 8f       	std	Y+25, r24	; 0x19
    6ab8:	aa c5       	rjmp	.+2900   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    6aba:	8c e0       	ldi	r24, 0x0C	; 12
    6abc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[4] = '3';
    6ac0:	83 e3       	ldi	r24, 0x33	; 51
    6ac2:	89 8f       	std	Y+25, r24	; 0x19
    6ac4:	a4 c5       	rjmp	.+2888   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    6ac6:	8c e0       	ldi	r24, 0x0C	; 12
    6ac8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[4] = '4';
    6acc:	39 8e       	std	Y+25, r3	; 0x19
    6ace:	9f c5       	rjmp	.+2878   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    6ad0:	8c e0       	ldi	r24, 0x0C	; 12
    6ad2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     SN_Buf[4] = '5';
    6ad6:	69 8e       	std	Y+25, r6	; 0x19
    6ad8:	9a c5       	rjmp	.+2868   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    6ada:	8c e0       	ldi	r24, 0x0C	; 12
    6adc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[4] = '6';
    6ae0:	86 e3       	ldi	r24, 0x36	; 54
    6ae2:	89 8f       	std	Y+25, r24	; 0x19
    6ae4:	94 c5       	rjmp	.+2856   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    6ae6:	8c e0       	ldi	r24, 0x0C	; 12
    6ae8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[4] = '7';
    6aec:	29 8e       	std	Y+25, r2	; 0x19
    6aee:	8f c5       	rjmp	.+2846   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    6af0:	8c e0       	ldi	r24, 0x0C	; 12
    6af2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[4] = '8';
    6af6:	38 e3       	ldi	r19, 0x38	; 56
    6af8:	39 8f       	std	Y+25, r19	; 0x19
    6afa:	89 c5       	rjmp	.+2834   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    6afc:	8c e0       	ldi	r24, 0x0C	; 12
    6afe:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[4] = '9';
    6b02:	89 e3       	ldi	r24, 0x39	; 57
    6b04:	89 8f       	std	Y+25, r24	; 0x19
    6b06:	83 c5       	rjmp	.+2822   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    6b08:	8c e0       	ldi	r24, 0x0C	; 12
    6b0a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[4] = '0';
    6b0e:	80 e3       	ldi	r24, 0x30	; 48
    6b10:	89 8f       	std	Y+25, r24	; 0x19
    6b12:	7d c5       	rjmp	.+2810   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
										  }	
								         break;
								case 6:  SN = atof(SN_Buf);	 
    6b14:	88 2d       	mov	r24, r8
    6b16:	97 2d       	mov	r25, r7
    6b18:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    6b1c:	60 93 ee 02 	sts	0x02EE, r22
    6b20:	70 93 ef 02 	sts	0x02EF, r23
    6b24:	80 93 f0 02 	sts	0x02F0, r24
    6b28:	90 93 f1 02 	sts	0x02F1, r25
										 lcd_gotoxy(8,3);
    6b2c:	88 e0       	ldi	r24, 0x08	; 8
    6b2e:	63 e0       	ldi	r22, 0x03	; 3
    6b30:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(SN_Buf,"%07.3f", SN);
    6b34:	40 91 ee 02 	lds	r20, 0x02EE
    6b38:	50 91 ef 02 	lds	r21, 0x02EF
    6b3c:	60 91 f0 02 	lds	r22, 0x02F0
    6b40:	70 91 f1 02 	lds	r23, 0x02F1
    6b44:	ad b7       	in	r26, 0x3d	; 61
    6b46:	be b7       	in	r27, 0x3e	; 62
    6b48:	18 97       	sbiw	r26, 0x08	; 8
    6b4a:	0f b6       	in	r0, 0x3f	; 63
    6b4c:	f8 94       	cli
    6b4e:	be bf       	out	0x3e, r27	; 62
    6b50:	0f be       	out	0x3f, r0	; 63
    6b52:	ad bf       	out	0x3d, r26	; 61
    6b54:	ed b7       	in	r30, 0x3d	; 61
    6b56:	fe b7       	in	r31, 0x3e	; 62
    6b58:	31 96       	adiw	r30, 0x01	; 1
    6b5a:	11 96       	adiw	r26, 0x01	; 1
    6b5c:	8c 92       	st	X, r8
    6b5e:	11 97       	sbiw	r26, 0x01	; 1
    6b60:	12 96       	adiw	r26, 0x02	; 2
    6b62:	7c 92       	st	X, r7
    6b64:	e2 82       	std	Z+2, r14	; 0x02
    6b66:	f3 82       	std	Z+3, r15	; 0x03
    6b68:	44 83       	std	Z+4, r20	; 0x04
    6b6a:	55 83       	std	Z+5, r21	; 0x05
    6b6c:	66 83       	std	Z+6, r22	; 0x06
    6b6e:	77 83       	std	Z+7, r23	; 0x07
    6b70:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(SN_Buf);
    6b74:	2d b7       	in	r18, 0x3d	; 61
    6b76:	3e b7       	in	r19, 0x3e	; 62
    6b78:	28 5f       	subi	r18, 0xF8	; 248
    6b7a:	3f 4f       	sbci	r19, 0xFF	; 255
    6b7c:	0f b6       	in	r0, 0x3f	; 63
    6b7e:	f8 94       	cli
    6b80:	3e bf       	out	0x3e, r19	; 62
    6b82:	0f be       	out	0x3f, r0	; 63
    6b84:	2d bf       	out	0x3d, r18	; 61
    6b86:	88 2d       	mov	r24, r8
    6b88:	97 2d       	mov	r25, r7
    6b8a:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(13,3);
    6b8e:	8d e0       	ldi	r24, 0x0D	; 13
    6b90:	63 e0       	ldi	r22, 0x03	; 3
    6b92:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    6b96:	8f e0       	ldi	r24, 0x0F	; 15
    6b98:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    6b9c:	80 91 68 03 	lds	r24, 0x0368
    6ba0:	90 91 69 03 	lds	r25, 0x0369
    6ba4:	84 33       	cpi	r24, 0x34	; 52
    6ba6:	91 05       	cpc	r25, r1
    6ba8:	d1 f1       	breq	.+116    	; 0x6c1e <Calibrate_Data_Page+0x1e8c>
    6baa:	85 33       	cpi	r24, 0x35	; 53
    6bac:	91 05       	cpc	r25, r1
    6bae:	8c f4       	brge	.+34     	; 0x6bd2 <Calibrate_Data_Page+0x1e40>
    6bb0:	81 33       	cpi	r24, 0x31	; 49
    6bb2:	91 05       	cpc	r25, r1
    6bb4:	11 f1       	breq	.+68     	; 0x6bfa <Calibrate_Data_Page+0x1e68>
    6bb6:	82 33       	cpi	r24, 0x32	; 50
    6bb8:	91 05       	cpc	r25, r1
    6bba:	24 f4       	brge	.+8      	; 0x6bc4 <Calibrate_Data_Page+0x1e32>
    6bbc:	c0 97       	sbiw	r24, 0x30	; 48
    6bbe:	09 f0       	breq	.+2      	; 0x6bc2 <Calibrate_Data_Page+0x1e30>
    6bc0:	26 c5       	rjmp	.+2636   	; 0x760e <Calibrate_Data_Page+0x287c>
    6bc2:	4e c0       	rjmp	.+156    	; 0x6c60 <Calibrate_Data_Page+0x1ece>
    6bc4:	82 33       	cpi	r24, 0x32	; 50
    6bc6:	91 05       	cpc	r25, r1
    6bc8:	f1 f0       	breq	.+60     	; 0x6c06 <Calibrate_Data_Page+0x1e74>
    6bca:	c3 97       	sbiw	r24, 0x33	; 51
    6bcc:	09 f0       	breq	.+2      	; 0x6bd0 <Calibrate_Data_Page+0x1e3e>
    6bce:	1f c5       	rjmp	.+2622   	; 0x760e <Calibrate_Data_Page+0x287c>
    6bd0:	20 c0       	rjmp	.+64     	; 0x6c12 <Calibrate_Data_Page+0x1e80>
    6bd2:	87 33       	cpi	r24, 0x37	; 55
    6bd4:	91 05       	cpc	r25, r1
    6bd6:	99 f1       	breq	.+102    	; 0x6c3e <Calibrate_Data_Page+0x1eac>
    6bd8:	88 33       	cpi	r24, 0x38	; 56
    6bda:	91 05       	cpc	r25, r1
    6bdc:	3c f4       	brge	.+14     	; 0x6bec <Calibrate_Data_Page+0x1e5a>
    6bde:	85 33       	cpi	r24, 0x35	; 53
    6be0:	91 05       	cpc	r25, r1
    6be2:	11 f1       	breq	.+68     	; 0x6c28 <Calibrate_Data_Page+0x1e96>
    6be4:	c6 97       	sbiw	r24, 0x36	; 54
    6be6:	09 f0       	breq	.+2      	; 0x6bea <Calibrate_Data_Page+0x1e58>
    6be8:	12 c5       	rjmp	.+2596   	; 0x760e <Calibrate_Data_Page+0x287c>
    6bea:	23 c0       	rjmp	.+70     	; 0x6c32 <Calibrate_Data_Page+0x1ea0>
    6bec:	88 33       	cpi	r24, 0x38	; 56
    6bee:	91 05       	cpc	r25, r1
    6bf0:	59 f1       	breq	.+86     	; 0x6c48 <Calibrate_Data_Page+0x1eb6>
    6bf2:	c9 97       	sbiw	r24, 0x39	; 57
    6bf4:	09 f0       	breq	.+2      	; 0x6bf8 <Calibrate_Data_Page+0x1e66>
    6bf6:	0b c5       	rjmp	.+2582   	; 0x760e <Calibrate_Data_Page+0x287c>
    6bf8:	2d c0       	rjmp	.+90     	; 0x6c54 <Calibrate_Data_Page+0x1ec2>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    6bfa:	8c e0       	ldi	r24, 0x0C	; 12
    6bfc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[5] = '1';
    6c00:	81 e3       	ldi	r24, 0x31	; 49
    6c02:	8a 8f       	std	Y+26, r24	; 0x1a
    6c04:	04 c5       	rjmp	.+2568   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    6c06:	8c e0       	ldi	r24, 0x0C	; 12
    6c08:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[5] = '2';
    6c0c:	82 e3       	ldi	r24, 0x32	; 50
    6c0e:	8a 8f       	std	Y+26, r24	; 0x1a
    6c10:	fe c4       	rjmp	.+2556   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    6c12:	8c e0       	ldi	r24, 0x0C	; 12
    6c14:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[5] = '3';
    6c18:	83 e3       	ldi	r24, 0x33	; 51
    6c1a:	8a 8f       	std	Y+26, r24	; 0x1a
    6c1c:	f8 c4       	rjmp	.+2544   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    6c1e:	8c e0       	ldi	r24, 0x0C	; 12
    6c20:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[5] = '4';
    6c24:	3a 8e       	std	Y+26, r3	; 0x1a
    6c26:	f3 c4       	rjmp	.+2534   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    6c28:	8c e0       	ldi	r24, 0x0C	; 12
    6c2a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     SN_Buf[5] = '5';
    6c2e:	6a 8e       	std	Y+26, r6	; 0x1a
    6c30:	ee c4       	rjmp	.+2524   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    6c32:	8c e0       	ldi	r24, 0x0C	; 12
    6c34:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[5] = '6';
    6c38:	86 e3       	ldi	r24, 0x36	; 54
    6c3a:	8a 8f       	std	Y+26, r24	; 0x1a
    6c3c:	e8 c4       	rjmp	.+2512   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    6c3e:	8c e0       	ldi	r24, 0x0C	; 12
    6c40:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[5] = '7';
    6c44:	2a 8e       	std	Y+26, r2	; 0x1a
    6c46:	e3 c4       	rjmp	.+2502   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    6c48:	8c e0       	ldi	r24, 0x0C	; 12
    6c4a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[5] = '8';
    6c4e:	38 e3       	ldi	r19, 0x38	; 56
    6c50:	3a 8f       	std	Y+26, r19	; 0x1a
    6c52:	dd c4       	rjmp	.+2490   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    6c54:	8c e0       	ldi	r24, 0x0C	; 12
    6c56:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[5] = '9';
    6c5a:	89 e3       	ldi	r24, 0x39	; 57
    6c5c:	8a 8f       	std	Y+26, r24	; 0x1a
    6c5e:	d7 c4       	rjmp	.+2478   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    6c60:	8c e0       	ldi	r24, 0x0C	; 12
    6c62:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[5] = '0';
    6c66:	80 e3       	ldi	r24, 0x30	; 48
    6c68:	8a 8f       	std	Y+26, r24	; 0x1a
    6c6a:	d1 c4       	rjmp	.+2466   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
										  }	
								         break;
								case 7:  SN = atof(SN_Buf);	 
    6c6c:	88 2d       	mov	r24, r8
    6c6e:	97 2d       	mov	r25, r7
    6c70:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    6c74:	60 93 ee 02 	sts	0x02EE, r22
    6c78:	70 93 ef 02 	sts	0x02EF, r23
    6c7c:	80 93 f0 02 	sts	0x02F0, r24
    6c80:	90 93 f1 02 	sts	0x02F1, r25
										 lcd_gotoxy(8,3);
    6c84:	88 e0       	ldi	r24, 0x08	; 8
    6c86:	63 e0       	ldi	r22, 0x03	; 3
    6c88:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(SN_Buf,"%07.3f", SN);
    6c8c:	40 91 ee 02 	lds	r20, 0x02EE
    6c90:	50 91 ef 02 	lds	r21, 0x02EF
    6c94:	60 91 f0 02 	lds	r22, 0x02F0
    6c98:	70 91 f1 02 	lds	r23, 0x02F1
    6c9c:	ad b7       	in	r26, 0x3d	; 61
    6c9e:	be b7       	in	r27, 0x3e	; 62
    6ca0:	18 97       	sbiw	r26, 0x08	; 8
    6ca2:	0f b6       	in	r0, 0x3f	; 63
    6ca4:	f8 94       	cli
    6ca6:	be bf       	out	0x3e, r27	; 62
    6ca8:	0f be       	out	0x3f, r0	; 63
    6caa:	ad bf       	out	0x3d, r26	; 61
    6cac:	ed b7       	in	r30, 0x3d	; 61
    6cae:	fe b7       	in	r31, 0x3e	; 62
    6cb0:	31 96       	adiw	r30, 0x01	; 1
    6cb2:	11 96       	adiw	r26, 0x01	; 1
    6cb4:	8c 92       	st	X, r8
    6cb6:	11 97       	sbiw	r26, 0x01	; 1
    6cb8:	12 96       	adiw	r26, 0x02	; 2
    6cba:	7c 92       	st	X, r7
    6cbc:	e2 82       	std	Z+2, r14	; 0x02
    6cbe:	f3 82       	std	Z+3, r15	; 0x03
    6cc0:	44 83       	std	Z+4, r20	; 0x04
    6cc2:	55 83       	std	Z+5, r21	; 0x05
    6cc4:	66 83       	std	Z+6, r22	; 0x06
    6cc6:	77 83       	std	Z+7, r23	; 0x07
    6cc8:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(SN_Buf);
    6ccc:	2d b7       	in	r18, 0x3d	; 61
    6cce:	3e b7       	in	r19, 0x3e	; 62
    6cd0:	28 5f       	subi	r18, 0xF8	; 248
    6cd2:	3f 4f       	sbci	r19, 0xFF	; 255
    6cd4:	0f b6       	in	r0, 0x3f	; 63
    6cd6:	f8 94       	cli
    6cd8:	3e bf       	out	0x3e, r19	; 62
    6cda:	0f be       	out	0x3f, r0	; 63
    6cdc:	2d bf       	out	0x3d, r18	; 61
    6cde:	88 2d       	mov	r24, r8
    6ce0:	97 2d       	mov	r25, r7
    6ce2:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(14,3);
    6ce6:	8e e0       	ldi	r24, 0x0E	; 14
    6ce8:	63 e0       	ldi	r22, 0x03	; 3
    6cea:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    6cee:	8f e0       	ldi	r24, 0x0F	; 15
    6cf0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    6cf4:	80 91 68 03 	lds	r24, 0x0368
    6cf8:	90 91 69 03 	lds	r25, 0x0369
    6cfc:	84 33       	cpi	r24, 0x34	; 52
    6cfe:	91 05       	cpc	r25, r1
    6d00:	d1 f1       	breq	.+116    	; 0x6d76 <Calibrate_Data_Page+0x1fe4>
    6d02:	85 33       	cpi	r24, 0x35	; 53
    6d04:	91 05       	cpc	r25, r1
    6d06:	8c f4       	brge	.+34     	; 0x6d2a <Calibrate_Data_Page+0x1f98>
    6d08:	81 33       	cpi	r24, 0x31	; 49
    6d0a:	91 05       	cpc	r25, r1
    6d0c:	11 f1       	breq	.+68     	; 0x6d52 <Calibrate_Data_Page+0x1fc0>
    6d0e:	82 33       	cpi	r24, 0x32	; 50
    6d10:	91 05       	cpc	r25, r1
    6d12:	24 f4       	brge	.+8      	; 0x6d1c <Calibrate_Data_Page+0x1f8a>
    6d14:	c0 97       	sbiw	r24, 0x30	; 48
    6d16:	09 f0       	breq	.+2      	; 0x6d1a <Calibrate_Data_Page+0x1f88>
    6d18:	7a c4       	rjmp	.+2292   	; 0x760e <Calibrate_Data_Page+0x287c>
    6d1a:	4e c0       	rjmp	.+156    	; 0x6db8 <Calibrate_Data_Page+0x2026>
    6d1c:	82 33       	cpi	r24, 0x32	; 50
    6d1e:	91 05       	cpc	r25, r1
    6d20:	f1 f0       	breq	.+60     	; 0x6d5e <Calibrate_Data_Page+0x1fcc>
    6d22:	c3 97       	sbiw	r24, 0x33	; 51
    6d24:	09 f0       	breq	.+2      	; 0x6d28 <Calibrate_Data_Page+0x1f96>
    6d26:	73 c4       	rjmp	.+2278   	; 0x760e <Calibrate_Data_Page+0x287c>
    6d28:	20 c0       	rjmp	.+64     	; 0x6d6a <Calibrate_Data_Page+0x1fd8>
    6d2a:	87 33       	cpi	r24, 0x37	; 55
    6d2c:	91 05       	cpc	r25, r1
    6d2e:	99 f1       	breq	.+102    	; 0x6d96 <Calibrate_Data_Page+0x2004>
    6d30:	88 33       	cpi	r24, 0x38	; 56
    6d32:	91 05       	cpc	r25, r1
    6d34:	3c f4       	brge	.+14     	; 0x6d44 <Calibrate_Data_Page+0x1fb2>
    6d36:	85 33       	cpi	r24, 0x35	; 53
    6d38:	91 05       	cpc	r25, r1
    6d3a:	11 f1       	breq	.+68     	; 0x6d80 <Calibrate_Data_Page+0x1fee>
    6d3c:	c6 97       	sbiw	r24, 0x36	; 54
    6d3e:	09 f0       	breq	.+2      	; 0x6d42 <Calibrate_Data_Page+0x1fb0>
    6d40:	66 c4       	rjmp	.+2252   	; 0x760e <Calibrate_Data_Page+0x287c>
    6d42:	23 c0       	rjmp	.+70     	; 0x6d8a <Calibrate_Data_Page+0x1ff8>
    6d44:	88 33       	cpi	r24, 0x38	; 56
    6d46:	91 05       	cpc	r25, r1
    6d48:	59 f1       	breq	.+86     	; 0x6da0 <Calibrate_Data_Page+0x200e>
    6d4a:	c9 97       	sbiw	r24, 0x39	; 57
    6d4c:	09 f0       	breq	.+2      	; 0x6d50 <Calibrate_Data_Page+0x1fbe>
    6d4e:	5f c4       	rjmp	.+2238   	; 0x760e <Calibrate_Data_Page+0x287c>
    6d50:	2d c0       	rjmp	.+90     	; 0x6dac <Calibrate_Data_Page+0x201a>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    6d52:	8c e0       	ldi	r24, 0x0C	; 12
    6d54:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[6] = '1';
    6d58:	81 e3       	ldi	r24, 0x31	; 49
    6d5a:	8b 8f       	std	Y+27, r24	; 0x1b
    6d5c:	58 c4       	rjmp	.+2224   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    6d5e:	8c e0       	ldi	r24, 0x0C	; 12
    6d60:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[6] = '2';
    6d64:	82 e3       	ldi	r24, 0x32	; 50
    6d66:	8b 8f       	std	Y+27, r24	; 0x1b
    6d68:	52 c4       	rjmp	.+2212   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    6d6a:	8c e0       	ldi	r24, 0x0C	; 12
    6d6c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[6] = '3';
    6d70:	83 e3       	ldi	r24, 0x33	; 51
    6d72:	8b 8f       	std	Y+27, r24	; 0x1b
    6d74:	4c c4       	rjmp	.+2200   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    6d76:	8c e0       	ldi	r24, 0x0C	; 12
    6d78:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[6] = '4';
    6d7c:	3b 8e       	std	Y+27, r3	; 0x1b
    6d7e:	47 c4       	rjmp	.+2190   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    6d80:	8c e0       	ldi	r24, 0x0C	; 12
    6d82:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     SN_Buf[6] = '5';
    6d86:	6b 8e       	std	Y+27, r6	; 0x1b
    6d88:	42 c4       	rjmp	.+2180   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    6d8a:	8c e0       	ldi	r24, 0x0C	; 12
    6d8c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 SN_Buf[6] = '6';
    6d90:	86 e3       	ldi	r24, 0x36	; 54
    6d92:	8b 8f       	std	Y+27, r24	; 0x1b
    6d94:	3c c4       	rjmp	.+2168   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    6d96:	8c e0       	ldi	r24, 0x0C	; 12
    6d98:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[6] = '7';
    6d9c:	2b 8e       	std	Y+27, r2	; 0x1b
    6d9e:	37 c4       	rjmp	.+2158   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    6da0:	8c e0       	ldi	r24, 0x0C	; 12
    6da2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[6] = '8';
    6da6:	38 e3       	ldi	r19, 0x38	; 56
    6da8:	3b 8f       	std	Y+27, r19	; 0x1b
    6daa:	31 c4       	rjmp	.+2146   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    6dac:	8c e0       	ldi	r24, 0x0C	; 12
    6dae:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[6] = '9';
    6db2:	89 e3       	ldi	r24, 0x39	; 57
    6db4:	8b 8f       	std	Y+27, r24	; 0x1b
    6db6:	2b c4       	rjmp	.+2134   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    6db8:	8c e0       	ldi	r24, 0x0C	; 12
    6dba:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         SN_Buf[6] = '0';
    6dbe:	80 e3       	ldi	r24, 0x30	; 48
    6dc0:	8b 8f       	std	Y+27, r24	; 0x1b
    6dc2:	25 c4       	rjmp	.+2122   	; 0x760e <Calibrate_Data_Page+0x287c>
										  }	
								         break;
					        } 
						    
					}
					if(CalibrateDataPageCursor == 4)
    6dc4:	9a a5       	ldd	r25, Y+42	; 0x2a
    6dc6:	94 30       	cpi	r25, 0x04	; 4
    6dc8:	09 f0       	breq	.+2      	; 0x6dcc <Calibrate_Data_Page+0x203a>
    6dca:	21 c4       	rjmp	.+2114   	; 0x760e <Calibrate_Data_Page+0x287c>
					{
						   lcd_gotoxy(8,1);
    6dcc:	88 e0       	ldi	r24, 0x08	; 8
    6dce:	61 e0       	ldi	r22, 0x01	; 1
    6dd0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    6dd4:	8f e0       	ldi	r24, 0x0F	; 15
    6dd6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
						    
						    switch (CalibrateDataLineCursor)  // Main Menu Switch statement
    6dda:	a4 e0       	ldi	r26, 0x04	; 4
    6ddc:	9a 16       	cp	r9, r26
    6dde:	09 f4       	brne	.+2      	; 0x6de2 <Calibrate_Data_Page+0x2050>
    6de0:	15 c2       	rjmp	.+1066   	; 0x720c <Calibrate_Data_Page+0x247a>
    6de2:	a9 15       	cp	r26, r9
    6de4:	60 f0       	brcs	.+24     	; 0x6dfe <Calibrate_Data_Page+0x206c>
    6de6:	b2 e0       	ldi	r27, 0x02	; 2
    6de8:	9b 16       	cp	r9, r27
    6dea:	09 f4       	brne	.+2      	; 0x6dee <Calibrate_Data_Page+0x205c>
    6dec:	bd c0       	rjmp	.+378    	; 0x6f68 <Calibrate_Data_Page+0x21d6>
    6dee:	b9 15       	cp	r27, r9
    6df0:	08 f4       	brcc	.+2      	; 0x6df4 <Calibrate_Data_Page+0x2062>
    6df2:	63 c1       	rjmp	.+710    	; 0x70ba <Calibrate_Data_Page+0x2328>
    6df4:	21 e0       	ldi	r18, 0x01	; 1
    6df6:	92 16       	cp	r9, r18
    6df8:	09 f0       	breq	.+2      	; 0x6dfc <Calibrate_Data_Page+0x206a>
    6dfa:	09 c4       	rjmp	.+2066   	; 0x760e <Calibrate_Data_Page+0x287c>
    6dfc:	0c c0       	rjmp	.+24     	; 0x6e16 <Calibrate_Data_Page+0x2084>
    6dfe:	36 e0       	ldi	r19, 0x06	; 6
    6e00:	93 16       	cp	r9, r19
    6e02:	09 f4       	brne	.+2      	; 0x6e06 <Calibrate_Data_Page+0x2074>
    6e04:	b4 c2       	rjmp	.+1384   	; 0x736e <Calibrate_Data_Page+0x25dc>
    6e06:	93 16       	cp	r9, r19
    6e08:	08 f4       	brcc	.+2      	; 0x6e0c <Calibrate_Data_Page+0x207a>
    6e0a:	08 c2       	rjmp	.+1040   	; 0x721c <Calibrate_Data_Page+0x248a>
    6e0c:	87 e0       	ldi	r24, 0x07	; 7
    6e0e:	98 16       	cp	r9, r24
    6e10:	09 f0       	breq	.+2      	; 0x6e14 <Calibrate_Data_Page+0x2082>
    6e12:	fd c3       	rjmp	.+2042   	; 0x760e <Calibrate_Data_Page+0x287c>
    6e14:	55 c3       	rjmp	.+1706   	; 0x74c0 <Calibrate_Data_Page+0x272e>
						    {
								case 1:  MA = atof(MA_Buf);	 
    6e16:	c2 01       	movw	r24, r4
    6e18:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    6e1c:	60 93 93 02 	sts	0x0293, r22
    6e20:	70 93 94 02 	sts	0x0294, r23
    6e24:	80 93 95 02 	sts	0x0295, r24
    6e28:	90 93 96 02 	sts	0x0296, r25
										 lcd_gotoxy(8,1);
    6e2c:	88 e0       	ldi	r24, 0x08	; 8
    6e2e:	61 e0       	ldi	r22, 0x01	; 1
    6e30:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(MA_Buf,"%07.3f", MA);
    6e34:	40 91 93 02 	lds	r20, 0x0293
    6e38:	50 91 94 02 	lds	r21, 0x0294
    6e3c:	60 91 95 02 	lds	r22, 0x0295
    6e40:	70 91 96 02 	lds	r23, 0x0296
    6e44:	ad b7       	in	r26, 0x3d	; 61
    6e46:	be b7       	in	r27, 0x3e	; 62
    6e48:	18 97       	sbiw	r26, 0x08	; 8
    6e4a:	0f b6       	in	r0, 0x3f	; 63
    6e4c:	f8 94       	cli
    6e4e:	be bf       	out	0x3e, r27	; 62
    6e50:	0f be       	out	0x3f, r0	; 63
    6e52:	ad bf       	out	0x3d, r26	; 61
    6e54:	ed b7       	in	r30, 0x3d	; 61
    6e56:	fe b7       	in	r31, 0x3e	; 62
    6e58:	31 96       	adiw	r30, 0x01	; 1
    6e5a:	12 96       	adiw	r26, 0x02	; 2
    6e5c:	5c 92       	st	X, r5
    6e5e:	4e 92       	st	-X, r4
    6e60:	11 97       	sbiw	r26, 0x01	; 1
    6e62:	e2 82       	std	Z+2, r14	; 0x02
    6e64:	f3 82       	std	Z+3, r15	; 0x03
    6e66:	44 83       	std	Z+4, r20	; 0x04
    6e68:	55 83       	std	Z+5, r21	; 0x05
    6e6a:	66 83       	std	Z+6, r22	; 0x06
    6e6c:	77 83       	std	Z+7, r23	; 0x07
    6e6e:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(MA_Buf);
    6e72:	2d b7       	in	r18, 0x3d	; 61
    6e74:	3e b7       	in	r19, 0x3e	; 62
    6e76:	28 5f       	subi	r18, 0xF8	; 248
    6e78:	3f 4f       	sbci	r19, 0xFF	; 255
    6e7a:	0f b6       	in	r0, 0x3f	; 63
    6e7c:	f8 94       	cli
    6e7e:	3e bf       	out	0x3e, r19	; 62
    6e80:	0f be       	out	0x3f, r0	; 63
    6e82:	2d bf       	out	0x3d, r18	; 61
    6e84:	c2 01       	movw	r24, r4
    6e86:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(8,1);
    6e8a:	88 e0       	ldi	r24, 0x08	; 8
    6e8c:	61 e0       	ldi	r22, 0x01	; 1
    6e8e:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    6e92:	8f e0       	ldi	r24, 0x0F	; 15
    6e94:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										  switch (key)  // Main Menu Switch statement
    6e98:	80 91 68 03 	lds	r24, 0x0368
    6e9c:	90 91 69 03 	lds	r25, 0x0369
    6ea0:	84 33       	cpi	r24, 0x34	; 52
    6ea2:	91 05       	cpc	r25, r1
    6ea4:	d1 f1       	breq	.+116    	; 0x6f1a <Calibrate_Data_Page+0x2188>
    6ea6:	85 33       	cpi	r24, 0x35	; 53
    6ea8:	91 05       	cpc	r25, r1
    6eaa:	8c f4       	brge	.+34     	; 0x6ece <Calibrate_Data_Page+0x213c>
    6eac:	81 33       	cpi	r24, 0x31	; 49
    6eae:	91 05       	cpc	r25, r1
    6eb0:	11 f1       	breq	.+68     	; 0x6ef6 <Calibrate_Data_Page+0x2164>
    6eb2:	82 33       	cpi	r24, 0x32	; 50
    6eb4:	91 05       	cpc	r25, r1
    6eb6:	24 f4       	brge	.+8      	; 0x6ec0 <Calibrate_Data_Page+0x212e>
    6eb8:	c0 97       	sbiw	r24, 0x30	; 48
    6eba:	09 f0       	breq	.+2      	; 0x6ebe <Calibrate_Data_Page+0x212c>
    6ebc:	a8 c3       	rjmp	.+1872   	; 0x760e <Calibrate_Data_Page+0x287c>
    6ebe:	4e c0       	rjmp	.+156    	; 0x6f5c <Calibrate_Data_Page+0x21ca>
    6ec0:	82 33       	cpi	r24, 0x32	; 50
    6ec2:	91 05       	cpc	r25, r1
    6ec4:	f1 f0       	breq	.+60     	; 0x6f02 <Calibrate_Data_Page+0x2170>
    6ec6:	c3 97       	sbiw	r24, 0x33	; 51
    6ec8:	09 f0       	breq	.+2      	; 0x6ecc <Calibrate_Data_Page+0x213a>
    6eca:	a1 c3       	rjmp	.+1858   	; 0x760e <Calibrate_Data_Page+0x287c>
    6ecc:	20 c0       	rjmp	.+64     	; 0x6f0e <Calibrate_Data_Page+0x217c>
    6ece:	87 33       	cpi	r24, 0x37	; 55
    6ed0:	91 05       	cpc	r25, r1
    6ed2:	99 f1       	breq	.+102    	; 0x6f3a <Calibrate_Data_Page+0x21a8>
    6ed4:	88 33       	cpi	r24, 0x38	; 56
    6ed6:	91 05       	cpc	r25, r1
    6ed8:	3c f4       	brge	.+14     	; 0x6ee8 <Calibrate_Data_Page+0x2156>
    6eda:	85 33       	cpi	r24, 0x35	; 53
    6edc:	91 05       	cpc	r25, r1
    6ede:	11 f1       	breq	.+68     	; 0x6f24 <Calibrate_Data_Page+0x2192>
    6ee0:	c6 97       	sbiw	r24, 0x36	; 54
    6ee2:	09 f0       	breq	.+2      	; 0x6ee6 <Calibrate_Data_Page+0x2154>
    6ee4:	94 c3       	rjmp	.+1832   	; 0x760e <Calibrate_Data_Page+0x287c>
    6ee6:	23 c0       	rjmp	.+70     	; 0x6f2e <Calibrate_Data_Page+0x219c>
    6ee8:	88 33       	cpi	r24, 0x38	; 56
    6eea:	91 05       	cpc	r25, r1
    6eec:	59 f1       	breq	.+86     	; 0x6f44 <Calibrate_Data_Page+0x21b2>
    6eee:	c9 97       	sbiw	r24, 0x39	; 57
    6ef0:	09 f0       	breq	.+2      	; 0x6ef4 <Calibrate_Data_Page+0x2162>
    6ef2:	8d c3       	rjmp	.+1818   	; 0x760e <Calibrate_Data_Page+0x287c>
    6ef4:	2d c0       	rjmp	.+90     	; 0x6f50 <Calibrate_Data_Page+0x21be>
										    {
											 
												case '1':lcd_command(LCD_DISP_ON);
    6ef6:	8c e0       	ldi	r24, 0x0C	; 12
    6ef8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[0] = '1';
    6efc:	81 e3       	ldi	r24, 0x31	; 49
    6efe:	8f 8f       	std	Y+31, r24	; 0x1f
    6f00:	86 c3       	rjmp	.+1804   	; 0x760e <Calibrate_Data_Page+0x287c>
														 
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    6f02:	8c e0       	ldi	r24, 0x0C	; 12
    6f04:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[0] = '2';
    6f08:	82 e3       	ldi	r24, 0x32	; 50
    6f0a:	8f 8f       	std	Y+31, r24	; 0x1f
    6f0c:	80 c3       	rjmp	.+1792   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    6f0e:	8c e0       	ldi	r24, 0x0C	; 12
    6f10:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[0] = '3';
    6f14:	83 e3       	ldi	r24, 0x33	; 51
    6f16:	8f 8f       	std	Y+31, r24	; 0x1f
    6f18:	7a c3       	rjmp	.+1780   	; 0x760e <Calibrate_Data_Page+0x287c>
														 
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    6f1a:	8c e0       	ldi	r24, 0x0C	; 12
    6f1c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[0] = '4';
    6f20:	3f 8e       	std	Y+31, r3	; 0x1f
    6f22:	75 c3       	rjmp	.+1770   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    6f24:	8c e0       	ldi	r24, 0x0C	; 12
    6f26:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     MA_Buf[0] = '5';
    6f2a:	6f 8e       	std	Y+31, r6	; 0x1f
    6f2c:	70 c3       	rjmp	.+1760   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    6f2e:	8c e0       	ldi	r24, 0x0C	; 12
    6f30:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[0] = '6';
    6f34:	86 e3       	ldi	r24, 0x36	; 54
    6f36:	8f 8f       	std	Y+31, r24	; 0x1f
    6f38:	6a c3       	rjmp	.+1748   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    6f3a:	8c e0       	ldi	r24, 0x0C	; 12
    6f3c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[0] = '7';
    6f40:	2f 8e       	std	Y+31, r2	; 0x1f
    6f42:	65 c3       	rjmp	.+1738   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    6f44:	8c e0       	ldi	r24, 0x0C	; 12
    6f46:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[0] = '8';
    6f4a:	38 e3       	ldi	r19, 0x38	; 56
    6f4c:	3f 8f       	std	Y+31, r19	; 0x1f
    6f4e:	5f c3       	rjmp	.+1726   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    6f50:	8c e0       	ldi	r24, 0x0C	; 12
    6f52:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[0] = '9';
    6f56:	89 e3       	ldi	r24, 0x39	; 57
    6f58:	8f 8f       	std	Y+31, r24	; 0x1f
    6f5a:	59 c3       	rjmp	.+1714   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    6f5c:	8c e0       	ldi	r24, 0x0C	; 12
    6f5e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[0] = '0';
    6f62:	80 e3       	ldi	r24, 0x30	; 48
    6f64:	8f 8f       	std	Y+31, r24	; 0x1f
    6f66:	53 c3       	rjmp	.+1702   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
											 }									
								         break;
								case 2:  MA = atof(MA_Buf);	 
    6f68:	c2 01       	movw	r24, r4
    6f6a:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    6f6e:	60 93 93 02 	sts	0x0293, r22
    6f72:	70 93 94 02 	sts	0x0294, r23
    6f76:	80 93 95 02 	sts	0x0295, r24
    6f7a:	90 93 96 02 	sts	0x0296, r25
										 lcd_gotoxy(8,1);
    6f7e:	88 e0       	ldi	r24, 0x08	; 8
    6f80:	61 e0       	ldi	r22, 0x01	; 1
    6f82:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(MA_Buf,"%07.3f", MA);
    6f86:	40 91 93 02 	lds	r20, 0x0293
    6f8a:	50 91 94 02 	lds	r21, 0x0294
    6f8e:	60 91 95 02 	lds	r22, 0x0295
    6f92:	70 91 96 02 	lds	r23, 0x0296
    6f96:	ad b7       	in	r26, 0x3d	; 61
    6f98:	be b7       	in	r27, 0x3e	; 62
    6f9a:	18 97       	sbiw	r26, 0x08	; 8
    6f9c:	0f b6       	in	r0, 0x3f	; 63
    6f9e:	f8 94       	cli
    6fa0:	be bf       	out	0x3e, r27	; 62
    6fa2:	0f be       	out	0x3f, r0	; 63
    6fa4:	ad bf       	out	0x3d, r26	; 61
    6fa6:	ed b7       	in	r30, 0x3d	; 61
    6fa8:	fe b7       	in	r31, 0x3e	; 62
    6faa:	31 96       	adiw	r30, 0x01	; 1
    6fac:	12 96       	adiw	r26, 0x02	; 2
    6fae:	5c 92       	st	X, r5
    6fb0:	4e 92       	st	-X, r4
    6fb2:	11 97       	sbiw	r26, 0x01	; 1
    6fb4:	e2 82       	std	Z+2, r14	; 0x02
    6fb6:	f3 82       	std	Z+3, r15	; 0x03
    6fb8:	44 83       	std	Z+4, r20	; 0x04
    6fba:	55 83       	std	Z+5, r21	; 0x05
    6fbc:	66 83       	std	Z+6, r22	; 0x06
    6fbe:	77 83       	std	Z+7, r23	; 0x07
    6fc0:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(MA_Buf);
    6fc4:	2d b7       	in	r18, 0x3d	; 61
    6fc6:	3e b7       	in	r19, 0x3e	; 62
    6fc8:	28 5f       	subi	r18, 0xF8	; 248
    6fca:	3f 4f       	sbci	r19, 0xFF	; 255
    6fcc:	0f b6       	in	r0, 0x3f	; 63
    6fce:	f8 94       	cli
    6fd0:	3e bf       	out	0x3e, r19	; 62
    6fd2:	0f be       	out	0x3f, r0	; 63
    6fd4:	2d bf       	out	0x3d, r18	; 61
    6fd6:	c2 01       	movw	r24, r4
    6fd8:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(9,1);
    6fdc:	89 e0       	ldi	r24, 0x09	; 9
    6fde:	61 e0       	ldi	r22, 0x01	; 1
    6fe0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    6fe4:	8f e0       	ldi	r24, 0x0F	; 15
    6fe6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    6fea:	80 91 68 03 	lds	r24, 0x0368
    6fee:	90 91 69 03 	lds	r25, 0x0369
    6ff2:	84 33       	cpi	r24, 0x34	; 52
    6ff4:	91 05       	cpc	r25, r1
    6ff6:	d1 f1       	breq	.+116    	; 0x706c <Calibrate_Data_Page+0x22da>
    6ff8:	85 33       	cpi	r24, 0x35	; 53
    6ffa:	91 05       	cpc	r25, r1
    6ffc:	8c f4       	brge	.+34     	; 0x7020 <Calibrate_Data_Page+0x228e>
    6ffe:	81 33       	cpi	r24, 0x31	; 49
    7000:	91 05       	cpc	r25, r1
    7002:	11 f1       	breq	.+68     	; 0x7048 <Calibrate_Data_Page+0x22b6>
    7004:	82 33       	cpi	r24, 0x32	; 50
    7006:	91 05       	cpc	r25, r1
    7008:	24 f4       	brge	.+8      	; 0x7012 <Calibrate_Data_Page+0x2280>
    700a:	c0 97       	sbiw	r24, 0x30	; 48
    700c:	09 f0       	breq	.+2      	; 0x7010 <Calibrate_Data_Page+0x227e>
    700e:	ff c2       	rjmp	.+1534   	; 0x760e <Calibrate_Data_Page+0x287c>
    7010:	4e c0       	rjmp	.+156    	; 0x70ae <Calibrate_Data_Page+0x231c>
    7012:	82 33       	cpi	r24, 0x32	; 50
    7014:	91 05       	cpc	r25, r1
    7016:	f1 f0       	breq	.+60     	; 0x7054 <Calibrate_Data_Page+0x22c2>
    7018:	c3 97       	sbiw	r24, 0x33	; 51
    701a:	09 f0       	breq	.+2      	; 0x701e <Calibrate_Data_Page+0x228c>
    701c:	f8 c2       	rjmp	.+1520   	; 0x760e <Calibrate_Data_Page+0x287c>
    701e:	20 c0       	rjmp	.+64     	; 0x7060 <Calibrate_Data_Page+0x22ce>
    7020:	87 33       	cpi	r24, 0x37	; 55
    7022:	91 05       	cpc	r25, r1
    7024:	99 f1       	breq	.+102    	; 0x708c <Calibrate_Data_Page+0x22fa>
    7026:	88 33       	cpi	r24, 0x38	; 56
    7028:	91 05       	cpc	r25, r1
    702a:	3c f4       	brge	.+14     	; 0x703a <Calibrate_Data_Page+0x22a8>
    702c:	85 33       	cpi	r24, 0x35	; 53
    702e:	91 05       	cpc	r25, r1
    7030:	11 f1       	breq	.+68     	; 0x7076 <Calibrate_Data_Page+0x22e4>
    7032:	c6 97       	sbiw	r24, 0x36	; 54
    7034:	09 f0       	breq	.+2      	; 0x7038 <Calibrate_Data_Page+0x22a6>
    7036:	eb c2       	rjmp	.+1494   	; 0x760e <Calibrate_Data_Page+0x287c>
    7038:	23 c0       	rjmp	.+70     	; 0x7080 <Calibrate_Data_Page+0x22ee>
    703a:	88 33       	cpi	r24, 0x38	; 56
    703c:	91 05       	cpc	r25, r1
    703e:	59 f1       	breq	.+86     	; 0x7096 <Calibrate_Data_Page+0x2304>
    7040:	c9 97       	sbiw	r24, 0x39	; 57
    7042:	09 f0       	breq	.+2      	; 0x7046 <Calibrate_Data_Page+0x22b4>
    7044:	e4 c2       	rjmp	.+1480   	; 0x760e <Calibrate_Data_Page+0x287c>
    7046:	2d c0       	rjmp	.+90     	; 0x70a2 <Calibrate_Data_Page+0x2310>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    7048:	8c e0       	ldi	r24, 0x0C	; 12
    704a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[1] = '1';
    704e:	81 e3       	ldi	r24, 0x31	; 49
    7050:	88 a3       	std	Y+32, r24	; 0x20
    7052:	dd c2       	rjmp	.+1466   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    7054:	8c e0       	ldi	r24, 0x0C	; 12
    7056:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[1] = '2';
    705a:	82 e3       	ldi	r24, 0x32	; 50
    705c:	88 a3       	std	Y+32, r24	; 0x20
    705e:	d7 c2       	rjmp	.+1454   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    7060:	8c e0       	ldi	r24, 0x0C	; 12
    7062:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[1] = '3';
    7066:	83 e3       	ldi	r24, 0x33	; 51
    7068:	88 a3       	std	Y+32, r24	; 0x20
    706a:	d1 c2       	rjmp	.+1442   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    706c:	8c e0       	ldi	r24, 0x0C	; 12
    706e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[1] = '4';
    7072:	38 a2       	std	Y+32, r3	; 0x20
    7074:	cc c2       	rjmp	.+1432   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    7076:	8c e0       	ldi	r24, 0x0C	; 12
    7078:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     MA_Buf[1] = '5';
    707c:	68 a2       	std	Y+32, r6	; 0x20
    707e:	c7 c2       	rjmp	.+1422   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    7080:	8c e0       	ldi	r24, 0x0C	; 12
    7082:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[1] = '6';
    7086:	86 e3       	ldi	r24, 0x36	; 54
    7088:	88 a3       	std	Y+32, r24	; 0x20
    708a:	c1 c2       	rjmp	.+1410   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    708c:	8c e0       	ldi	r24, 0x0C	; 12
    708e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[1] = '7';
    7092:	28 a2       	std	Y+32, r2	; 0x20
    7094:	bc c2       	rjmp	.+1400   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    7096:	8c e0       	ldi	r24, 0x0C	; 12
    7098:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[1] = '8';
    709c:	38 e3       	ldi	r19, 0x38	; 56
    709e:	38 a3       	std	Y+32, r19	; 0x20
    70a0:	b6 c2       	rjmp	.+1388   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    70a2:	8c e0       	ldi	r24, 0x0C	; 12
    70a4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[1] = '9';
    70a8:	89 e3       	ldi	r24, 0x39	; 57
    70aa:	88 a3       	std	Y+32, r24	; 0x20
    70ac:	b0 c2       	rjmp	.+1376   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    70ae:	8c e0       	ldi	r24, 0x0C	; 12
    70b0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[1] = '0';
    70b4:	80 e3       	ldi	r24, 0x30	; 48
    70b6:	88 a3       	std	Y+32, r24	; 0x20
    70b8:	aa c2       	rjmp	.+1364   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
										  }	
								         break;
								case 3:  MA = atof(MA_Buf);	 
    70ba:	c2 01       	movw	r24, r4
    70bc:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    70c0:	60 93 93 02 	sts	0x0293, r22
    70c4:	70 93 94 02 	sts	0x0294, r23
    70c8:	80 93 95 02 	sts	0x0295, r24
    70cc:	90 93 96 02 	sts	0x0296, r25
										 lcd_gotoxy(8,1);
    70d0:	88 e0       	ldi	r24, 0x08	; 8
    70d2:	61 e0       	ldi	r22, 0x01	; 1
    70d4:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(MA_Buf,"%07.3f", MA);
    70d8:	40 91 93 02 	lds	r20, 0x0293
    70dc:	50 91 94 02 	lds	r21, 0x0294
    70e0:	60 91 95 02 	lds	r22, 0x0295
    70e4:	70 91 96 02 	lds	r23, 0x0296
    70e8:	ad b7       	in	r26, 0x3d	; 61
    70ea:	be b7       	in	r27, 0x3e	; 62
    70ec:	18 97       	sbiw	r26, 0x08	; 8
    70ee:	0f b6       	in	r0, 0x3f	; 63
    70f0:	f8 94       	cli
    70f2:	be bf       	out	0x3e, r27	; 62
    70f4:	0f be       	out	0x3f, r0	; 63
    70f6:	ad bf       	out	0x3d, r26	; 61
    70f8:	ed b7       	in	r30, 0x3d	; 61
    70fa:	fe b7       	in	r31, 0x3e	; 62
    70fc:	31 96       	adiw	r30, 0x01	; 1
    70fe:	12 96       	adiw	r26, 0x02	; 2
    7100:	5c 92       	st	X, r5
    7102:	4e 92       	st	-X, r4
    7104:	11 97       	sbiw	r26, 0x01	; 1
    7106:	e2 82       	std	Z+2, r14	; 0x02
    7108:	f3 82       	std	Z+3, r15	; 0x03
    710a:	44 83       	std	Z+4, r20	; 0x04
    710c:	55 83       	std	Z+5, r21	; 0x05
    710e:	66 83       	std	Z+6, r22	; 0x06
    7110:	77 83       	std	Z+7, r23	; 0x07
    7112:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(MA_Buf);
    7116:	2d b7       	in	r18, 0x3d	; 61
    7118:	3e b7       	in	r19, 0x3e	; 62
    711a:	28 5f       	subi	r18, 0xF8	; 248
    711c:	3f 4f       	sbci	r19, 0xFF	; 255
    711e:	0f b6       	in	r0, 0x3f	; 63
    7120:	f8 94       	cli
    7122:	3e bf       	out	0x3e, r19	; 62
    7124:	0f be       	out	0x3f, r0	; 63
    7126:	2d bf       	out	0x3d, r18	; 61
    7128:	c2 01       	movw	r24, r4
    712a:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(10,1);
    712e:	8a e0       	ldi	r24, 0x0A	; 10
    7130:	61 e0       	ldi	r22, 0x01	; 1
    7132:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    7136:	8f e0       	ldi	r24, 0x0F	; 15
    7138:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    713c:	80 91 68 03 	lds	r24, 0x0368
    7140:	90 91 69 03 	lds	r25, 0x0369
    7144:	84 33       	cpi	r24, 0x34	; 52
    7146:	91 05       	cpc	r25, r1
    7148:	d1 f1       	breq	.+116    	; 0x71be <Calibrate_Data_Page+0x242c>
    714a:	85 33       	cpi	r24, 0x35	; 53
    714c:	91 05       	cpc	r25, r1
    714e:	8c f4       	brge	.+34     	; 0x7172 <Calibrate_Data_Page+0x23e0>
    7150:	81 33       	cpi	r24, 0x31	; 49
    7152:	91 05       	cpc	r25, r1
    7154:	11 f1       	breq	.+68     	; 0x719a <Calibrate_Data_Page+0x2408>
    7156:	82 33       	cpi	r24, 0x32	; 50
    7158:	91 05       	cpc	r25, r1
    715a:	24 f4       	brge	.+8      	; 0x7164 <Calibrate_Data_Page+0x23d2>
    715c:	c0 97       	sbiw	r24, 0x30	; 48
    715e:	09 f0       	breq	.+2      	; 0x7162 <Calibrate_Data_Page+0x23d0>
    7160:	56 c2       	rjmp	.+1196   	; 0x760e <Calibrate_Data_Page+0x287c>
    7162:	4e c0       	rjmp	.+156    	; 0x7200 <Calibrate_Data_Page+0x246e>
    7164:	82 33       	cpi	r24, 0x32	; 50
    7166:	91 05       	cpc	r25, r1
    7168:	f1 f0       	breq	.+60     	; 0x71a6 <Calibrate_Data_Page+0x2414>
    716a:	c3 97       	sbiw	r24, 0x33	; 51
    716c:	09 f0       	breq	.+2      	; 0x7170 <Calibrate_Data_Page+0x23de>
    716e:	4f c2       	rjmp	.+1182   	; 0x760e <Calibrate_Data_Page+0x287c>
    7170:	20 c0       	rjmp	.+64     	; 0x71b2 <Calibrate_Data_Page+0x2420>
    7172:	87 33       	cpi	r24, 0x37	; 55
    7174:	91 05       	cpc	r25, r1
    7176:	99 f1       	breq	.+102    	; 0x71de <Calibrate_Data_Page+0x244c>
    7178:	88 33       	cpi	r24, 0x38	; 56
    717a:	91 05       	cpc	r25, r1
    717c:	3c f4       	brge	.+14     	; 0x718c <Calibrate_Data_Page+0x23fa>
    717e:	85 33       	cpi	r24, 0x35	; 53
    7180:	91 05       	cpc	r25, r1
    7182:	11 f1       	breq	.+68     	; 0x71c8 <Calibrate_Data_Page+0x2436>
    7184:	c6 97       	sbiw	r24, 0x36	; 54
    7186:	09 f0       	breq	.+2      	; 0x718a <Calibrate_Data_Page+0x23f8>
    7188:	42 c2       	rjmp	.+1156   	; 0x760e <Calibrate_Data_Page+0x287c>
    718a:	23 c0       	rjmp	.+70     	; 0x71d2 <Calibrate_Data_Page+0x2440>
    718c:	88 33       	cpi	r24, 0x38	; 56
    718e:	91 05       	cpc	r25, r1
    7190:	59 f1       	breq	.+86     	; 0x71e8 <Calibrate_Data_Page+0x2456>
    7192:	c9 97       	sbiw	r24, 0x39	; 57
    7194:	09 f0       	breq	.+2      	; 0x7198 <Calibrate_Data_Page+0x2406>
    7196:	3b c2       	rjmp	.+1142   	; 0x760e <Calibrate_Data_Page+0x287c>
    7198:	2d c0       	rjmp	.+90     	; 0x71f4 <Calibrate_Data_Page+0x2462>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    719a:	8c e0       	ldi	r24, 0x0C	; 12
    719c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[2] = '1';
    71a0:	81 e3       	ldi	r24, 0x31	; 49
    71a2:	89 a3       	std	Y+33, r24	; 0x21
    71a4:	34 c2       	rjmp	.+1128   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    71a6:	8c e0       	ldi	r24, 0x0C	; 12
    71a8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[2] = '2';
    71ac:	82 e3       	ldi	r24, 0x32	; 50
    71ae:	89 a3       	std	Y+33, r24	; 0x21
    71b0:	2e c2       	rjmp	.+1116   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    71b2:	8c e0       	ldi	r24, 0x0C	; 12
    71b4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[2] = '3';
    71b8:	83 e3       	ldi	r24, 0x33	; 51
    71ba:	89 a3       	std	Y+33, r24	; 0x21
    71bc:	28 c2       	rjmp	.+1104   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    71be:	8c e0       	ldi	r24, 0x0C	; 12
    71c0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[2] = '4';
    71c4:	39 a2       	std	Y+33, r3	; 0x21
    71c6:	23 c2       	rjmp	.+1094   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    71c8:	8c e0       	ldi	r24, 0x0C	; 12
    71ca:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     MA_Buf[2] = '5';
    71ce:	69 a2       	std	Y+33, r6	; 0x21
    71d0:	1e c2       	rjmp	.+1084   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    71d2:	8c e0       	ldi	r24, 0x0C	; 12
    71d4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[2] = '6';
    71d8:	86 e3       	ldi	r24, 0x36	; 54
    71da:	89 a3       	std	Y+33, r24	; 0x21
    71dc:	18 c2       	rjmp	.+1072   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    71de:	8c e0       	ldi	r24, 0x0C	; 12
    71e0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[2] = '7';
    71e4:	29 a2       	std	Y+33, r2	; 0x21
    71e6:	13 c2       	rjmp	.+1062   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    71e8:	8c e0       	ldi	r24, 0x0C	; 12
    71ea:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[2] = '8';
    71ee:	38 e3       	ldi	r19, 0x38	; 56
    71f0:	39 a3       	std	Y+33, r19	; 0x21
    71f2:	0d c2       	rjmp	.+1050   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    71f4:	8c e0       	ldi	r24, 0x0C	; 12
    71f6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[2] = '9';
    71fa:	89 e3       	ldi	r24, 0x39	; 57
    71fc:	89 a3       	std	Y+33, r24	; 0x21
    71fe:	07 c2       	rjmp	.+1038   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    7200:	8c e0       	ldi	r24, 0x0C	; 12
    7202:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[2] = '0';
    7206:	80 e3       	ldi	r24, 0x30	; 48
    7208:	89 a3       	std	Y+33, r24	; 0x21
    720a:	01 c2       	rjmp	.+1026   	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
										  }	
								         break;
								case 4:  lcd_gotoxy(11,1);
    720c:	8b e0       	ldi	r24, 0x0B	; 11
    720e:	61 e0       	ldi	r22, 0x01	; 1
    7210:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    7214:	8f e0       	ldi	r24, 0x0F	; 15
    7216:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
    721a:	f9 c1       	rjmp	.+1010   	; 0x760e <Calibrate_Data_Page+0x287c>
								         break;
								case 5:  MA = atof(MA_Buf);	 
    721c:	c2 01       	movw	r24, r4
    721e:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    7222:	60 93 93 02 	sts	0x0293, r22
    7226:	70 93 94 02 	sts	0x0294, r23
    722a:	80 93 95 02 	sts	0x0295, r24
    722e:	90 93 96 02 	sts	0x0296, r25
										 lcd_gotoxy(8,1);
    7232:	88 e0       	ldi	r24, 0x08	; 8
    7234:	61 e0       	ldi	r22, 0x01	; 1
    7236:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(MA_Buf,"%07.3f", MA);
    723a:	40 91 93 02 	lds	r20, 0x0293
    723e:	50 91 94 02 	lds	r21, 0x0294
    7242:	60 91 95 02 	lds	r22, 0x0295
    7246:	70 91 96 02 	lds	r23, 0x0296
    724a:	ad b7       	in	r26, 0x3d	; 61
    724c:	be b7       	in	r27, 0x3e	; 62
    724e:	18 97       	sbiw	r26, 0x08	; 8
    7250:	0f b6       	in	r0, 0x3f	; 63
    7252:	f8 94       	cli
    7254:	be bf       	out	0x3e, r27	; 62
    7256:	0f be       	out	0x3f, r0	; 63
    7258:	ad bf       	out	0x3d, r26	; 61
    725a:	ed b7       	in	r30, 0x3d	; 61
    725c:	fe b7       	in	r31, 0x3e	; 62
    725e:	31 96       	adiw	r30, 0x01	; 1
    7260:	12 96       	adiw	r26, 0x02	; 2
    7262:	5c 92       	st	X, r5
    7264:	4e 92       	st	-X, r4
    7266:	11 97       	sbiw	r26, 0x01	; 1
    7268:	e2 82       	std	Z+2, r14	; 0x02
    726a:	f3 82       	std	Z+3, r15	; 0x03
    726c:	44 83       	std	Z+4, r20	; 0x04
    726e:	55 83       	std	Z+5, r21	; 0x05
    7270:	66 83       	std	Z+6, r22	; 0x06
    7272:	77 83       	std	Z+7, r23	; 0x07
    7274:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(MA_Buf);
    7278:	2d b7       	in	r18, 0x3d	; 61
    727a:	3e b7       	in	r19, 0x3e	; 62
    727c:	28 5f       	subi	r18, 0xF8	; 248
    727e:	3f 4f       	sbci	r19, 0xFF	; 255
    7280:	0f b6       	in	r0, 0x3f	; 63
    7282:	f8 94       	cli
    7284:	3e bf       	out	0x3e, r19	; 62
    7286:	0f be       	out	0x3f, r0	; 63
    7288:	2d bf       	out	0x3d, r18	; 61
    728a:	c2 01       	movw	r24, r4
    728c:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(12,1);
    7290:	8c e0       	ldi	r24, 0x0C	; 12
    7292:	61 e0       	ldi	r22, 0x01	; 1
    7294:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    7298:	8f e0       	ldi	r24, 0x0F	; 15
    729a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    729e:	80 91 68 03 	lds	r24, 0x0368
    72a2:	90 91 69 03 	lds	r25, 0x0369
    72a6:	84 33       	cpi	r24, 0x34	; 52
    72a8:	91 05       	cpc	r25, r1
    72aa:	d1 f1       	breq	.+116    	; 0x7320 <Calibrate_Data_Page+0x258e>
    72ac:	85 33       	cpi	r24, 0x35	; 53
    72ae:	91 05       	cpc	r25, r1
    72b0:	8c f4       	brge	.+34     	; 0x72d4 <Calibrate_Data_Page+0x2542>
    72b2:	81 33       	cpi	r24, 0x31	; 49
    72b4:	91 05       	cpc	r25, r1
    72b6:	11 f1       	breq	.+68     	; 0x72fc <Calibrate_Data_Page+0x256a>
    72b8:	82 33       	cpi	r24, 0x32	; 50
    72ba:	91 05       	cpc	r25, r1
    72bc:	24 f4       	brge	.+8      	; 0x72c6 <Calibrate_Data_Page+0x2534>
    72be:	c0 97       	sbiw	r24, 0x30	; 48
    72c0:	09 f0       	breq	.+2      	; 0x72c4 <Calibrate_Data_Page+0x2532>
    72c2:	a5 c1       	rjmp	.+842    	; 0x760e <Calibrate_Data_Page+0x287c>
    72c4:	4e c0       	rjmp	.+156    	; 0x7362 <Calibrate_Data_Page+0x25d0>
    72c6:	82 33       	cpi	r24, 0x32	; 50
    72c8:	91 05       	cpc	r25, r1
    72ca:	f1 f0       	breq	.+60     	; 0x7308 <Calibrate_Data_Page+0x2576>
    72cc:	c3 97       	sbiw	r24, 0x33	; 51
    72ce:	09 f0       	breq	.+2      	; 0x72d2 <Calibrate_Data_Page+0x2540>
    72d0:	9e c1       	rjmp	.+828    	; 0x760e <Calibrate_Data_Page+0x287c>
    72d2:	20 c0       	rjmp	.+64     	; 0x7314 <Calibrate_Data_Page+0x2582>
    72d4:	87 33       	cpi	r24, 0x37	; 55
    72d6:	91 05       	cpc	r25, r1
    72d8:	99 f1       	breq	.+102    	; 0x7340 <Calibrate_Data_Page+0x25ae>
    72da:	88 33       	cpi	r24, 0x38	; 56
    72dc:	91 05       	cpc	r25, r1
    72de:	3c f4       	brge	.+14     	; 0x72ee <Calibrate_Data_Page+0x255c>
    72e0:	85 33       	cpi	r24, 0x35	; 53
    72e2:	91 05       	cpc	r25, r1
    72e4:	11 f1       	breq	.+68     	; 0x732a <Calibrate_Data_Page+0x2598>
    72e6:	c6 97       	sbiw	r24, 0x36	; 54
    72e8:	09 f0       	breq	.+2      	; 0x72ec <Calibrate_Data_Page+0x255a>
    72ea:	91 c1       	rjmp	.+802    	; 0x760e <Calibrate_Data_Page+0x287c>
    72ec:	23 c0       	rjmp	.+70     	; 0x7334 <Calibrate_Data_Page+0x25a2>
    72ee:	88 33       	cpi	r24, 0x38	; 56
    72f0:	91 05       	cpc	r25, r1
    72f2:	59 f1       	breq	.+86     	; 0x734a <Calibrate_Data_Page+0x25b8>
    72f4:	c9 97       	sbiw	r24, 0x39	; 57
    72f6:	09 f0       	breq	.+2      	; 0x72fa <Calibrate_Data_Page+0x2568>
    72f8:	8a c1       	rjmp	.+788    	; 0x760e <Calibrate_Data_Page+0x287c>
    72fa:	2d c0       	rjmp	.+90     	; 0x7356 <Calibrate_Data_Page+0x25c4>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    72fc:	8c e0       	ldi	r24, 0x0C	; 12
    72fe:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[4] = '1';
    7302:	81 e3       	ldi	r24, 0x31	; 49
    7304:	8b a3       	std	Y+35, r24	; 0x23
    7306:	83 c1       	rjmp	.+774    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    7308:	8c e0       	ldi	r24, 0x0C	; 12
    730a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[4] = '2';
    730e:	82 e3       	ldi	r24, 0x32	; 50
    7310:	8b a3       	std	Y+35, r24	; 0x23
    7312:	7d c1       	rjmp	.+762    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    7314:	8c e0       	ldi	r24, 0x0C	; 12
    7316:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[4] = '3';
    731a:	83 e3       	ldi	r24, 0x33	; 51
    731c:	8b a3       	std	Y+35, r24	; 0x23
    731e:	77 c1       	rjmp	.+750    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    7320:	8c e0       	ldi	r24, 0x0C	; 12
    7322:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[4] = '4';
    7326:	3b a2       	std	Y+35, r3	; 0x23
    7328:	72 c1       	rjmp	.+740    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    732a:	8c e0       	ldi	r24, 0x0C	; 12
    732c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     MA_Buf[4] = '5';
    7330:	6b a2       	std	Y+35, r6	; 0x23
    7332:	6d c1       	rjmp	.+730    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    7334:	8c e0       	ldi	r24, 0x0C	; 12
    7336:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[4] = '6';
    733a:	86 e3       	ldi	r24, 0x36	; 54
    733c:	8b a3       	std	Y+35, r24	; 0x23
    733e:	67 c1       	rjmp	.+718    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    7340:	8c e0       	ldi	r24, 0x0C	; 12
    7342:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[4] = '7';
    7346:	2b a2       	std	Y+35, r2	; 0x23
    7348:	62 c1       	rjmp	.+708    	; 0x760e <Calibrate_Data_Page+0x287c>
														 
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    734a:	8c e0       	ldi	r24, 0x0C	; 12
    734c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[4] = '8';
    7350:	38 e3       	ldi	r19, 0x38	; 56
    7352:	3b a3       	std	Y+35, r19	; 0x23
    7354:	5c c1       	rjmp	.+696    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    7356:	8c e0       	ldi	r24, 0x0C	; 12
    7358:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[4] = '9';
    735c:	89 e3       	ldi	r24, 0x39	; 57
    735e:	8b a3       	std	Y+35, r24	; 0x23
    7360:	56 c1       	rjmp	.+684    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    7362:	8c e0       	ldi	r24, 0x0C	; 12
    7364:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[4] = '0';
    7368:	80 e3       	ldi	r24, 0x30	; 48
    736a:	8b a3       	std	Y+35, r24	; 0x23
    736c:	50 c1       	rjmp	.+672    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
										  }	
								         break;
								case 6:  MA = atof(MA_Buf);	 
    736e:	c2 01       	movw	r24, r4
    7370:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    7374:	60 93 93 02 	sts	0x0293, r22
    7378:	70 93 94 02 	sts	0x0294, r23
    737c:	80 93 95 02 	sts	0x0295, r24
    7380:	90 93 96 02 	sts	0x0296, r25
										 lcd_gotoxy(8,1);
    7384:	88 e0       	ldi	r24, 0x08	; 8
    7386:	61 e0       	ldi	r22, 0x01	; 1
    7388:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(MA_Buf,"%07.3f", MA);
    738c:	40 91 93 02 	lds	r20, 0x0293
    7390:	50 91 94 02 	lds	r21, 0x0294
    7394:	60 91 95 02 	lds	r22, 0x0295
    7398:	70 91 96 02 	lds	r23, 0x0296
    739c:	ad b7       	in	r26, 0x3d	; 61
    739e:	be b7       	in	r27, 0x3e	; 62
    73a0:	18 97       	sbiw	r26, 0x08	; 8
    73a2:	0f b6       	in	r0, 0x3f	; 63
    73a4:	f8 94       	cli
    73a6:	be bf       	out	0x3e, r27	; 62
    73a8:	0f be       	out	0x3f, r0	; 63
    73aa:	ad bf       	out	0x3d, r26	; 61
    73ac:	ed b7       	in	r30, 0x3d	; 61
    73ae:	fe b7       	in	r31, 0x3e	; 62
    73b0:	31 96       	adiw	r30, 0x01	; 1
    73b2:	12 96       	adiw	r26, 0x02	; 2
    73b4:	5c 92       	st	X, r5
    73b6:	4e 92       	st	-X, r4
    73b8:	11 97       	sbiw	r26, 0x01	; 1
    73ba:	e2 82       	std	Z+2, r14	; 0x02
    73bc:	f3 82       	std	Z+3, r15	; 0x03
    73be:	44 83       	std	Z+4, r20	; 0x04
    73c0:	55 83       	std	Z+5, r21	; 0x05
    73c2:	66 83       	std	Z+6, r22	; 0x06
    73c4:	77 83       	std	Z+7, r23	; 0x07
    73c6:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(MA_Buf);
    73ca:	2d b7       	in	r18, 0x3d	; 61
    73cc:	3e b7       	in	r19, 0x3e	; 62
    73ce:	28 5f       	subi	r18, 0xF8	; 248
    73d0:	3f 4f       	sbci	r19, 0xFF	; 255
    73d2:	0f b6       	in	r0, 0x3f	; 63
    73d4:	f8 94       	cli
    73d6:	3e bf       	out	0x3e, r19	; 62
    73d8:	0f be       	out	0x3f, r0	; 63
    73da:	2d bf       	out	0x3d, r18	; 61
    73dc:	c2 01       	movw	r24, r4
    73de:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(13,1);
    73e2:	8d e0       	ldi	r24, 0x0D	; 13
    73e4:	61 e0       	ldi	r22, 0x01	; 1
    73e6:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    73ea:	8f e0       	ldi	r24, 0x0F	; 15
    73ec:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    73f0:	80 91 68 03 	lds	r24, 0x0368
    73f4:	90 91 69 03 	lds	r25, 0x0369
    73f8:	84 33       	cpi	r24, 0x34	; 52
    73fa:	91 05       	cpc	r25, r1
    73fc:	d1 f1       	breq	.+116    	; 0x7472 <Calibrate_Data_Page+0x26e0>
    73fe:	85 33       	cpi	r24, 0x35	; 53
    7400:	91 05       	cpc	r25, r1
    7402:	8c f4       	brge	.+34     	; 0x7426 <Calibrate_Data_Page+0x2694>
    7404:	81 33       	cpi	r24, 0x31	; 49
    7406:	91 05       	cpc	r25, r1
    7408:	11 f1       	breq	.+68     	; 0x744e <Calibrate_Data_Page+0x26bc>
    740a:	82 33       	cpi	r24, 0x32	; 50
    740c:	91 05       	cpc	r25, r1
    740e:	24 f4       	brge	.+8      	; 0x7418 <Calibrate_Data_Page+0x2686>
    7410:	c0 97       	sbiw	r24, 0x30	; 48
    7412:	09 f0       	breq	.+2      	; 0x7416 <Calibrate_Data_Page+0x2684>
    7414:	fc c0       	rjmp	.+504    	; 0x760e <Calibrate_Data_Page+0x287c>
    7416:	4e c0       	rjmp	.+156    	; 0x74b4 <Calibrate_Data_Page+0x2722>
    7418:	82 33       	cpi	r24, 0x32	; 50
    741a:	91 05       	cpc	r25, r1
    741c:	f1 f0       	breq	.+60     	; 0x745a <Calibrate_Data_Page+0x26c8>
    741e:	c3 97       	sbiw	r24, 0x33	; 51
    7420:	09 f0       	breq	.+2      	; 0x7424 <Calibrate_Data_Page+0x2692>
    7422:	f5 c0       	rjmp	.+490    	; 0x760e <Calibrate_Data_Page+0x287c>
    7424:	20 c0       	rjmp	.+64     	; 0x7466 <Calibrate_Data_Page+0x26d4>
    7426:	87 33       	cpi	r24, 0x37	; 55
    7428:	91 05       	cpc	r25, r1
    742a:	99 f1       	breq	.+102    	; 0x7492 <Calibrate_Data_Page+0x2700>
    742c:	88 33       	cpi	r24, 0x38	; 56
    742e:	91 05       	cpc	r25, r1
    7430:	3c f4       	brge	.+14     	; 0x7440 <Calibrate_Data_Page+0x26ae>
    7432:	85 33       	cpi	r24, 0x35	; 53
    7434:	91 05       	cpc	r25, r1
    7436:	11 f1       	breq	.+68     	; 0x747c <Calibrate_Data_Page+0x26ea>
    7438:	c6 97       	sbiw	r24, 0x36	; 54
    743a:	09 f0       	breq	.+2      	; 0x743e <Calibrate_Data_Page+0x26ac>
    743c:	e8 c0       	rjmp	.+464    	; 0x760e <Calibrate_Data_Page+0x287c>
    743e:	23 c0       	rjmp	.+70     	; 0x7486 <Calibrate_Data_Page+0x26f4>
    7440:	88 33       	cpi	r24, 0x38	; 56
    7442:	91 05       	cpc	r25, r1
    7444:	59 f1       	breq	.+86     	; 0x749c <Calibrate_Data_Page+0x270a>
    7446:	c9 97       	sbiw	r24, 0x39	; 57
    7448:	09 f0       	breq	.+2      	; 0x744c <Calibrate_Data_Page+0x26ba>
    744a:	e1 c0       	rjmp	.+450    	; 0x760e <Calibrate_Data_Page+0x287c>
    744c:	2d c0       	rjmp	.+90     	; 0x74a8 <Calibrate_Data_Page+0x2716>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    744e:	8c e0       	ldi	r24, 0x0C	; 12
    7450:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[5] = '1';
    7454:	81 e3       	ldi	r24, 0x31	; 49
    7456:	8c a3       	std	Y+36, r24	; 0x24
    7458:	da c0       	rjmp	.+436    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    745a:	8c e0       	ldi	r24, 0x0C	; 12
    745c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[5] = '2';
    7460:	82 e3       	ldi	r24, 0x32	; 50
    7462:	8c a3       	std	Y+36, r24	; 0x24
    7464:	d4 c0       	rjmp	.+424    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    7466:	8c e0       	ldi	r24, 0x0C	; 12
    7468:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[5] = '3';
    746c:	83 e3       	ldi	r24, 0x33	; 51
    746e:	8c a3       	std	Y+36, r24	; 0x24
    7470:	ce c0       	rjmp	.+412    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    7472:	8c e0       	ldi	r24, 0x0C	; 12
    7474:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[5] = '4';
    7478:	3c a2       	std	Y+36, r3	; 0x24
    747a:	c9 c0       	rjmp	.+402    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    747c:	8c e0       	ldi	r24, 0x0C	; 12
    747e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     MA_Buf[5] = '5';
    7482:	6c a2       	std	Y+36, r6	; 0x24
    7484:	c4 c0       	rjmp	.+392    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    7486:	8c e0       	ldi	r24, 0x0C	; 12
    7488:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[5] = '6';
    748c:	86 e3       	ldi	r24, 0x36	; 54
    748e:	8c a3       	std	Y+36, r24	; 0x24
    7490:	be c0       	rjmp	.+380    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    7492:	8c e0       	ldi	r24, 0x0C	; 12
    7494:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[5] = '7';
    7498:	2c a2       	std	Y+36, r2	; 0x24
    749a:	b9 c0       	rjmp	.+370    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    749c:	8c e0       	ldi	r24, 0x0C	; 12
    749e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[5] = '8';
    74a2:	38 e3       	ldi	r19, 0x38	; 56
    74a4:	3c a3       	std	Y+36, r19	; 0x24
    74a6:	b3 c0       	rjmp	.+358    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    74a8:	8c e0       	ldi	r24, 0x0C	; 12
    74aa:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[5] = '9';
    74ae:	89 e3       	ldi	r24, 0x39	; 57
    74b0:	8c a3       	std	Y+36, r24	; 0x24
    74b2:	ad c0       	rjmp	.+346    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    74b4:	8c e0       	ldi	r24, 0x0C	; 12
    74b6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[5] = '0';
    74ba:	80 e3       	ldi	r24, 0x30	; 48
    74bc:	8c a3       	std	Y+36, r24	; 0x24
    74be:	a7 c0       	rjmp	.+334    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
										  }	
								         break;
								case 7:  MA = atof(MA_Buf);	 
    74c0:	c2 01       	movw	r24, r4
    74c2:	0e 94 93 48 	call	0x9126	; 0x9126 <atof>
    74c6:	60 93 93 02 	sts	0x0293, r22
    74ca:	70 93 94 02 	sts	0x0294, r23
    74ce:	80 93 95 02 	sts	0x0295, r24
    74d2:	90 93 96 02 	sts	0x0296, r25
										 lcd_gotoxy(8,1);
    74d6:	88 e0       	ldi	r24, 0x08	; 8
    74d8:	61 e0       	ldi	r22, 0x01	; 1
    74da:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
								  		 sprintf(MA_Buf,"%07.3f", MA);
    74de:	40 91 93 02 	lds	r20, 0x0293
    74e2:	50 91 94 02 	lds	r21, 0x0294
    74e6:	60 91 95 02 	lds	r22, 0x0295
    74ea:	70 91 96 02 	lds	r23, 0x0296
    74ee:	ad b7       	in	r26, 0x3d	; 61
    74f0:	be b7       	in	r27, 0x3e	; 62
    74f2:	18 97       	sbiw	r26, 0x08	; 8
    74f4:	0f b6       	in	r0, 0x3f	; 63
    74f6:	f8 94       	cli
    74f8:	be bf       	out	0x3e, r27	; 62
    74fa:	0f be       	out	0x3f, r0	; 63
    74fc:	ad bf       	out	0x3d, r26	; 61
    74fe:	ed b7       	in	r30, 0x3d	; 61
    7500:	fe b7       	in	r31, 0x3e	; 62
    7502:	31 96       	adiw	r30, 0x01	; 1
    7504:	12 96       	adiw	r26, 0x02	; 2
    7506:	5c 92       	st	X, r5
    7508:	4e 92       	st	-X, r4
    750a:	11 97       	sbiw	r26, 0x01	; 1
    750c:	e2 82       	std	Z+2, r14	; 0x02
    750e:	f3 82       	std	Z+3, r15	; 0x03
    7510:	44 83       	std	Z+4, r20	; 0x04
    7512:	55 83       	std	Z+5, r21	; 0x05
    7514:	66 83       	std	Z+6, r22	; 0x06
    7516:	77 83       	std	Z+7, r23	; 0x07
    7518:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
										 lcd_puts(MA_Buf);
    751c:	2d b7       	in	r18, 0x3d	; 61
    751e:	3e b7       	in	r19, 0x3e	; 62
    7520:	28 5f       	subi	r18, 0xF8	; 248
    7522:	3f 4f       	sbci	r19, 0xFF	; 255
    7524:	0f b6       	in	r0, 0x3f	; 63
    7526:	f8 94       	cli
    7528:	3e bf       	out	0x3e, r19	; 62
    752a:	0f be       	out	0x3f, r0	; 63
    752c:	2d bf       	out	0x3d, r18	; 61
    752e:	c2 01       	movw	r24, r4
    7530:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
										 lcd_gotoxy(14,1);
    7534:	8e e0       	ldi	r24, 0x0E	; 14
    7536:	61 e0       	ldi	r22, 0x01	; 1
    7538:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				           				 lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    753c:	8f e0       	ldi	r24, 0x0F	; 15
    753e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
										 switch (key)  // Main Menu Switch statement
    7542:	80 91 68 03 	lds	r24, 0x0368
    7546:	90 91 69 03 	lds	r25, 0x0369
    754a:	84 33       	cpi	r24, 0x34	; 52
    754c:	91 05       	cpc	r25, r1
    754e:	c9 f1       	breq	.+114    	; 0x75c2 <Calibrate_Data_Page+0x2830>
    7550:	85 33       	cpi	r24, 0x35	; 53
    7552:	91 05       	cpc	r25, r1
    7554:	8c f4       	brge	.+34     	; 0x7578 <Calibrate_Data_Page+0x27e6>
    7556:	81 33       	cpi	r24, 0x31	; 49
    7558:	91 05       	cpc	r25, r1
    755a:	09 f1       	breq	.+66     	; 0x759e <Calibrate_Data_Page+0x280c>
    755c:	82 33       	cpi	r24, 0x32	; 50
    755e:	91 05       	cpc	r25, r1
    7560:	24 f4       	brge	.+8      	; 0x756a <Calibrate_Data_Page+0x27d8>
    7562:	c0 97       	sbiw	r24, 0x30	; 48
    7564:	09 f0       	breq	.+2      	; 0x7568 <Calibrate_Data_Page+0x27d6>
    7566:	53 c0       	rjmp	.+166    	; 0x760e <Calibrate_Data_Page+0x287c>
    7568:	4d c0       	rjmp	.+154    	; 0x7604 <Calibrate_Data_Page+0x2872>
    756a:	82 33       	cpi	r24, 0x32	; 50
    756c:	91 05       	cpc	r25, r1
    756e:	e9 f0       	breq	.+58     	; 0x75aa <Calibrate_Data_Page+0x2818>
    7570:	c3 97       	sbiw	r24, 0x33	; 51
    7572:	09 f0       	breq	.+2      	; 0x7576 <Calibrate_Data_Page+0x27e4>
    7574:	4c c0       	rjmp	.+152    	; 0x760e <Calibrate_Data_Page+0x287c>
    7576:	1f c0       	rjmp	.+62     	; 0x75b6 <Calibrate_Data_Page+0x2824>
    7578:	87 33       	cpi	r24, 0x37	; 55
    757a:	91 05       	cpc	r25, r1
    757c:	91 f1       	breq	.+100    	; 0x75e2 <Calibrate_Data_Page+0x2850>
    757e:	88 33       	cpi	r24, 0x38	; 56
    7580:	91 05       	cpc	r25, r1
    7582:	3c f4       	brge	.+14     	; 0x7592 <Calibrate_Data_Page+0x2800>
    7584:	85 33       	cpi	r24, 0x35	; 53
    7586:	91 05       	cpc	r25, r1
    7588:	09 f1       	breq	.+66     	; 0x75cc <Calibrate_Data_Page+0x283a>
    758a:	c6 97       	sbiw	r24, 0x36	; 54
    758c:	09 f0       	breq	.+2      	; 0x7590 <Calibrate_Data_Page+0x27fe>
    758e:	3f c0       	rjmp	.+126    	; 0x760e <Calibrate_Data_Page+0x287c>
    7590:	22 c0       	rjmp	.+68     	; 0x75d6 <Calibrate_Data_Page+0x2844>
    7592:	88 33       	cpi	r24, 0x38	; 56
    7594:	91 05       	cpc	r25, r1
    7596:	51 f1       	breq	.+84     	; 0x75ec <Calibrate_Data_Page+0x285a>
    7598:	c9 97       	sbiw	r24, 0x39	; 57
    759a:	c9 f5       	brne	.+114    	; 0x760e <Calibrate_Data_Page+0x287c>
    759c:	2d c0       	rjmp	.+90     	; 0x75f8 <Calibrate_Data_Page+0x2866>
										 {
											 
												case '1':lcd_command(LCD_DISP_ON);
    759e:	8c e0       	ldi	r24, 0x0C	; 12
    75a0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[6] = '1';
    75a4:	81 e3       	ldi	r24, 0x31	; 49
    75a6:	8d a3       	std	Y+37, r24	; 0x25
    75a8:	32 c0       	rjmp	.+100    	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '2':lcd_command(LCD_DISP_ON);
    75aa:	8c e0       	ldi	r24, 0x0C	; 12
    75ac:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[6] = '2';
    75b0:	82 e3       	ldi	r24, 0x32	; 50
    75b2:	8d a3       	std	Y+37, r24	; 0x25
    75b4:	2c c0       	rjmp	.+88     	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '3':lcd_command(LCD_DISP_ON);
    75b6:	8c e0       	ldi	r24, 0x0C	; 12
    75b8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[6] = '3';
    75bc:	83 e3       	ldi	r24, 0x33	; 51
    75be:	8d a3       	std	Y+37, r24	; 0x25
    75c0:	26 c0       	rjmp	.+76     	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '4':lcd_command(LCD_DISP_ON);
    75c2:	8c e0       	ldi	r24, 0x0C	; 12
    75c4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[6] = '4';
    75c8:	3d a2       	std	Y+37, r3	; 0x25
    75ca:	21 c0       	rjmp	.+66     	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '5':lcd_command(LCD_DISP_ON);
    75cc:	8c e0       	ldi	r24, 0x0C	; 12
    75ce:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
													     MA_Buf[6] = '5';
    75d2:	6d a2       	std	Y+37, r6	; 0x25
    75d4:	1c c0       	rjmp	.+56     	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '6':lcd_command(LCD_DISP_ON);
    75d6:	8c e0       	ldi	r24, 0x0C	; 12
    75d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
														 MA_Buf[6] = '6';
    75dc:	86 e3       	ldi	r24, 0x36	; 54
    75de:	8d a3       	std	Y+37, r24	; 0x25
    75e0:	16 c0       	rjmp	.+44     	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '7':lcd_command(LCD_DISP_ON);
    75e2:	8c e0       	ldi	r24, 0x0C	; 12
    75e4:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[6] = '7';
    75e8:	2d a2       	std	Y+37, r2	; 0x25
    75ea:	11 c0       	rjmp	.+34     	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '8':lcd_command(LCD_DISP_ON);
    75ec:	8c e0       	ldi	r24, 0x0C	; 12
    75ee:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[6] = '8';
    75f2:	38 e3       	ldi	r19, 0x38	; 56
    75f4:	3d a3       	std	Y+37, r19	; 0x25
    75f6:	0b c0       	rjmp	.+22     	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '9':lcd_command(LCD_DISP_ON);
    75f8:	8c e0       	ldi	r24, 0x0C	; 12
    75fa:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[6] = '9';
    75fe:	89 e3       	ldi	r24, 0x39	; 57
    7600:	8d a3       	std	Y+37, r24	; 0x25
    7602:	05 c0       	rjmp	.+10     	; 0x760e <Calibrate_Data_Page+0x287c>
														  
										 				 break;	
												case '0':lcd_command(LCD_DISP_ON);
    7604:	8c e0       	ldi	r24, 0x0C	; 12
    7606:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
												         MA_Buf[6] = '0';
    760a:	80 e3       	ldi	r24, 0x30	; 48
    760c:	8d a3       	std	Y+37, r24	; 0x25
			lcd_gotoxy(8,3);
			sprintf(SN_Buf,"%07.3f", U_Load);
			lcd_puts(SN_Buf);
			
			
			while(key != '*')
    760e:	80 91 68 03 	lds	r24, 0x0368
    7612:	90 91 69 03 	lds	r25, 0x0369
    7616:	8a 97       	sbiw	r24, 0x2a	; 42
    7618:	11 f0       	breq	.+4      	; 0x761e <Calibrate_Data_Page+0x288c>
    761a:	0c 94 f7 27 	jmp	0x4fee	; 0x4fee <Calibrate_Data_Page+0x25c>
    761e:	06 c0       	rjmp	.+12     	; 0x762c <Calibrate_Data_Page+0x289a>
					}	
					 
			}
			while(KeyPressedStatus == 1)	
		  	{
				key = GetKeyPressed(); // wait for key release
    7620:	0e 94 a1 04 	call	0x942	; 0x942 <GetKeyPressed>
    7624:	90 93 69 03 	sts	0x0369, r25
    7628:	80 93 68 03 	sts	0x0368, r24
		 
						    
					}	
					 
			}
			while(KeyPressedStatus == 1)	
    762c:	80 91 52 03 	lds	r24, 0x0352
    7630:	81 30       	cpi	r24, 0x01	; 1
    7632:	b1 f3       	breq	.-20     	; 0x7620 <Calibrate_Data_Page+0x288e>
		  	{
				key = GetKeyPressed(); // wait for key release
		  	}
			eeprom_write_float(&Epromadress_MI,MI);
    7634:	40 91 42 03 	lds	r20, 0x0342
    7638:	50 91 43 03 	lds	r21, 0x0343
    763c:	60 91 44 03 	lds	r22, 0x0344
    7640:	70 91 45 03 	lds	r23, 0x0345
    7644:	8b e5       	ldi	r24, 0x5B	; 91
    7646:	93 e0       	ldi	r25, 0x03	; 3
    7648:	0e 94 4f 4a 	call	0x949e	; 0x949e <__eewr_dword_m128>
			eeprom_write_float(&Epromadress_ZO,ZO);
    764c:	40 91 b1 02 	lds	r20, 0x02B1
    7650:	50 91 b2 02 	lds	r21, 0x02B2
    7654:	60 91 b3 02 	lds	r22, 0x02B3
    7658:	70 91 b4 02 	lds	r23, 0x02B4
    765c:	83 ea       	ldi	r24, 0xA3	; 163
    765e:	92 e0       	ldi	r25, 0x02	; 2
    7660:	0e 94 4f 4a 	call	0x949e	; 0x949e <__eewr_dword_m128>
			eeprom_write_float(&Epromadress_SN,SN);
    7664:	40 91 ee 02 	lds	r20, 0x02EE
    7668:	50 91 ef 02 	lds	r21, 0x02EF
    766c:	60 91 f0 02 	lds	r22, 0x02F0
    7670:	70 91 f1 02 	lds	r23, 0x02F1
    7674:	8a e4       	ldi	r24, 0x4A	; 74
    7676:	93 e0       	ldi	r25, 0x03	; 3
    7678:	0e 94 4f 4a 	call	0x949e	; 0x949e <__eewr_dword_m128>
			eeprom_write_float(&Epromadress_MA,MA);
    767c:	40 91 93 02 	lds	r20, 0x0293
    7680:	50 91 94 02 	lds	r21, 0x0294
    7684:	60 91 95 02 	lds	r22, 0x0295
    7688:	70 91 96 02 	lds	r23, 0x0296
    768c:	82 e8       	ldi	r24, 0x82	; 130
    768e:	92 e0       	ldi	r25, 0x02	; 2
    7690:	0e 94 4f 4a 	call	0x949e	; 0x949e <__eewr_dword_m128>
		
			lcd_command(LCD_DISP_ON);
    7694:	8c e0       	ldi	r24, 0x0C	; 12
    7696:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
			lcd_clrscr();		
    769a:	0e 94 25 04 	call	0x84a	; 0x84a <lcd_clrscr>

}
    769e:	ac 96       	adiw	r28, 0x2c	; 44
    76a0:	0f b6       	in	r0, 0x3f	; 63
    76a2:	f8 94       	cli
    76a4:	de bf       	out	0x3e, r29	; 62
    76a6:	0f be       	out	0x3f, r0	; 63
    76a8:	cd bf       	out	0x3d, r28	; 61
    76aa:	cf 91       	pop	r28
    76ac:	df 91       	pop	r29
    76ae:	1f 91       	pop	r17
    76b0:	0f 91       	pop	r16
    76b2:	ff 90       	pop	r15
    76b4:	ef 90       	pop	r14
    76b6:	df 90       	pop	r13
    76b8:	cf 90       	pop	r12
    76ba:	bf 90       	pop	r11
    76bc:	af 90       	pop	r10
    76be:	9f 90       	pop	r9
    76c0:	8f 90       	pop	r8
    76c2:	7f 90       	pop	r7
    76c4:	6f 90       	pop	r6
    76c6:	5f 90       	pop	r5
    76c8:	4f 90       	pop	r4
    76ca:	3f 90       	pop	r3
    76cc:	2f 90       	pop	r2
    76ce:	08 95       	ret
							CalibrateDataPage1_Print_Falg = 0;
						 
					}	
					 

					if(CalibrateDataPageCursor == 1)
    76d0:	9a a5       	ldd	r25, Y+42	; 0x2a
    76d2:	91 30       	cpi	r25, 0x01	; 1
    76d4:	11 f4       	brne	.+4      	; 0x76da <Calibrate_Data_Page+0x2948>
    76d6:	0c 94 ad 29 	jmp	0x535a	; 0x535a <Calibrate_Data_Page+0x5c8>
    76da:	0c 94 fe 2d 	jmp	0x5bfc	; 0x5bfc <Calibrate_Data_Page+0xe6a>
    76de:	a1 e0       	ldi	r26, 0x01	; 1
    76e0:	a9 a7       	std	Y+41, r26	; 0x29
    76e2:	74 cb       	rjmp	.-2328   	; 0x6dcc <Calibrate_Data_Page+0x203a>
    76e4:	01 e0       	ldi	r16, 0x01	; 1
    76e6:	6e cb       	rjmp	.-2340   	; 0x6dc4 <Calibrate_Data_Page+0x2032>

000076e8 <Passward_Verification>:
		}
}


void Passward_Verification(void)
{
    76e8:	4f 92       	push	r4
    76ea:	5f 92       	push	r5
    76ec:	6f 92       	push	r6
    76ee:	7f 92       	push	r7
    76f0:	8f 92       	push	r8
    76f2:	9f 92       	push	r9
    76f4:	af 92       	push	r10
    76f6:	bf 92       	push	r11
    76f8:	cf 92       	push	r12
    76fa:	df 92       	push	r13
    76fc:	ef 92       	push	r14
    76fe:	ff 92       	push	r15
    7700:	0f 93       	push	r16
    7702:	1f 93       	push	r17
    7704:	df 93       	push	r29
    7706:	cf 93       	push	r28
    7708:	cd b7       	in	r28, 0x3d	; 61
    770a:	de b7       	in	r29, 0x3e	; 62
    770c:	a0 97       	sbiw	r28, 0x20	; 32
    770e:	0f b6       	in	r0, 0x3f	; 63
    7710:	f8 94       	cli
    7712:	de bf       	out	0x3e, r29	; 62
    7714:	0f be       	out	0x3f, r0	; 63
    7716:	cd bf       	out	0x3d, r28	; 61
char PasswordFlag = 0;
int ProcessDataPasswordCount = 0;
char ProcessDataPasswordBuf[8] = "0000";
    7718:	de 01       	movw	r26, r28
    771a:	11 96       	adiw	r26, 0x01	; 1
    771c:	e0 e1       	ldi	r30, 0x10	; 16
    771e:	f2 e0       	ldi	r31, 0x02	; 2
    7720:	85 e0       	ldi	r24, 0x05	; 5
    7722:	01 90       	ld	r0, Z+
    7724:	0d 92       	st	X+, r0
    7726:	81 50       	subi	r24, 0x01	; 1
    7728:	e1 f7       	brne	.-8      	; 0x7722 <Passward_Verification+0x3a>
    772a:	fe 01       	movw	r30, r28
    772c:	36 96       	adiw	r30, 0x06	; 6
    772e:	83 e0       	ldi	r24, 0x03	; 3
    7730:	df 01       	movw	r26, r30
    7732:	1d 92       	st	X+, r1
    7734:	8a 95       	dec	r24
    7736:	e9 f7       	brne	.-6      	; 0x7732 <Passward_Verification+0x4a>
char ProcessDataPassword_Set_Buf[8]="1234";
    7738:	de 01       	movw	r26, r28
    773a:	19 96       	adiw	r26, 0x09	; 9
    773c:	e8 e1       	ldi	r30, 0x18	; 24
    773e:	f2 e0       	ldi	r31, 0x02	; 2
    7740:	85 e0       	ldi	r24, 0x05	; 5
    7742:	01 90       	ld	r0, Z+
    7744:	0d 92       	st	X+, r0
    7746:	81 50       	subi	r24, 0x01	; 1
    7748:	e1 f7       	brne	.-8      	; 0x7742 <Passward_Verification+0x5a>
    774a:	fe 01       	movw	r30, r28
    774c:	3e 96       	adiw	r30, 0x0e	; 14
    774e:	83 e0       	ldi	r24, 0x03	; 3
    7750:	df 01       	movw	r26, r30
    7752:	1d 92       	st	X+, r1
    7754:	8a 95       	dec	r24
    7756:	e9 f7       	brne	.-6      	; 0x7752 <Passward_Verification+0x6a>
int CalibrateDataPasswordCount = 0;
char CalibrateDataPasswordBuf[8] = "0000";
    7758:	de 01       	movw	r26, r28
    775a:	51 96       	adiw	r26, 0x11	; 17
    775c:	e0 e1       	ldi	r30, 0x10	; 16
    775e:	f2 e0       	ldi	r31, 0x02	; 2
    7760:	85 e0       	ldi	r24, 0x05	; 5
    7762:	01 90       	ld	r0, Z+
    7764:	0d 92       	st	X+, r0
    7766:	81 50       	subi	r24, 0x01	; 1
    7768:	e1 f7       	brne	.-8      	; 0x7762 <Passward_Verification+0x7a>
    776a:	fe 01       	movw	r30, r28
    776c:	76 96       	adiw	r30, 0x16	; 22
    776e:	83 e0       	ldi	r24, 0x03	; 3
    7770:	df 01       	movw	r26, r30
    7772:	1d 92       	st	X+, r1
    7774:	8a 95       	dec	r24
    7776:	e9 f7       	brne	.-6      	; 0x7772 <Passward_Verification+0x8a>
char CalibrateDataPassword_Set_Buf[8]="1234";
    7778:	de 01       	movw	r26, r28
    777a:	59 96       	adiw	r26, 0x19	; 25
    777c:	e8 e1       	ldi	r30, 0x18	; 24
    777e:	f2 e0       	ldi	r31, 0x02	; 2
    7780:	85 e0       	ldi	r24, 0x05	; 5
    7782:	01 90       	ld	r0, Z+
    7784:	0d 92       	st	X+, r0
    7786:	81 50       	subi	r24, 0x01	; 1
    7788:	e1 f7       	brne	.-8      	; 0x7782 <Passward_Verification+0x9a>
    778a:	fe 01       	movw	r30, r28
    778c:	7e 96       	adiw	r30, 0x1e	; 30
    778e:	83 e0       	ldi	r24, 0x03	; 3
    7790:	df 01       	movw	r26, r30
    7792:	1d 92       	st	X+, r1
    7794:	8a 95       	dec	r24
    7796:	e9 f7       	brne	.-6      	; 0x7792 <Passward_Verification+0xaa>


			PasswordFlag = 0;
		 	unsigned char PasswordPageCursor = 1;
		    unsigned char PasswordLineCursor = 1;
			lcd_clrscr();
    7798:	0e 94 25 04 	call	0x84a	; 0x84a <lcd_clrscr>
			lcd_gotoxy(0,0);
    779c:	80 e0       	ldi	r24, 0x00	; 0
    779e:	60 e0       	ldi	r22, 0x00	; 0
    77a0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			lcd_puts("   ENTER PASSWORD");
    77a4:	8c eb       	ldi	r24, 0xBC	; 188
    77a6:	91 e0       	ldi	r25, 0x01	; 1
    77a8:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
			lcd_gotoxy(0,2);
    77ac:	80 e0       	ldi	r24, 0x00	; 0
    77ae:	62 e0       	ldi	r22, 0x02	; 2
    77b0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			lcd_puts("Process");
    77b4:	8e ec       	ldi	r24, 0xCE	; 206
    77b6:	91 e0       	ldi	r25, 0x01	; 1
    77b8:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
			lcd_gotoxy(0,3);
    77bc:	80 e0       	ldi	r24, 0x00	; 0
    77be:	63 e0       	ldi	r22, 0x03	; 3
    77c0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			lcd_puts("Calibrate");
    77c4:	86 ed       	ldi	r24, 0xD6	; 214
    77c6:	91 e0       	ldi	r25, 0x01	; 1
    77c8:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
			lcd_gotoxy(10,2);
    77cc:	8a e0       	ldi	r24, 0x0A	; 10
    77ce:	62 e0       	ldi	r22, 0x02	; 2
    77d0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    77d4:	8f e0       	ldi	r24, 0x0F	; 15
    77d6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
    77da:	01 e0       	ldi	r16, 0x01	; 1
    77dc:	40 e9       	ldi	r20, 0x90	; 144
    77de:	c4 2e       	mov	r12, r20
    77e0:	41 e0       	ldi	r20, 0x01	; 1
    77e2:	d4 2e       	mov	r13, r20
						  lcd_putc('*');
						  lcd_gotoxy((CalibrateDataPasswordCount+10),3);
						  lcd_command(LCD_DISP_ON_CURSOR_BLINK);
						 // sprintf(buf,"%d", CalibrateDataPasswordCount);
						 // USART0_Transmit_String(buf);
						  USART0_Transmit_String(CalibrateDataPasswordBuf);
    77e4:	31 e1       	ldi	r19, 0x11	; 17
    77e6:	83 2e       	mov	r8, r19
    77e8:	91 2c       	mov	r9, r1
    77ea:	8c 0e       	add	r8, r28
    77ec:	9d 1e       	adc	r9, r29
						  USART0_Transmit_String(CalibrateDataPassword_Set_Buf);
    77ee:	29 e1       	ldi	r18, 0x19	; 25
    77f0:	42 2e       	mov	r4, r18
    77f2:	51 2c       	mov	r5, r1
    77f4:	4c 0e       	add	r4, r28
    77f6:	5d 1e       	adc	r5, r29
						  lcd_putc('*');
						  lcd_gotoxy((ProcessDataPasswordCount+10),2);
						  lcd_command(LCD_DISP_ON_CURSOR_BLINK);
						 // sprintf(buf,"%d", ProcessDataPasswordCount);
						 // USART0_Transmit_String(buf);
						  USART0_Transmit_String(ProcessDataPasswordBuf);
    77f8:	5e 01       	movw	r10, r28
    77fa:	08 94       	sec
    77fc:	a1 1c       	adc	r10, r1
    77fe:	b1 1c       	adc	r11, r1
						  USART0_Transmit_String(ProcessDataPassword_Set_Buf);
    7800:	99 e0       	ldi	r25, 0x09	; 9
    7802:	69 2e       	mov	r6, r25
    7804:	71 2c       	mov	r7, r1
    7806:	6c 0e       	add	r6, r28
    7808:	7d 1e       	adc	r7, r29
			lcd_puts("Calibrate");
			lcd_gotoxy(10,2);
			lcd_command(LCD_DISP_ON_CURSOR_BLINK);
			while(PasswordFlag != 1)
			{
				key = GetKeyPressed();
    780a:	0e 94 a1 04 	call	0x942	; 0x942 <GetKeyPressed>
    780e:	90 93 69 03 	sts	0x0369, r25
    7812:	80 93 68 03 	sts	0x0368, r24
				if(key == 'A')
    7816:	81 34       	cpi	r24, 0x41	; 65
    7818:	91 05       	cpc	r25, r1
    781a:	49 f4       	brne	.+18     	; 0x782e <Passward_Verification+0x146>
    781c:	88 eb       	ldi	r24, 0xB8	; 184
    781e:	9b e0       	ldi	r25, 0x0B	; 11
    7820:	f6 01       	movw	r30, r12
    7822:	31 97       	sbiw	r30, 0x01	; 1
    7824:	f1 f7       	brne	.-4      	; 0x7822 <Passward_Verification+0x13a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7826:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7828:	d9 f7       	brne	.-10     	; 0x7820 <Passward_Verification+0x138>
				{
				    _delay_ms(300);
					PasswordPageCursor--;
    782a:	01 50       	subi	r16, 0x01	; 1
    782c:	0b c0       	rjmp	.+22     	; 0x7844 <Passward_Verification+0x15c>
				}
		 	    if(key == 'B')
    782e:	82 34       	cpi	r24, 0x42	; 66
    7830:	91 05       	cpc	r25, r1
    7832:	41 f4       	brne	.+16     	; 0x7844 <Passward_Verification+0x15c>
    7834:	88 eb       	ldi	r24, 0xB8	; 184
    7836:	9b e0       	ldi	r25, 0x0B	; 11
    7838:	f6 01       	movw	r30, r12
    783a:	31 97       	sbiw	r30, 0x01	; 1
    783c:	f1 f7       	brne	.-4      	; 0x783a <Passward_Verification+0x152>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    783e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7840:	d9 f7       	brne	.-10     	; 0x7838 <Passward_Verification+0x150>
				{
					_delay_ms(300); 
					PasswordPageCursor++;
    7842:	0f 5f       	subi	r16, 0xFF	; 255
				}
				if(	PasswordPageCursor > 2)
    7844:	03 30       	cpi	r16, 0x03	; 3
    7846:	08 f0       	brcs	.+2      	; 0x784a <Passward_Verification+0x162>
    7848:	f6 c0       	rjmp	.+492    	; 0x7a36 <Passward_Verification+0x34e>
				{
					PasswordPageCursor = 2;
				}
				if(	PasswordPageCursor < 1)
    784a:	00 23       	and	r16, r16
    784c:	11 f4       	brne	.+4      	; 0x7852 <Passward_Verification+0x16a>
    784e:	01 e0       	ldi	r16, 0x01	; 1
    7850:	03 c0       	rjmp	.+6      	; 0x7858 <Passward_Verification+0x170>
				{
					PasswordPageCursor = 1;
				}
				if(PasswordPageCursor == 1)
    7852:	01 30       	cpi	r16, 0x01	; 1
    7854:	09 f0       	breq	.+2      	; 0x7858 <Passward_Verification+0x170>
    7856:	ef c0       	rjmp	.+478    	; 0x7a36 <Passward_Verification+0x34e>
				{
					//sprintf(buf,"%d", ProcessDataPasswordCount);
					//USART0_Transmit_String(buf);
					lcd_gotoxy(10,2);
    7858:	8a e0       	ldi	r24, 0x0A	; 10
    785a:	62 e0       	ldi	r22, 0x02	; 2
    785c:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
					lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    7860:	8f e0       	ldi	r24, 0x0F	; 15
    7862:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
					if((KeyPressedStatus == 1)&&(key != 'A')&&(key!='B')&&(key != 'C')&&(key!='D')
    7866:	80 91 52 03 	lds	r24, 0x0352
    786a:	81 30       	cpi	r24, 0x01	; 1
    786c:	09 f0       	breq	.+2      	; 0x7870 <Passward_Verification+0x188>
    786e:	d2 c1       	rjmp	.+932    	; 0x7c14 <Passward_Verification+0x52c>
    7870:	80 91 68 03 	lds	r24, 0x0368
    7874:	90 91 69 03 	lds	r25, 0x0369
    7878:	81 34       	cpi	r24, 0x41	; 65
    787a:	91 05       	cpc	r25, r1
    787c:	09 f4       	brne	.+2      	; 0x7880 <Passward_Verification+0x198>
    787e:	ca c1       	rjmp	.+916    	; 0x7c14 <Passward_Verification+0x52c>
    7880:	82 34       	cpi	r24, 0x42	; 66
    7882:	91 05       	cpc	r25, r1
    7884:	09 f4       	brne	.+2      	; 0x7888 <Passward_Verification+0x1a0>
    7886:	c6 c1       	rjmp	.+908    	; 0x7c14 <Passward_Verification+0x52c>
    7888:	83 34       	cpi	r24, 0x43	; 67
    788a:	91 05       	cpc	r25, r1
    788c:	09 f4       	brne	.+2      	; 0x7890 <Passward_Verification+0x1a8>
    788e:	c2 c1       	rjmp	.+900    	; 0x7c14 <Passward_Verification+0x52c>
    7890:	84 34       	cpi	r24, 0x44	; 68
    7892:	91 05       	cpc	r25, r1
    7894:	09 f4       	brne	.+2      	; 0x7898 <Passward_Verification+0x1b0>
    7896:	be c1       	rjmp	.+892    	; 0x7c14 <Passward_Verification+0x52c>
    7898:	83 32       	cpi	r24, 0x23	; 35
    789a:	91 05       	cpc	r25, r1
    789c:	09 f4       	brne	.+2      	; 0x78a0 <Passward_Verification+0x1b8>
    789e:	ba c1       	rjmp	.+884    	; 0x7c14 <Passward_Verification+0x52c>
    78a0:	8a 32       	cpi	r24, 0x2A	; 42
    78a2:	91 05       	cpc	r25, r1
    78a4:	09 f4       	brne	.+2      	; 0x78a8 <Passward_Verification+0x1c0>
    78a6:	b6 c1       	rjmp	.+876    	; 0x7c14 <Passward_Verification+0x52c>
						&&(key!='#')&&(key!='*'))
					{
						  ProcessDataPasswordBuf[ProcessDataPasswordCount] = key;
    78a8:	89 83       	std	Y+1, r24	; 0x01
    78aa:	06 c0       	rjmp	.+12     	; 0x78b8 <Passward_Verification+0x1d0>
						  while(KeyPressedStatus == 1)	
						  {
							key = GetKeyPressed();
    78ac:	0e 94 a1 04 	call	0x942	; 0x942 <GetKeyPressed>
    78b0:	90 93 69 03 	sts	0x0369, r25
    78b4:	80 93 68 03 	sts	0x0368, r24
					lcd_command(LCD_DISP_ON_CURSOR_BLINK);
					if((KeyPressedStatus == 1)&&(key != 'A')&&(key!='B')&&(key != 'C')&&(key!='D')
						&&(key!='#')&&(key!='*'))
					{
						  ProcessDataPasswordBuf[ProcessDataPasswordCount] = key;
						  while(KeyPressedStatus == 1)	
    78b8:	80 91 52 03 	lds	r24, 0x0352
    78bc:	81 30       	cpi	r24, 0x01	; 1
    78be:	b1 f3       	breq	.-20     	; 0x78ac <Passward_Verification+0x1c4>
							key = GetKeyPressed();
						  }
						  
						  
						  ProcessDataPasswordCount++;
						  lcd_gotoxy((ProcessDataPasswordCount+9),2);
    78c0:	8a e0       	ldi	r24, 0x0A	; 10
    78c2:	62 e0       	ldi	r22, 0x02	; 2
    78c4:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
						  lcd_putc('*');
    78c8:	8a e2       	ldi	r24, 0x2A	; 42
    78ca:	0e 94 2d 04 	call	0x85a	; 0x85a <lcd_putc>
						  lcd_gotoxy((ProcessDataPasswordCount+10),2);
    78ce:	8b e0       	ldi	r24, 0x0B	; 11
    78d0:	62 e0       	ldi	r22, 0x02	; 2
    78d2:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
						  lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    78d6:	8f e0       	ldi	r24, 0x0F	; 15
    78d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
						 // sprintf(buf,"%d", ProcessDataPasswordCount);
						 // USART0_Transmit_String(buf);
						  USART0_Transmit_String(ProcessDataPasswordBuf);
    78dc:	c5 01       	movw	r24, r10
    78de:	0e 94 ed 02 	call	0x5da	; 0x5da <USART0_Transmit_String>
						  USART0_Transmit_String(ProcessDataPassword_Set_Buf);
    78e2:	c3 01       	movw	r24, r6
    78e4:	0e 94 ed 02 	call	0x5da	; 0x5da <USART0_Transmit_String>
    78e8:	81 e0       	ldi	r24, 0x01	; 1
    78ea:	e8 2e       	mov	r14, r24
    78ec:	f1 2c       	mov	r15, r1
						  while(ProcessDataPasswordCount < 4)
						  {
						  //ProcessDataPasswordBuf[ProcessDataPasswordCount] = key;
						  //sprintf(buf,"%d", ProcessDataPasswordCount);
						  //USART0_Transmit_String(buf);
						  USART0_Transmit_String(ProcessDataPasswordBuf);
    78ee:	c5 01       	movw	r24, r10
    78f0:	0e 94 ed 02 	call	0x5da	; 0x5da <USART0_Transmit_String>
						   
						  key = GetKeyPressed();
    78f4:	0e 94 a1 04 	call	0x942	; 0x942 <GetKeyPressed>
    78f8:	9c 01       	movw	r18, r24
    78fa:	90 93 69 03 	sts	0x0369, r25
    78fe:	80 93 68 03 	sts	0x0368, r24
							if((KeyPressedStatus == 1)&&(key != 'A')&&(key!='B')&&(key != 'C')&&(key!='D')
    7902:	80 91 52 03 	lds	r24, 0x0352
    7906:	81 30       	cpi	r24, 0x01	; 1
    7908:	91 f7       	brne	.-28     	; 0x78ee <Passward_Verification+0x206>
    790a:	21 34       	cpi	r18, 0x41	; 65
    790c:	31 05       	cpc	r19, r1
    790e:	89 f1       	breq	.+98     	; 0x7972 <Passward_Verification+0x28a>
    7910:	22 34       	cpi	r18, 0x42	; 66
    7912:	31 05       	cpc	r19, r1
    7914:	71 f1       	breq	.+92     	; 0x7972 <Passward_Verification+0x28a>
    7916:	23 34       	cpi	r18, 0x43	; 67
    7918:	31 05       	cpc	r19, r1
    791a:	59 f1       	breq	.+86     	; 0x7972 <Passward_Verification+0x28a>
    791c:	24 34       	cpi	r18, 0x44	; 68
    791e:	31 05       	cpc	r19, r1
    7920:	41 f1       	breq	.+80     	; 0x7972 <Passward_Verification+0x28a>
    7922:	23 32       	cpi	r18, 0x23	; 35
    7924:	31 05       	cpc	r19, r1
    7926:	29 f1       	breq	.+74     	; 0x7972 <Passward_Verification+0x28a>
    7928:	2a 32       	cpi	r18, 0x2A	; 42
    792a:	31 05       	cpc	r19, r1
    792c:	11 f1       	breq	.+68     	; 0x7972 <Passward_Verification+0x28a>
								&&(key!='#')&&(key!='*'))
							{
								ProcessDataPasswordBuf[ProcessDataPasswordCount] = key;
    792e:	f5 01       	movw	r30, r10
    7930:	ee 0d       	add	r30, r14
    7932:	ff 1d       	adc	r31, r15
    7934:	20 83       	st	Z, r18
    7936:	06 c0       	rjmp	.+12     	; 0x7944 <Passward_Verification+0x25c>
								while(KeyPressedStatus == 1)	
							  	{
									key = GetKeyPressed();
    7938:	0e 94 a1 04 	call	0x942	; 0x942 <GetKeyPressed>
    793c:	90 93 69 03 	sts	0x0369, r25
    7940:	80 93 68 03 	sts	0x0368, r24
						  key = GetKeyPressed();
							if((KeyPressedStatus == 1)&&(key != 'A')&&(key!='B')&&(key != 'C')&&(key!='D')
								&&(key!='#')&&(key!='*'))
							{
								ProcessDataPasswordBuf[ProcessDataPasswordCount] = key;
								while(KeyPressedStatus == 1)	
    7944:	80 91 52 03 	lds	r24, 0x0352
    7948:	81 30       	cpi	r24, 0x01	; 1
    794a:	b1 f3       	breq	.-20     	; 0x7938 <Passward_Verification+0x250>
							  	{
									key = GetKeyPressed();
							  	}
								ProcessDataPasswordCount++;
    794c:	08 94       	sec
    794e:	e1 1c       	adc	r14, r1
    7950:	f1 1c       	adc	r15, r1
								lcd_gotoxy((ProcessDataPasswordCount+9),2);
    7952:	8e 2d       	mov	r24, r14
    7954:	87 5f       	subi	r24, 0xF7	; 247
    7956:	62 e0       	ldi	r22, 0x02	; 2
    7958:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
						  		lcd_putc('*');
    795c:	8a e2       	ldi	r24, 0x2A	; 42
    795e:	0e 94 2d 04 	call	0x85a	; 0x85a <lcd_putc>
								lcd_gotoxy((ProcessDataPasswordCount+10),2);
    7962:	8e 2d       	mov	r24, r14
    7964:	86 5f       	subi	r24, 0xF6	; 246
    7966:	62 e0       	ldi	r22, 0x02	; 2
    7968:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
						  		lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    796c:	8f e0       	ldi	r24, 0x0F	; 15
    796e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
						  lcd_command(LCD_DISP_ON_CURSOR_BLINK);
						 // sprintf(buf,"%d", ProcessDataPasswordCount);
						 // USART0_Transmit_String(buf);
						  USART0_Transmit_String(ProcessDataPasswordBuf);
						  USART0_Transmit_String(ProcessDataPassword_Set_Buf);
						  while(ProcessDataPasswordCount < 4)
    7972:	b4 e0       	ldi	r27, 0x04	; 4
    7974:	eb 16       	cp	r14, r27
    7976:	f1 04       	cpc	r15, r1
    7978:	0c f4       	brge	.+2      	; 0x797c <Passward_Verification+0x294>
    797a:	b9 cf       	rjmp	.-142    	; 0x78ee <Passward_Verification+0x206>
								lcd_gotoxy((ProcessDataPasswordCount+10),2);
						  		lcd_command(LCD_DISP_ON_CURSOR_BLINK);
								
							}
						  }
						  lcd_gotoxy(10,2);
    797c:	8a e0       	ldi	r24, 0x0A	; 10
    797e:	62 e0       	ldi	r22, 0x02	; 2
    7980:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
						  lcd_puts("      ");
    7984:	80 ee       	ldi	r24, 0xE0	; 224
    7986:	91 e0       	ldi	r25, 0x01	; 1
    7988:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
						  if(strcmp(ProcessDataPasswordBuf,ProcessDataPassword_Set_Buf) == 0)
    798c:	c5 01       	movw	r24, r10
    798e:	b3 01       	movw	r22, r6
    7990:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <strcmp>
    7994:	00 97       	sbiw	r24, 0x00	; 0
    7996:	b9 f5       	brne	.+110    	; 0x7a06 <Passward_Verification+0x31e>
						  {
						  	USART0_Transmit_String("congrats correct password");
    7998:	87 ee       	ldi	r24, 0xE7	; 231
    799a:	91 e0       	ldi	r25, 0x01	; 1
    799c:	0e 94 ed 02 	call	0x5da	; 0x5da <USART0_Transmit_String>
							lcd_gotoxy(10,2);
    79a0:	8a e0       	ldi	r24, 0x0A	; 10
    79a2:	62 e0       	ldi	r22, 0x02	; 2
    79a4:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
						  	lcd_puts("GRANTED");
    79a8:	81 e0       	ldi	r24, 0x01	; 1
    79aa:	92 e0       	ldi	r25, 0x02	; 2
    79ac:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
    79b0:	80 e1       	ldi	r24, 0x10	; 16
    79b2:	97 e2       	ldi	r25, 0x27	; 39
    79b4:	f6 01       	movw	r30, r12
    79b6:	31 97       	sbiw	r30, 0x01	; 1
    79b8:	f1 f7       	brne	.-4      	; 0x79b6 <Passward_Verification+0x2ce>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    79ba:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    79bc:	d9 f7       	brne	.-10     	; 0x79b4 <Passward_Verification+0x2cc>
							_delay_ms(1000);
							Process_Data_Page();
    79be:	0e 94 55 07 	call	0xeaa	; 0xeaa <Process_Data_Page>
							lcd_clrscr();
    79c2:	0e 94 25 04 	call	0x84a	; 0x84a <lcd_clrscr>
							lcd_gotoxy(0,0);
    79c6:	80 e0       	ldi	r24, 0x00	; 0
    79c8:	60 e0       	ldi	r22, 0x00	; 0
    79ca:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("   ENTER PASSWORD");
    79ce:	8c eb       	ldi	r24, 0xBC	; 188
    79d0:	91 e0       	ldi	r25, 0x01	; 1
    79d2:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(0,2);
    79d6:	80 e0       	ldi	r24, 0x00	; 0
    79d8:	62 e0       	ldi	r22, 0x02	; 2
    79da:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("Process");
    79de:	8e ec       	ldi	r24, 0xCE	; 206
    79e0:	91 e0       	ldi	r25, 0x01	; 1
    79e2:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(0,3);
    79e6:	80 e0       	ldi	r24, 0x00	; 0
    79e8:	63 e0       	ldi	r22, 0x03	; 3
    79ea:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("Calibrate");
    79ee:	86 ed       	ldi	r24, 0xD6	; 214
    79f0:	91 e0       	ldi	r25, 0x01	; 1
    79f2:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(10,2);
    79f6:	8a e0       	ldi	r24, 0x0A	; 10
    79f8:	62 e0       	ldi	r22, 0x02	; 2
    79fa:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    79fe:	8f e0       	ldi	r24, 0x0F	; 15
    7a00:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
    7a04:	07 c1       	rjmp	.+526    	; 0x7c14 <Passward_Verification+0x52c>
						  }
						  else
						  {
							lcd_gotoxy(10,2);
    7a06:	8a e0       	ldi	r24, 0x0A	; 10
    7a08:	62 e0       	ldi	r22, 0x02	; 2
    7a0a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
						  	lcd_puts("DENIED");
    7a0e:	89 e0       	ldi	r24, 0x09	; 9
    7a10:	92 e0       	ldi	r25, 0x02	; 2
    7a12:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
    7a16:	80 e1       	ldi	r24, 0x10	; 16
    7a18:	97 e2       	ldi	r25, 0x27	; 39
    7a1a:	f6 01       	movw	r30, r12
    7a1c:	31 97       	sbiw	r30, 0x01	; 1
    7a1e:	f1 f7       	brne	.-4      	; 0x7a1c <Passward_Verification+0x334>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7a20:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7a22:	d9 f7       	brne	.-10     	; 0x7a1a <Passward_Verification+0x332>
							_delay_ms(1000);
							lcd_gotoxy(10,2);
    7a24:	8a e0       	ldi	r24, 0x0A	; 10
    7a26:	62 e0       	ldi	r22, 0x02	; 2
    7a28:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
						  	lcd_puts("      ");
    7a2c:	80 ee       	ldi	r24, 0xE0	; 224
    7a2e:	91 e0       	ldi	r25, 0x01	; 1
    7a30:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
    7a34:	ef c0       	rjmp	.+478    	; 0x7c14 <Passward_Verification+0x52c>
				if(PasswordPageCursor == 2)
				{
					 
					//sprintf(buf,"%d", ProcessDataPasswordCount);
					//USART0_Transmit_String(buf);
					lcd_gotoxy(10,3);
    7a36:	8a e0       	ldi	r24, 0x0A	; 10
    7a38:	63 e0       	ldi	r22, 0x03	; 3
    7a3a:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
					lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    7a3e:	8f e0       	ldi	r24, 0x0F	; 15
    7a40:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
					if((KeyPressedStatus == 1)&&(key != 'A')&&(key!='B')&&(key != 'C')&&(key!='D')
    7a44:	80 91 52 03 	lds	r24, 0x0352
    7a48:	81 30       	cpi	r24, 0x01	; 1
    7a4a:	09 f0       	breq	.+2      	; 0x7a4e <Passward_Verification+0x366>
    7a4c:	e2 c0       	rjmp	.+452    	; 0x7c12 <Passward_Verification+0x52a>
    7a4e:	80 91 68 03 	lds	r24, 0x0368
    7a52:	90 91 69 03 	lds	r25, 0x0369
    7a56:	81 34       	cpi	r24, 0x41	; 65
    7a58:	91 05       	cpc	r25, r1
    7a5a:	09 f4       	brne	.+2      	; 0x7a5e <Passward_Verification+0x376>
    7a5c:	da c0       	rjmp	.+436    	; 0x7c12 <Passward_Verification+0x52a>
    7a5e:	82 34       	cpi	r24, 0x42	; 66
    7a60:	91 05       	cpc	r25, r1
    7a62:	09 f4       	brne	.+2      	; 0x7a66 <Passward_Verification+0x37e>
    7a64:	d6 c0       	rjmp	.+428    	; 0x7c12 <Passward_Verification+0x52a>
    7a66:	83 34       	cpi	r24, 0x43	; 67
    7a68:	91 05       	cpc	r25, r1
    7a6a:	09 f4       	brne	.+2      	; 0x7a6e <Passward_Verification+0x386>
    7a6c:	d2 c0       	rjmp	.+420    	; 0x7c12 <Passward_Verification+0x52a>
    7a6e:	84 34       	cpi	r24, 0x44	; 68
    7a70:	91 05       	cpc	r25, r1
    7a72:	09 f4       	brne	.+2      	; 0x7a76 <Passward_Verification+0x38e>
    7a74:	ce c0       	rjmp	.+412    	; 0x7c12 <Passward_Verification+0x52a>
    7a76:	83 32       	cpi	r24, 0x23	; 35
    7a78:	91 05       	cpc	r25, r1
    7a7a:	09 f4       	brne	.+2      	; 0x7a7e <Passward_Verification+0x396>
    7a7c:	ca c0       	rjmp	.+404    	; 0x7c12 <Passward_Verification+0x52a>
    7a7e:	8a 32       	cpi	r24, 0x2A	; 42
    7a80:	91 05       	cpc	r25, r1
    7a82:	09 f4       	brne	.+2      	; 0x7a86 <Passward_Verification+0x39e>
    7a84:	c6 c0       	rjmp	.+396    	; 0x7c12 <Passward_Verification+0x52a>
						&&(key!='#')&&(key!='*'))
					{
						  CalibrateDataPasswordBuf[CalibrateDataPasswordCount] = key;
    7a86:	89 8b       	std	Y+17, r24	; 0x11
    7a88:	06 c0       	rjmp	.+12     	; 0x7a96 <Passward_Verification+0x3ae>
						  while(KeyPressedStatus == 1)	
						  {
							key = GetKeyPressed();
    7a8a:	0e 94 a1 04 	call	0x942	; 0x942 <GetKeyPressed>
    7a8e:	90 93 69 03 	sts	0x0369, r25
    7a92:	80 93 68 03 	sts	0x0368, r24
					lcd_command(LCD_DISP_ON_CURSOR_BLINK);
					if((KeyPressedStatus == 1)&&(key != 'A')&&(key!='B')&&(key != 'C')&&(key!='D')
						&&(key!='#')&&(key!='*'))
					{
						  CalibrateDataPasswordBuf[CalibrateDataPasswordCount] = key;
						  while(KeyPressedStatus == 1)	
    7a96:	80 91 52 03 	lds	r24, 0x0352
    7a9a:	81 30       	cpi	r24, 0x01	; 1
    7a9c:	b1 f3       	breq	.-20     	; 0x7a8a <Passward_Verification+0x3a2>
							key = GetKeyPressed();
						  }
						  
						  
						  CalibrateDataPasswordCount++;
						  lcd_gotoxy((CalibrateDataPasswordCount+9),3);
    7a9e:	8a e0       	ldi	r24, 0x0A	; 10
    7aa0:	63 e0       	ldi	r22, 0x03	; 3
    7aa2:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
						  lcd_putc('*');
    7aa6:	8a e2       	ldi	r24, 0x2A	; 42
    7aa8:	0e 94 2d 04 	call	0x85a	; 0x85a <lcd_putc>
						  lcd_gotoxy((CalibrateDataPasswordCount+10),3);
    7aac:	8b e0       	ldi	r24, 0x0B	; 11
    7aae:	63 e0       	ldi	r22, 0x03	; 3
    7ab0:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
						  lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    7ab4:	8f e0       	ldi	r24, 0x0F	; 15
    7ab6:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
						 // sprintf(buf,"%d", CalibrateDataPasswordCount);
						 // USART0_Transmit_String(buf);
						  USART0_Transmit_String(CalibrateDataPasswordBuf);
    7aba:	c4 01       	movw	r24, r8
    7abc:	0e 94 ed 02 	call	0x5da	; 0x5da <USART0_Transmit_String>
						  USART0_Transmit_String(CalibrateDataPassword_Set_Buf);
    7ac0:	c2 01       	movw	r24, r4
    7ac2:	0e 94 ed 02 	call	0x5da	; 0x5da <USART0_Transmit_String>
    7ac6:	11 e0       	ldi	r17, 0x01	; 1
    7ac8:	e1 2e       	mov	r14, r17
    7aca:	f1 2c       	mov	r15, r1
						  while(CalibrateDataPasswordCount < 4)
						  {
						  //CalibrateDataPasswordBuf[CalibrateDataPasswordCount] = key;
						  //sprintf(buf,"%d", CalibrateDataPasswordCount);
						  //USART0_Transmit_String(buf);
						  USART0_Transmit_String(CalibrateDataPasswordBuf);
    7acc:	c4 01       	movw	r24, r8
    7ace:	0e 94 ed 02 	call	0x5da	; 0x5da <USART0_Transmit_String>
						   
						  key = GetKeyPressed();
    7ad2:	0e 94 a1 04 	call	0x942	; 0x942 <GetKeyPressed>
    7ad6:	9c 01       	movw	r18, r24
    7ad8:	90 93 69 03 	sts	0x0369, r25
    7adc:	80 93 68 03 	sts	0x0368, r24
							if((KeyPressedStatus == 1)&&(key != 'A')&&(key!='B')&&(key != 'C')&&(key!='D')
    7ae0:	80 91 52 03 	lds	r24, 0x0352
    7ae4:	81 30       	cpi	r24, 0x01	; 1
    7ae6:	91 f7       	brne	.-28     	; 0x7acc <Passward_Verification+0x3e4>
    7ae8:	21 34       	cpi	r18, 0x41	; 65
    7aea:	31 05       	cpc	r19, r1
    7aec:	89 f1       	breq	.+98     	; 0x7b50 <Passward_Verification+0x468>
    7aee:	22 34       	cpi	r18, 0x42	; 66
    7af0:	31 05       	cpc	r19, r1
    7af2:	71 f1       	breq	.+92     	; 0x7b50 <Passward_Verification+0x468>
    7af4:	23 34       	cpi	r18, 0x43	; 67
    7af6:	31 05       	cpc	r19, r1
    7af8:	59 f1       	breq	.+86     	; 0x7b50 <Passward_Verification+0x468>
    7afa:	24 34       	cpi	r18, 0x44	; 68
    7afc:	31 05       	cpc	r19, r1
    7afe:	41 f1       	breq	.+80     	; 0x7b50 <Passward_Verification+0x468>
    7b00:	23 32       	cpi	r18, 0x23	; 35
    7b02:	31 05       	cpc	r19, r1
    7b04:	29 f1       	breq	.+74     	; 0x7b50 <Passward_Verification+0x468>
    7b06:	2a 32       	cpi	r18, 0x2A	; 42
    7b08:	31 05       	cpc	r19, r1
    7b0a:	11 f1       	breq	.+68     	; 0x7b50 <Passward_Verification+0x468>
								&&(key!='#')&&(key!='*'))
							{
								CalibrateDataPasswordBuf[CalibrateDataPasswordCount] = key;
    7b0c:	f4 01       	movw	r30, r8
    7b0e:	ee 0d       	add	r30, r14
    7b10:	ff 1d       	adc	r31, r15
    7b12:	20 83       	st	Z, r18
    7b14:	06 c0       	rjmp	.+12     	; 0x7b22 <Passward_Verification+0x43a>
								while(KeyPressedStatus == 1)	
							  	{
									key = GetKeyPressed();
    7b16:	0e 94 a1 04 	call	0x942	; 0x942 <GetKeyPressed>
    7b1a:	90 93 69 03 	sts	0x0369, r25
    7b1e:	80 93 68 03 	sts	0x0368, r24
						  key = GetKeyPressed();
							if((KeyPressedStatus == 1)&&(key != 'A')&&(key!='B')&&(key != 'C')&&(key!='D')
								&&(key!='#')&&(key!='*'))
							{
								CalibrateDataPasswordBuf[CalibrateDataPasswordCount] = key;
								while(KeyPressedStatus == 1)	
    7b22:	80 91 52 03 	lds	r24, 0x0352
    7b26:	81 30       	cpi	r24, 0x01	; 1
    7b28:	b1 f3       	breq	.-20     	; 0x7b16 <Passward_Verification+0x42e>
							  	{
									key = GetKeyPressed();
							  	}
								CalibrateDataPasswordCount++;
    7b2a:	08 94       	sec
    7b2c:	e1 1c       	adc	r14, r1
    7b2e:	f1 1c       	adc	r15, r1
								lcd_gotoxy((CalibrateDataPasswordCount+9),3);
    7b30:	8e 2d       	mov	r24, r14
    7b32:	87 5f       	subi	r24, 0xF7	; 247
    7b34:	63 e0       	ldi	r22, 0x03	; 3
    7b36:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
						  		lcd_putc('*');
    7b3a:	8a e2       	ldi	r24, 0x2A	; 42
    7b3c:	0e 94 2d 04 	call	0x85a	; 0x85a <lcd_putc>
								lcd_gotoxy((CalibrateDataPasswordCount+10),3);
    7b40:	8e 2d       	mov	r24, r14
    7b42:	86 5f       	subi	r24, 0xF6	; 246
    7b44:	63 e0       	ldi	r22, 0x03	; 3
    7b46:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
						  		lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    7b4a:	8f e0       	ldi	r24, 0x0F	; 15
    7b4c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
						  lcd_command(LCD_DISP_ON_CURSOR_BLINK);
						 // sprintf(buf,"%d", CalibrateDataPasswordCount);
						 // USART0_Transmit_String(buf);
						  USART0_Transmit_String(CalibrateDataPasswordBuf);
						  USART0_Transmit_String(CalibrateDataPassword_Set_Buf);
						  while(CalibrateDataPasswordCount < 4)
    7b50:	84 e0       	ldi	r24, 0x04	; 4
    7b52:	e8 16       	cp	r14, r24
    7b54:	f1 04       	cpc	r15, r1
    7b56:	0c f4       	brge	.+2      	; 0x7b5a <Passward_Verification+0x472>
    7b58:	b9 cf       	rjmp	.-142    	; 0x7acc <Passward_Verification+0x3e4>
								lcd_gotoxy((CalibrateDataPasswordCount+10),3);
						  		lcd_command(LCD_DISP_ON_CURSOR_BLINK);
								
							}
						  }
						  lcd_gotoxy(10,3);
    7b5a:	8a e0       	ldi	r24, 0x0A	; 10
    7b5c:	63 e0       	ldi	r22, 0x03	; 3
    7b5e:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
						  lcd_puts("      ");
    7b62:	80 ee       	ldi	r24, 0xE0	; 224
    7b64:	91 e0       	ldi	r25, 0x01	; 1
    7b66:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
						  if(strcmp(CalibrateDataPasswordBuf,CalibrateDataPassword_Set_Buf) == 0)
    7b6a:	c4 01       	movw	r24, r8
    7b6c:	b2 01       	movw	r22, r4
    7b6e:	0e 94 7a 49 	call	0x92f4	; 0x92f4 <strcmp>
    7b72:	00 97       	sbiw	r24, 0x00	; 0
    7b74:	b9 f5       	brne	.+110    	; 0x7be4 <Passward_Verification+0x4fc>
						  {
						  	USART0_Transmit_String("congrats correct password");
    7b76:	87 ee       	ldi	r24, 0xE7	; 231
    7b78:	91 e0       	ldi	r25, 0x01	; 1
    7b7a:	0e 94 ed 02 	call	0x5da	; 0x5da <USART0_Transmit_String>
							lcd_gotoxy(10,3);
    7b7e:	8a e0       	ldi	r24, 0x0A	; 10
    7b80:	63 e0       	ldi	r22, 0x03	; 3
    7b82:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
						  	lcd_puts("GRANTED");
    7b86:	81 e0       	ldi	r24, 0x01	; 1
    7b88:	92 e0       	ldi	r25, 0x02	; 2
    7b8a:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
    7b8e:	80 e1       	ldi	r24, 0x10	; 16
    7b90:	97 e2       	ldi	r25, 0x27	; 39
    7b92:	f6 01       	movw	r30, r12
    7b94:	31 97       	sbiw	r30, 0x01	; 1
    7b96:	f1 f7       	brne	.-4      	; 0x7b94 <Passward_Verification+0x4ac>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7b98:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7b9a:	d9 f7       	brne	.-10     	; 0x7b92 <Passward_Verification+0x4aa>
							_delay_ms(1000);
							Calibrate_Data_Page();
    7b9c:	0e 94 c9 26 	call	0x4d92	; 0x4d92 <Calibrate_Data_Page>
							lcd_clrscr();
    7ba0:	0e 94 25 04 	call	0x84a	; 0x84a <lcd_clrscr>
							lcd_gotoxy(0,0);
    7ba4:	80 e0       	ldi	r24, 0x00	; 0
    7ba6:	60 e0       	ldi	r22, 0x00	; 0
    7ba8:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("   ENTER PASSWORD");
    7bac:	8c eb       	ldi	r24, 0xBC	; 188
    7bae:	91 e0       	ldi	r25, 0x01	; 1
    7bb0:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(0,2);
    7bb4:	80 e0       	ldi	r24, 0x00	; 0
    7bb6:	62 e0       	ldi	r22, 0x02	; 2
    7bb8:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("Process");
    7bbc:	8e ec       	ldi	r24, 0xCE	; 206
    7bbe:	91 e0       	ldi	r25, 0x01	; 1
    7bc0:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(0,3);
    7bc4:	80 e0       	ldi	r24, 0x00	; 0
    7bc6:	63 e0       	ldi	r22, 0x03	; 3
    7bc8:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_puts("Calibrate");
    7bcc:	86 ed       	ldi	r24, 0xD6	; 214
    7bce:	91 e0       	ldi	r25, 0x01	; 1
    7bd0:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
							lcd_gotoxy(10,3);
    7bd4:	8a e0       	ldi	r24, 0x0A	; 10
    7bd6:	63 e0       	ldi	r22, 0x03	; 3
    7bd8:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
							lcd_command(LCD_DISP_ON_CURSOR_BLINK);
    7bdc:	8f e0       	ldi	r24, 0x0F	; 15
    7bde:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
    7be2:	17 c0       	rjmp	.+46     	; 0x7c12 <Passward_Verification+0x52a>
						  }
						  else
						  {
							lcd_gotoxy(10,3);
    7be4:	8a e0       	ldi	r24, 0x0A	; 10
    7be6:	63 e0       	ldi	r22, 0x03	; 3
    7be8:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
						  	lcd_puts("DENIED");
    7bec:	89 e0       	ldi	r24, 0x09	; 9
    7bee:	92 e0       	ldi	r25, 0x02	; 2
    7bf0:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
    7bf4:	80 e1       	ldi	r24, 0x10	; 16
    7bf6:	97 e2       	ldi	r25, 0x27	; 39
    7bf8:	f6 01       	movw	r30, r12
    7bfa:	31 97       	sbiw	r30, 0x01	; 1
    7bfc:	f1 f7       	brne	.-4      	; 0x7bfa <Passward_Verification+0x512>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    7bfe:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    7c00:	d9 f7       	brne	.-10     	; 0x7bf8 <Passward_Verification+0x510>
							_delay_ms(1000);
							lcd_gotoxy(10,3);
    7c02:	8a e0       	ldi	r24, 0x0A	; 10
    7c04:	63 e0       	ldi	r22, 0x03	; 3
    7c06:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
						  	lcd_puts("      ");
    7c0a:	80 ee       	ldi	r24, 0xE0	; 224
    7c0c:	91 e0       	ldi	r25, 0x01	; 1
    7c0e:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
    7c12:	02 e0       	ldi	r16, 0x02	; 2
						  CalibrateDataPasswordCount = 0;
					}
					
						
				}
				if(key == '*')
    7c14:	80 91 68 03 	lds	r24, 0x0368
    7c18:	90 91 69 03 	lds	r25, 0x0369
    7c1c:	8a 97       	sbiw	r24, 0x2a	; 42
    7c1e:	09 f0       	breq	.+2      	; 0x7c22 <Passward_Verification+0x53a>
    7c20:	f4 cd       	rjmp	.-1048   	; 0x780a <Passward_Verification+0x122>




			}
			lcd_command(LCD_DISP_ON);
    7c22:	8c e0       	ldi	r24, 0x0C	; 12
    7c24:	0e 94 fd 03 	call	0x7fa	; 0x7fa <lcd_command>
			lcd_clrscr();
    7c28:	0e 94 25 04 	call	0x84a	; 0x84a <lcd_clrscr>
		   
				 
}
    7c2c:	a0 96       	adiw	r28, 0x20	; 32
    7c2e:	0f b6       	in	r0, 0x3f	; 63
    7c30:	f8 94       	cli
    7c32:	de bf       	out	0x3e, r29	; 62
    7c34:	0f be       	out	0x3f, r0	; 63
    7c36:	cd bf       	out	0x3d, r28	; 61
    7c38:	cf 91       	pop	r28
    7c3a:	df 91       	pop	r29
    7c3c:	1f 91       	pop	r17
    7c3e:	0f 91       	pop	r16
    7c40:	ff 90       	pop	r15
    7c42:	ef 90       	pop	r14
    7c44:	df 90       	pop	r13
    7c46:	cf 90       	pop	r12
    7c48:	bf 90       	pop	r11
    7c4a:	af 90       	pop	r10
    7c4c:	9f 90       	pop	r9
    7c4e:	8f 90       	pop	r8
    7c50:	7f 90       	pop	r7
    7c52:	6f 90       	pop	r6
    7c54:	5f 90       	pop	r5
    7c56:	4f 90       	pop	r4
    7c58:	08 95       	ret

00007c5a <PageOne>:
#include "HX711.h" 
#include "ControllerModule.h"


void PageOne(void)
{
    7c5a:	4f 92       	push	r4
    7c5c:	5f 92       	push	r5
    7c5e:	6f 92       	push	r6
    7c60:	7f 92       	push	r7
    7c62:	8f 92       	push	r8
    7c64:	9f 92       	push	r9
    7c66:	af 92       	push	r10
    7c68:	bf 92       	push	r11
    7c6a:	cf 92       	push	r12
    7c6c:	df 92       	push	r13
    7c6e:	ef 92       	push	r14
    7c70:	ff 92       	push	r15
    7c72:	0f 93       	push	r16
    7c74:	1f 93       	push	r17
    7c76:	df 93       	push	r29
    7c78:	cf 93       	push	r28
    7c7a:	cd b7       	in	r28, 0x3d	; 61
    7c7c:	de b7       	in	r29, 0x3e	; 62
    7c7e:	e2 97       	sbiw	r28, 0x32	; 50
    7c80:	0f b6       	in	r0, 0x3f	; 63
    7c82:	f8 94       	cli
    7c84:	de bf       	out	0x3e, r29	; 62
    7c86:	0f be       	out	0x3f, r0	; 63
    7c88:	cd bf       	out	0x3d, r28	; 61
static int Weightlength,B_Loadlength,F_Ratelength,Frate_Totalizerlength;
static int Weighttemplength,B_Loadtemplength,F_Ratetemplength,Frate_Totalizertemplength;
char Weight_Buf[10],B_Load_Buf[10],Speed_Buf[10],F_Rate_Buf[10],Frate_Totalizer_Buf[10];


	    key = GetKeyPressed();
    7c8a:	0e 94 a1 04 	call	0x942	; 0x942 <GetKeyPressed>
    7c8e:	90 93 69 03 	sts	0x0369, r25
    7c92:	80 93 68 03 	sts	0x0368, r24
		sprintf(buf,"%c", key);
    7c96:	00 d0       	rcall	.+0      	; 0x7c98 <PageOne+0x3e>
    7c98:	00 d0       	rcall	.+0      	; 0x7c9a <PageOne+0x40>
    7c9a:	00 d0       	rcall	.+0      	; 0x7c9c <PageOne+0x42>
    7c9c:	ed b7       	in	r30, 0x3d	; 61
    7c9e:	fe b7       	in	r31, 0x3e	; 62
    7ca0:	31 96       	adiw	r30, 0x01	; 1
    7ca2:	02 ef       	ldi	r16, 0xF2	; 242
    7ca4:	12 e0       	ldi	r17, 0x02	; 2
    7ca6:	ad b7       	in	r26, 0x3d	; 61
    7ca8:	be b7       	in	r27, 0x3e	; 62
    7caa:	12 96       	adiw	r26, 0x02	; 2
    7cac:	1c 93       	st	X, r17
    7cae:	0e 93       	st	-X, r16
    7cb0:	11 97       	sbiw	r26, 0x01	; 1
    7cb2:	2f e7       	ldi	r18, 0x7F	; 127
    7cb4:	31 e0       	ldi	r19, 0x01	; 1
    7cb6:	33 83       	std	Z+3, r19	; 0x03
    7cb8:	22 83       	std	Z+2, r18	; 0x02
    7cba:	95 83       	std	Z+5, r25	; 0x05
    7cbc:	84 83       	std	Z+4, r24	; 0x04
    7cbe:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
		USART0_Transmit_String(buf);
    7cc2:	8d b7       	in	r24, 0x3d	; 61
    7cc4:	9e b7       	in	r25, 0x3e	; 62
    7cc6:	06 96       	adiw	r24, 0x06	; 6
    7cc8:	0f b6       	in	r0, 0x3f	; 63
    7cca:	f8 94       	cli
    7ccc:	9e bf       	out	0x3e, r25	; 62
    7cce:	0f be       	out	0x3f, r0	; 63
    7cd0:	8d bf       	out	0x3d, r24	; 61
    7cd2:	c8 01       	movw	r24, r16
    7cd4:	0e 94 ed 02 	call	0x5da	; 0x5da <USART0_Transmit_String>
	
    	//HX711_tare(10);
    	//Count_ChannelA = HX711_read();
		if(Time_counter >= 10)	
    7cd8:	80 91 c1 02 	lds	r24, 0x02C1
    7cdc:	90 91 c2 02 	lds	r25, 0x02C2
    7ce0:	0a 97       	sbiw	r24, 0x0a	; 10
    7ce2:	70 f0       	brcs	.+28     	; 0x7d00 <PageOne+0xa6>
		{
		 
			Count_ChannelA = HX711_read();
    7ce4:	0e 94 ea 41 	call	0x83d4	; 0x83d4 <HX711_read>
    7ce8:	60 93 5f 03 	sts	0x035F, r22
    7cec:	70 93 60 03 	sts	0x0360, r23
    7cf0:	80 93 61 03 	sts	0x0361, r24
    7cf4:	90 93 62 03 	sts	0x0362, r25
			//Count_ChannelA = 985;
		 	//sprintf(buf,"%d",Count_ChannelA);
			//ISR_USART0_Transmit_String(buf); 
			Time_counter = 0;
    7cf8:	10 92 c2 02 	sts	0x02C2, r1
    7cfc:	10 92 c1 02 	sts	0x02C1, r1
		}
	    
		
		lcd_gotoxy(0,0);
    7d00:	80 e0       	ldi	r24, 0x00	; 0
    7d02:	60 e0       	ldi	r22, 0x00	; 0
    7d04:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
 		lcd_puts("Weight");
    7d08:	80 e2       	ldi	r24, 0x20	; 32
    7d0a:	92 e0       	ldi	r25, 0x02	; 2
    7d0c:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
		lcd_gotoxy(0,1);
    7d10:	80 e0       	ldi	r24, 0x00	; 0
    7d12:	61 e0       	ldi	r22, 0x01	; 1
    7d14:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
 		lcd_puts("B Load");
    7d18:	87 e2       	ldi	r24, 0x27	; 39
    7d1a:	92 e0       	ldi	r25, 0x02	; 2
    7d1c:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
		lcd_gotoxy(18,1);
    7d20:	82 e1       	ldi	r24, 0x12	; 18
    7d22:	61 e0       	ldi	r22, 0x01	; 1
    7d24:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
 		lcd_puts("");
    7d28:	8e e2       	ldi	r24, 0x2E	; 46
    7d2a:	92 e0       	ldi	r25, 0x02	; 2
    7d2c:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
		lcd_gotoxy(0,2);
    7d30:	80 e0       	ldi	r24, 0x00	; 0
    7d32:	62 e0       	ldi	r22, 0x02	; 2
    7d34:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
 		lcd_puts("Speed");
    7d38:	87 e9       	ldi	r24, 0x97	; 151
    7d3a:	91 e0       	ldi	r25, 0x01	; 1
    7d3c:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
		lcd_gotoxy(18,2);
    7d40:	82 e1       	ldi	r24, 0x12	; 18
    7d42:	62 e0       	ldi	r22, 0x02	; 2
    7d44:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
 		lcd_puts("");
    7d48:	8e e2       	ldi	r24, 0x2E	; 46
    7d4a:	92 e0       	ldi	r25, 0x02	; 2
    7d4c:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
		lcd_gotoxy(0,3);
    7d50:	80 e0       	ldi	r24, 0x00	; 0
    7d52:	63 e0       	ldi	r22, 0x03	; 3
    7d54:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
 		lcd_puts("F Rate");
    7d58:	8f e2       	ldi	r24, 0x2F	; 47
    7d5a:	92 e0       	ldi	r25, 0x02	; 2
    7d5c:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
		lcd_gotoxy(18,3);
    7d60:	82 e1       	ldi	r24, 0x12	; 18
    7d62:	63 e0       	ldi	r22, 0x03	; 3
    7d64:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
 		lcd_puts("");
    7d68:	8e e2       	ldi	r24, 0x2E	; 46
    7d6a:	92 e0       	ldi	r25, 0x02	; 2
    7d6c:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
		lcd_gotoxy(16,0);
    7d70:	80 e1       	ldi	r24, 0x10	; 16
    7d72:	60 e0       	ldi	r22, 0x00	; 0
    7d74:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
 		lcd_puts("Kg");
    7d78:	86 e3       	ldi	r24, 0x36	; 54
    7d7a:	92 e0       	ldi	r25, 0x02	; 2
    7d7c:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
		lcd_gotoxy(16,1);
    7d80:	80 e1       	ldi	r24, 0x10	; 16
    7d82:	61 e0       	ldi	r22, 0x01	; 1
    7d84:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
 		lcd_puts("Kg/m");
    7d88:	89 e3       	ldi	r24, 0x39	; 57
    7d8a:	92 e0       	ldi	r25, 0x02	; 2
    7d8c:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
		lcd_gotoxy(16,2);
    7d90:	80 e1       	ldi	r24, 0x10	; 16
    7d92:	62 e0       	ldi	r22, 0x02	; 2
    7d94:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
 		lcd_puts("m/s");
    7d98:	8e e3       	ldi	r24, 0x3E	; 62
    7d9a:	92 e0       	ldi	r25, 0x02	; 2
    7d9c:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
		lcd_gotoxy(16,3);
    7da0:	80 e1       	ldi	r24, 0x10	; 16
    7da2:	63 e0       	ldi	r22, 0x03	; 3
    7da4:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
 		lcd_puts("TPH");
    7da8:	82 e4       	ldi	r24, 0x42	; 66
    7daa:	92 e0       	ldi	r25, 0x02	; 2
    7dac:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>

		weight = ((float)Count_ChannelA -8388656.0)/67.0; 
    7db0:	60 91 5f 03 	lds	r22, 0x035F
    7db4:	70 91 60 03 	lds	r23, 0x0360
    7db8:	80 91 61 03 	lds	r24, 0x0361
    7dbc:	90 91 62 03 	lds	r25, 0x0362
    7dc0:	0e 94 a8 43 	call	0x8750	; 0x8750 <__floatunsisf>
    7dc4:	20 e3       	ldi	r18, 0x30	; 48
    7dc6:	30 e0       	ldi	r19, 0x00	; 0
    7dc8:	40 e0       	ldi	r20, 0x00	; 0
    7dca:	5b e4       	ldi	r21, 0x4B	; 75
    7dcc:	0e 94 db 42 	call	0x85b6	; 0x85b6 <__subsf3>
    7dd0:	20 e0       	ldi	r18, 0x00	; 0
    7dd2:	30 e0       	ldi	r19, 0x00	; 0
    7dd4:	46 e8       	ldi	r20, 0x86	; 134
    7dd6:	52 e4       	ldi	r21, 0x42	; 66
    7dd8:	0e 94 40 43 	call	0x8680	; 0x8680 <__divsf3>
    7ddc:	60 93 57 03 	sts	0x0357, r22
    7de0:	70 93 58 03 	sts	0x0358, r23
    7de4:	80 93 59 03 	sts	0x0359, r24
    7de8:	90 93 5a 03 	sts	0x035A, r25
		B_Load = (weight/W_Span);
    7dec:	20 91 9b 02 	lds	r18, 0x029B
    7df0:	30 91 9c 02 	lds	r19, 0x029C
    7df4:	40 91 9d 02 	lds	r20, 0x029D
    7df8:	50 91 9e 02 	lds	r21, 0x029E
    7dfc:	0e 94 40 43 	call	0x8680	; 0x8680 <__divsf3>
    7e00:	60 93 86 02 	sts	0x0286, r22
    7e04:	70 93 87 02 	sts	0x0287, r23
    7e08:	80 93 88 02 	sts	0x0288, r24
    7e0c:	90 93 89 02 	sts	0x0289, r25
		F_Rate = (B_Load*Speed*3.6*C_Factor);
    7e10:	20 91 7e 02 	lds	r18, 0x027E
    7e14:	30 91 7f 02 	lds	r19, 0x027F
    7e18:	40 91 80 02 	lds	r20, 0x0280
    7e1c:	50 91 81 02 	lds	r21, 0x0281
    7e20:	e0 90 ea 02 	lds	r14, 0x02EA
    7e24:	f0 90 eb 02 	lds	r15, 0x02EB
    7e28:	00 91 ec 02 	lds	r16, 0x02EC
    7e2c:	10 91 ed 02 	lds	r17, 0x02ED
    7e30:	0e 94 3a 44 	call	0x8874	; 0x8874 <__mulsf3>
    7e34:	26 e6       	ldi	r18, 0x66	; 102
    7e36:	36 e6       	ldi	r19, 0x66	; 102
    7e38:	46 e6       	ldi	r20, 0x66	; 102
    7e3a:	50 e4       	ldi	r21, 0x40	; 64
    7e3c:	0e 94 3a 44 	call	0x8874	; 0x8874 <__mulsf3>
    7e40:	a8 01       	movw	r20, r16
    7e42:	97 01       	movw	r18, r14
    7e44:	0e 94 3a 44 	call	0x8874	; 0x8874 <__mulsf3>
    7e48:	60 93 b5 02 	sts	0x02B5, r22
    7e4c:	70 93 b6 02 	sts	0x02B6, r23
    7e50:	80 93 b7 02 	sts	0x02B7, r24
    7e54:	90 93 b8 02 	sts	0x02B8, r25
		//sprintf(buf,"%lu", Count_ChannelA);
		//USART0_Transmit_String(buf);
	//	sprintf(Weight_Buf,"%.3f", weight);
	//	USART0_Transmit_String(buf);
		USART0_Transmit_Char(13);
    7e58:	8d e0       	ldi	r24, 0x0D	; 13
    7e5a:	0e 94 21 01 	call	0x242	; 0x242 <USART0_Transmit_Char>
		

		sprintf(Weight_Buf,"%08.2f", weight);		
    7e5e:	ad b7       	in	r26, 0x3d	; 61
    7e60:	be b7       	in	r27, 0x3e	; 62
    7e62:	18 97       	sbiw	r26, 0x08	; 8
    7e64:	0f b6       	in	r0, 0x3f	; 63
    7e66:	f8 94       	cli
    7e68:	be bf       	out	0x3e, r27	; 62
    7e6a:	0f be       	out	0x3f, r0	; 63
    7e6c:	ad bf       	out	0x3d, r26	; 61
    7e6e:	ed b7       	in	r30, 0x3d	; 61
    7e70:	fe b7       	in	r31, 0x3e	; 62
    7e72:	31 96       	adiw	r30, 0x01	; 1
    7e74:	6e 01       	movw	r12, r28
    7e76:	08 94       	sec
    7e78:	c1 1c       	adc	r12, r1
    7e7a:	d1 1c       	adc	r13, r1
    7e7c:	12 96       	adiw	r26, 0x02	; 2
    7e7e:	dc 92       	st	X, r13
    7e80:	ce 92       	st	-X, r12
    7e82:	11 97       	sbiw	r26, 0x01	; 1
    7e84:	a6 e4       	ldi	r26, 0x46	; 70
    7e86:	ea 2e       	mov	r14, r26
    7e88:	a2 e0       	ldi	r26, 0x02	; 2
    7e8a:	fa 2e       	mov	r15, r26
    7e8c:	f3 82       	std	Z+3, r15	; 0x03
    7e8e:	e2 82       	std	Z+2, r14	; 0x02
    7e90:	80 91 57 03 	lds	r24, 0x0357
    7e94:	90 91 58 03 	lds	r25, 0x0358
    7e98:	a0 91 59 03 	lds	r26, 0x0359
    7e9c:	b0 91 5a 03 	lds	r27, 0x035A
    7ea0:	84 83       	std	Z+4, r24	; 0x04
    7ea2:	95 83       	std	Z+5, r25	; 0x05
    7ea4:	a6 83       	std	Z+6, r26	; 0x06
    7ea6:	b7 83       	std	Z+7, r27	; 0x07
    7ea8:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
		Weightlength = strlen(Weight_Buf);
    7eac:	f6 01       	movw	r30, r12
    7eae:	01 90       	ld	r0, Z+
    7eb0:	00 20       	and	r0, r0
    7eb2:	e9 f7       	brne	.-6      	; 0x7eae <PageOne+0x254>
    7eb4:	31 97       	sbiw	r30, 0x01	; 1
    7eb6:	ec 19       	sub	r30, r12
    7eb8:	fd 09       	sbc	r31, r13
    7eba:	f0 93 7b 02 	sts	0x027B, r31
    7ebe:	e0 93 7a 02 	sts	0x027A, r30
			
		sprintf(B_Load_Buf,"%08.2f", B_Load);		
    7ec2:	ed b7       	in	r30, 0x3d	; 61
    7ec4:	fe b7       	in	r31, 0x3e	; 62
    7ec6:	31 96       	adiw	r30, 0x01	; 1
    7ec8:	8e 01       	movw	r16, r28
    7eca:	05 5f       	subi	r16, 0xF5	; 245
    7ecc:	1f 4f       	sbci	r17, 0xFF	; 255
    7ece:	ad b7       	in	r26, 0x3d	; 61
    7ed0:	be b7       	in	r27, 0x3e	; 62
    7ed2:	12 96       	adiw	r26, 0x02	; 2
    7ed4:	1c 93       	st	X, r17
    7ed6:	0e 93       	st	-X, r16
    7ed8:	11 97       	sbiw	r26, 0x01	; 1
    7eda:	f3 82       	std	Z+3, r15	; 0x03
    7edc:	e2 82       	std	Z+2, r14	; 0x02
    7ede:	80 91 86 02 	lds	r24, 0x0286
    7ee2:	90 91 87 02 	lds	r25, 0x0287
    7ee6:	a0 91 88 02 	lds	r26, 0x0288
    7eea:	b0 91 89 02 	lds	r27, 0x0289
    7eee:	84 83       	std	Z+4, r24	; 0x04
    7ef0:	95 83       	std	Z+5, r25	; 0x05
    7ef2:	a6 83       	std	Z+6, r26	; 0x06
    7ef4:	b7 83       	std	Z+7, r27	; 0x07
    7ef6:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
		B_Loadlength = strlen(B_Load_Buf);
    7efa:	f8 01       	movw	r30, r16
    7efc:	01 90       	ld	r0, Z+
    7efe:	00 20       	and	r0, r0
    7f00:	e9 f7       	brne	.-6      	; 0x7efc <PageOne+0x2a2>
    7f02:	31 97       	sbiw	r30, 0x01	; 1
    7f04:	e0 1b       	sub	r30, r16
    7f06:	f1 0b       	sbc	r31, r17
    7f08:	f0 93 79 02 	sts	0x0279, r31
    7f0c:	e0 93 78 02 	sts	0x0278, r30
		sprintf(F_Rate_Buf,"%08.2f", F_Rate);		
    7f10:	ed b7       	in	r30, 0x3d	; 61
    7f12:	fe b7       	in	r31, 0x3e	; 62
    7f14:	31 96       	adiw	r30, 0x01	; 1
    7f16:	8e 01       	movw	r16, r28
    7f18:	01 5e       	subi	r16, 0xE1	; 225
    7f1a:	1f 4f       	sbci	r17, 0xFF	; 255
    7f1c:	ad b7       	in	r26, 0x3d	; 61
    7f1e:	be b7       	in	r27, 0x3e	; 62
    7f20:	12 96       	adiw	r26, 0x02	; 2
    7f22:	1c 93       	st	X, r17
    7f24:	0e 93       	st	-X, r16
    7f26:	11 97       	sbiw	r26, 0x01	; 1
    7f28:	f3 82       	std	Z+3, r15	; 0x03
    7f2a:	e2 82       	std	Z+2, r14	; 0x02
    7f2c:	80 91 b5 02 	lds	r24, 0x02B5
    7f30:	90 91 b6 02 	lds	r25, 0x02B6
    7f34:	a0 91 b7 02 	lds	r26, 0x02B7
    7f38:	b0 91 b8 02 	lds	r27, 0x02B8
    7f3c:	84 83       	std	Z+4, r24	; 0x04
    7f3e:	95 83       	std	Z+5, r25	; 0x05
    7f40:	a6 83       	std	Z+6, r26	; 0x06
    7f42:	b7 83       	std	Z+7, r27	; 0x07
    7f44:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
		F_Ratelength = strlen(F_Rate_Buf);
    7f48:	f8 01       	movw	r30, r16
    7f4a:	01 90       	ld	r0, Z+
    7f4c:	00 20       	and	r0, r0
    7f4e:	e9 f7       	brne	.-6      	; 0x7f4a <PageOne+0x2f0>
    7f50:	31 97       	sbiw	r30, 0x01	; 1
    7f52:	e0 1b       	sub	r30, r16
    7f54:	f1 0b       	sbc	r31, r17
    7f56:	f0 93 77 02 	sts	0x0277, r31
    7f5a:	e0 93 76 02 	sts	0x0276, r30

		if(Weightlength < Weighttemplength)
    7f5e:	8d b7       	in	r24, 0x3d	; 61
    7f60:	9e b7       	in	r25, 0x3e	; 62
    7f62:	08 96       	adiw	r24, 0x08	; 8
    7f64:	0f b6       	in	r0, 0x3f	; 63
    7f66:	f8 94       	cli
    7f68:	9e bf       	out	0x3e, r25	; 62
    7f6a:	0f be       	out	0x3f, r0	; 63
    7f6c:	8d bf       	out	0x3d, r24	; 61
    7f6e:	20 91 7a 02 	lds	r18, 0x027A
    7f72:	30 91 7b 02 	lds	r19, 0x027B
    7f76:	80 91 72 02 	lds	r24, 0x0272
    7f7a:	90 91 73 02 	lds	r25, 0x0273
    7f7e:	28 17       	cp	r18, r24
    7f80:	39 07       	cpc	r19, r25
    7f82:	e4 f4       	brge	.+56     	; 0x7fbc <PageOne+0x362>
		{
			//lcd_clrscr();
			sprintf(Weight_Buf,"%-8s", Weight_Buf);
    7f84:	00 d0       	rcall	.+0      	; 0x7f86 <PageOne+0x32c>
    7f86:	00 d0       	rcall	.+0      	; 0x7f88 <PageOne+0x32e>
    7f88:	00 d0       	rcall	.+0      	; 0x7f8a <PageOne+0x330>
    7f8a:	ed b7       	in	r30, 0x3d	; 61
    7f8c:	fe b7       	in	r31, 0x3e	; 62
    7f8e:	31 96       	adiw	r30, 0x01	; 1
    7f90:	ad b7       	in	r26, 0x3d	; 61
    7f92:	be b7       	in	r27, 0x3e	; 62
    7f94:	12 96       	adiw	r26, 0x02	; 2
    7f96:	dc 92       	st	X, r13
    7f98:	ce 92       	st	-X, r12
    7f9a:	11 97       	sbiw	r26, 0x01	; 1
    7f9c:	8d e4       	ldi	r24, 0x4D	; 77
    7f9e:	92 e0       	ldi	r25, 0x02	; 2
    7fa0:	93 83       	std	Z+3, r25	; 0x03
    7fa2:	82 83       	std	Z+2, r24	; 0x02
    7fa4:	d5 82       	std	Z+5, r13	; 0x05
    7fa6:	c4 82       	std	Z+4, r12	; 0x04
    7fa8:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
    7fac:	8d b7       	in	r24, 0x3d	; 61
    7fae:	9e b7       	in	r25, 0x3e	; 62
    7fb0:	06 96       	adiw	r24, 0x06	; 6
    7fb2:	0f b6       	in	r0, 0x3f	; 63
    7fb4:	f8 94       	cli
    7fb6:	9e bf       	out	0x3e, r25	; 62
    7fb8:	0f be       	out	0x3f, r0	; 63
    7fba:	8d bf       	out	0x3d, r24	; 61
		 
		}
		if(B_Loadlength < B_Loadtemplength)
    7fbc:	20 91 78 02 	lds	r18, 0x0278
    7fc0:	30 91 79 02 	lds	r19, 0x0279
    7fc4:	80 91 70 02 	lds	r24, 0x0270
    7fc8:	90 91 71 02 	lds	r25, 0x0271
    7fcc:	28 17       	cp	r18, r24
    7fce:	39 07       	cpc	r19, r25
    7fd0:	fc f4       	brge	.+62     	; 0x8010 <PageOne+0x3b6>
		{
			//lcd_clrscr();
			sprintf(B_Load_Buf,"%-8s", B_Load_Buf);
    7fd2:	00 d0       	rcall	.+0      	; 0x7fd4 <PageOne+0x37a>
    7fd4:	00 d0       	rcall	.+0      	; 0x7fd6 <PageOne+0x37c>
    7fd6:	00 d0       	rcall	.+0      	; 0x7fd8 <PageOne+0x37e>
    7fd8:	ed b7       	in	r30, 0x3d	; 61
    7fda:	fe b7       	in	r31, 0x3e	; 62
    7fdc:	31 96       	adiw	r30, 0x01	; 1
    7fde:	9e 01       	movw	r18, r28
    7fe0:	25 5f       	subi	r18, 0xF5	; 245
    7fe2:	3f 4f       	sbci	r19, 0xFF	; 255
    7fe4:	ad b7       	in	r26, 0x3d	; 61
    7fe6:	be b7       	in	r27, 0x3e	; 62
    7fe8:	12 96       	adiw	r26, 0x02	; 2
    7fea:	3c 93       	st	X, r19
    7fec:	2e 93       	st	-X, r18
    7fee:	11 97       	sbiw	r26, 0x01	; 1
    7ff0:	8d e4       	ldi	r24, 0x4D	; 77
    7ff2:	92 e0       	ldi	r25, 0x02	; 2
    7ff4:	93 83       	std	Z+3, r25	; 0x03
    7ff6:	82 83       	std	Z+2, r24	; 0x02
    7ff8:	35 83       	std	Z+5, r19	; 0x05
    7ffa:	24 83       	std	Z+4, r18	; 0x04
    7ffc:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
    8000:	8d b7       	in	r24, 0x3d	; 61
    8002:	9e b7       	in	r25, 0x3e	; 62
    8004:	06 96       	adiw	r24, 0x06	; 6
    8006:	0f b6       	in	r0, 0x3f	; 63
    8008:	f8 94       	cli
    800a:	9e bf       	out	0x3e, r25	; 62
    800c:	0f be       	out	0x3f, r0	; 63
    800e:	8d bf       	out	0x3d, r24	; 61
		 
		}
		if(F_Ratelength < F_Ratetemplength)
    8010:	20 91 76 02 	lds	r18, 0x0276
    8014:	30 91 77 02 	lds	r19, 0x0277
    8018:	80 91 6e 02 	lds	r24, 0x026E
    801c:	90 91 6f 02 	lds	r25, 0x026F
    8020:	28 17       	cp	r18, r24
    8022:	39 07       	cpc	r19, r25
    8024:	fc f4       	brge	.+62     	; 0x8064 <PageOne+0x40a>
		{
			//lcd_clrscr();
			sprintf(F_Rate_Buf,"%-9s", F_Rate_Buf);
    8026:	00 d0       	rcall	.+0      	; 0x8028 <PageOne+0x3ce>
    8028:	00 d0       	rcall	.+0      	; 0x802a <PageOne+0x3d0>
    802a:	00 d0       	rcall	.+0      	; 0x802c <PageOne+0x3d2>
    802c:	ed b7       	in	r30, 0x3d	; 61
    802e:	fe b7       	in	r31, 0x3e	; 62
    8030:	31 96       	adiw	r30, 0x01	; 1
    8032:	9e 01       	movw	r18, r28
    8034:	21 5e       	subi	r18, 0xE1	; 225
    8036:	3f 4f       	sbci	r19, 0xFF	; 255
    8038:	ad b7       	in	r26, 0x3d	; 61
    803a:	be b7       	in	r27, 0x3e	; 62
    803c:	12 96       	adiw	r26, 0x02	; 2
    803e:	3c 93       	st	X, r19
    8040:	2e 93       	st	-X, r18
    8042:	11 97       	sbiw	r26, 0x01	; 1
    8044:	82 e5       	ldi	r24, 0x52	; 82
    8046:	92 e0       	ldi	r25, 0x02	; 2
    8048:	93 83       	std	Z+3, r25	; 0x03
    804a:	82 83       	std	Z+2, r24	; 0x02
    804c:	35 83       	std	Z+5, r19	; 0x05
    804e:	24 83       	std	Z+4, r18	; 0x04
    8050:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
    8054:	8d b7       	in	r24, 0x3d	; 61
    8056:	9e b7       	in	r25, 0x3e	; 62
    8058:	06 96       	adiw	r24, 0x06	; 6
    805a:	0f b6       	in	r0, 0x3f	; 63
    805c:	f8 94       	cli
    805e:	9e bf       	out	0x3e, r25	; 62
    8060:	0f be       	out	0x3f, r0	; 63
    8062:	8d bf       	out	0x3d, r24	; 61
		 
		}
		lcd_gotoxy(7,0);
    8064:	87 e0       	ldi	r24, 0x07	; 7
    8066:	60 e0       	ldi	r22, 0x00	; 0
    8068:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
		lcd_puts(Weight_Buf);
    806c:	ce 01       	movw	r24, r28
    806e:	01 96       	adiw	r24, 0x01	; 1
    8070:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
		Weighttemplength =  Weightlength;
    8074:	80 91 7a 02 	lds	r24, 0x027A
    8078:	90 91 7b 02 	lds	r25, 0x027B
    807c:	90 93 73 02 	sts	0x0273, r25
    8080:	80 93 72 02 	sts	0x0272, r24
		lcd_gotoxy(7,1);
    8084:	87 e0       	ldi	r24, 0x07	; 7
    8086:	61 e0       	ldi	r22, 0x01	; 1
    8088:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
		lcd_puts(B_Load_Buf);
    808c:	ce 01       	movw	r24, r28
    808e:	0b 96       	adiw	r24, 0x0b	; 11
    8090:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
		B_Loadtemplength =  B_Loadlength;
    8094:	80 91 78 02 	lds	r24, 0x0278
    8098:	90 91 79 02 	lds	r25, 0x0279
    809c:	90 93 71 02 	sts	0x0271, r25
    80a0:	80 93 70 02 	sts	0x0270, r24
		lcd_gotoxy(10,2);
    80a4:	8a e0       	ldi	r24, 0x0A	; 10
    80a6:	62 e0       	ldi	r22, 0x02	; 2
    80a8:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
		sprintf(Speed_Buf,"%05.2f", Speed);	
    80ac:	20 91 7e 02 	lds	r18, 0x027E
    80b0:	30 91 7f 02 	lds	r19, 0x027F
    80b4:	40 91 80 02 	lds	r20, 0x0280
    80b8:	50 91 81 02 	lds	r21, 0x0281
    80bc:	ad b7       	in	r26, 0x3d	; 61
    80be:	be b7       	in	r27, 0x3e	; 62
    80c0:	18 97       	sbiw	r26, 0x08	; 8
    80c2:	0f b6       	in	r0, 0x3f	; 63
    80c4:	f8 94       	cli
    80c6:	be bf       	out	0x3e, r27	; 62
    80c8:	0f be       	out	0x3f, r0	; 63
    80ca:	ad bf       	out	0x3d, r26	; 61
    80cc:	ed b7       	in	r30, 0x3d	; 61
    80ce:	fe b7       	in	r31, 0x3e	; 62
    80d0:	31 96       	adiw	r30, 0x01	; 1
    80d2:	8e 01       	movw	r16, r28
    80d4:	0b 5e       	subi	r16, 0xEB	; 235
    80d6:	1f 4f       	sbci	r17, 0xFF	; 255
    80d8:	12 96       	adiw	r26, 0x02	; 2
    80da:	1c 93       	st	X, r17
    80dc:	0e 93       	st	-X, r16
    80de:	11 97       	sbiw	r26, 0x01	; 1
    80e0:	87 e5       	ldi	r24, 0x57	; 87
    80e2:	92 e0       	ldi	r25, 0x02	; 2
    80e4:	93 83       	std	Z+3, r25	; 0x03
    80e6:	82 83       	std	Z+2, r24	; 0x02
    80e8:	24 83       	std	Z+4, r18	; 0x04
    80ea:	35 83       	std	Z+5, r19	; 0x05
    80ec:	46 83       	std	Z+6, r20	; 0x06
    80ee:	57 83       	std	Z+7, r21	; 0x07
    80f0:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
		lcd_puts(Speed_Buf);
    80f4:	8d b7       	in	r24, 0x3d	; 61
    80f6:	9e b7       	in	r25, 0x3e	; 62
    80f8:	08 96       	adiw	r24, 0x08	; 8
    80fa:	0f b6       	in	r0, 0x3f	; 63
    80fc:	f8 94       	cli
    80fe:	9e bf       	out	0x3e, r25	; 62
    8100:	0f be       	out	0x3f, r0	; 63
    8102:	8d bf       	out	0x3d, r24	; 61
    8104:	c8 01       	movw	r24, r16
    8106:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
		lcd_gotoxy(7,3);
    810a:	87 e0       	ldi	r24, 0x07	; 7
    810c:	63 e0       	ldi	r22, 0x03	; 3
    810e:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
		lcd_puts(F_Rate_Buf);
    8112:	ce 01       	movw	r24, r28
    8114:	4f 96       	adiw	r24, 0x1f	; 31
    8116:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
		F_Ratetemplength =  F_Ratelength;
    811a:	80 91 76 02 	lds	r24, 0x0276
    811e:	90 91 77 02 	lds	r25, 0x0277
    8122:	90 93 6f 02 	sts	0x026F, r25
    8126:	80 93 6e 02 	sts	0x026E, r24


		// For scrolling the page one 
		if(key == 'B')
    812a:	80 91 68 03 	lds	r24, 0x0368
    812e:	90 91 69 03 	lds	r25, 0x0369
    8132:	82 34       	cpi	r24, 0x42	; 66
    8134:	91 05       	cpc	r25, r1
    8136:	09 f0       	breq	.+2      	; 0x813a <PageOne+0x4e0>
    8138:	2a c1       	rjmp	.+596    	; 0x838e <PageOne+0x734>
		{
		    lcd_clrscr();
    813a:	0e 94 25 04 	call	0x84a	; 0x84a <lcd_clrscr>
			lcd_gotoxy(0,0);
    813e:	80 e0       	ldi	r24, 0x00	; 0
    8140:	60 e0       	ldi	r22, 0x00	; 0
    8142:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			lcd_puts("Total");
    8146:	8e e5       	ldi	r24, 0x5E	; 94
    8148:	92 e0       	ldi	r25, 0x02	; 2
    814a:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
			lcd_gotoxy(0,1);
    814e:	80 e0       	ldi	r24, 0x00	; 0
    8150:	61 e0       	ldi	r22, 0x01	; 1
    8152:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
			lcd_puts("Status");
    8156:	84 e6       	ldi	r24, 0x64	; 100
    8158:	92 e0       	ldi	r25, 0x02	; 2
    815a:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
				B_Load = (weight/W_Span);
				F_Rate = (B_Load*Speed*3.6*C_Factor);
				Frate_Totalizer = ((F_Rate/216000) + Frate_Totalizer);
				if(Frate_Totalizer >= 99999.00)
				{
					Frate_Totalizer = 0;
    815e:	0f 2e       	mov	r0, r31
    8160:	f0 e0       	ldi	r31, 0x00	; 0
    8162:	8f 2e       	mov	r8, r31
    8164:	f0 e0       	ldi	r31, 0x00	; 0
    8166:	9f 2e       	mov	r9, r31
    8168:	f0 e0       	ldi	r31, 0x00	; 0
    816a:	af 2e       	mov	r10, r31
    816c:	f0 e0       	ldi	r31, 0x00	; 0
    816e:	bf 2e       	mov	r11, r31
    8170:	f0 2d       	mov	r31, r0
				}
				sprintf(Frate_Totalizer_Buf,"%08.2f", Frate_Totalizer);		
    8172:	79 e2       	ldi	r23, 0x29	; 41
    8174:	c7 2e       	mov	r12, r23
    8176:	d1 2c       	mov	r13, r1
    8178:	cc 0e       	add	r12, r28
    817a:	dd 1e       	adc	r13, r29
    817c:	66 e4       	ldi	r22, 0x46	; 70
    817e:	46 2e       	mov	r4, r22
    8180:	62 e0       	ldi	r22, 0x02	; 2
    8182:	56 2e       	mov	r5, r22
				Frate_Totalizerlength = strlen(Frate_Totalizer_Buf);

				if(Frate_Totalizerlength < Frate_Totalizertemplength)
				{
					//lcd_clrscr();
					sprintf(Frate_Totalizer_Buf,"%-9s", Frate_Totalizer_Buf);
    8184:	52 e5       	ldi	r21, 0x52	; 82
    8186:	65 2e       	mov	r6, r21
    8188:	52 e0       	ldi	r21, 0x02	; 2
    818a:	75 2e       	mov	r7, r21
    818c:	f8 c0       	rjmp	.+496    	; 0x837e <PageOne+0x724>
			lcd_puts("Total");
			lcd_gotoxy(0,1);
			lcd_puts("Status");
			while(key != 'A')
			{
			    key = GetKeyPressed();
    818e:	0e 94 a1 04 	call	0x942	; 0x942 <GetKeyPressed>
    8192:	90 93 69 03 	sts	0x0369, r25
    8196:	80 93 68 03 	sts	0x0368, r24
				if(Time_counter >= 10)	
    819a:	80 91 c1 02 	lds	r24, 0x02C1
    819e:	90 91 c2 02 	lds	r25, 0x02C2
    81a2:	0a 97       	sbiw	r24, 0x0a	; 10
    81a4:	70 f0       	brcs	.+28     	; 0x81c2 <PageOne+0x568>
				{
	 
					Count_ChannelA = HX711_read();
    81a6:	0e 94 ea 41 	call	0x83d4	; 0x83d4 <HX711_read>
    81aa:	60 93 5f 03 	sts	0x035F, r22
    81ae:	70 93 60 03 	sts	0x0360, r23
    81b2:	80 93 61 03 	sts	0x0361, r24
    81b6:	90 93 62 03 	sts	0x0362, r25
					//Count_ChannelA = 985;
				 	//sprintf(buf,"%d",Count_ChannelA);
					//ISR_USART0_Transmit_String(buf); 
					Time_counter = 0;
    81ba:	10 92 c2 02 	sts	0x02C2, r1
    81be:	10 92 c1 02 	sts	0x02C1, r1
				}

				weight = ((float)Count_ChannelA -8388656.0)/67.0; 
    81c2:	60 91 5f 03 	lds	r22, 0x035F
    81c6:	70 91 60 03 	lds	r23, 0x0360
    81ca:	80 91 61 03 	lds	r24, 0x0361
    81ce:	90 91 62 03 	lds	r25, 0x0362
    81d2:	0e 94 a8 43 	call	0x8750	; 0x8750 <__floatunsisf>
    81d6:	20 e3       	ldi	r18, 0x30	; 48
    81d8:	30 e0       	ldi	r19, 0x00	; 0
    81da:	40 e0       	ldi	r20, 0x00	; 0
    81dc:	5b e4       	ldi	r21, 0x4B	; 75
    81de:	0e 94 db 42 	call	0x85b6	; 0x85b6 <__subsf3>
    81e2:	20 e0       	ldi	r18, 0x00	; 0
    81e4:	30 e0       	ldi	r19, 0x00	; 0
    81e6:	46 e8       	ldi	r20, 0x86	; 134
    81e8:	52 e4       	ldi	r21, 0x42	; 66
    81ea:	0e 94 40 43 	call	0x8680	; 0x8680 <__divsf3>
    81ee:	60 93 57 03 	sts	0x0357, r22
    81f2:	70 93 58 03 	sts	0x0358, r23
    81f6:	80 93 59 03 	sts	0x0359, r24
    81fa:	90 93 5a 03 	sts	0x035A, r25
				B_Load = (weight/W_Span);
    81fe:	20 91 9b 02 	lds	r18, 0x029B
    8202:	30 91 9c 02 	lds	r19, 0x029C
    8206:	40 91 9d 02 	lds	r20, 0x029D
    820a:	50 91 9e 02 	lds	r21, 0x029E
    820e:	0e 94 40 43 	call	0x8680	; 0x8680 <__divsf3>
    8212:	60 93 86 02 	sts	0x0286, r22
    8216:	70 93 87 02 	sts	0x0287, r23
    821a:	80 93 88 02 	sts	0x0288, r24
    821e:	90 93 89 02 	sts	0x0289, r25
				F_Rate = (B_Load*Speed*3.6*C_Factor);
    8222:	20 91 7e 02 	lds	r18, 0x027E
    8226:	30 91 7f 02 	lds	r19, 0x027F
    822a:	40 91 80 02 	lds	r20, 0x0280
    822e:	50 91 81 02 	lds	r21, 0x0281
    8232:	e0 90 ea 02 	lds	r14, 0x02EA
    8236:	f0 90 eb 02 	lds	r15, 0x02EB
    823a:	00 91 ec 02 	lds	r16, 0x02EC
    823e:	10 91 ed 02 	lds	r17, 0x02ED
    8242:	0e 94 3a 44 	call	0x8874	; 0x8874 <__mulsf3>
    8246:	26 e6       	ldi	r18, 0x66	; 102
    8248:	36 e6       	ldi	r19, 0x66	; 102
    824a:	46 e6       	ldi	r20, 0x66	; 102
    824c:	50 e4       	ldi	r21, 0x40	; 64
    824e:	0e 94 3a 44 	call	0x8874	; 0x8874 <__mulsf3>
    8252:	a8 01       	movw	r20, r16
    8254:	97 01       	movw	r18, r14
    8256:	0e 94 3a 44 	call	0x8874	; 0x8874 <__mulsf3>
    825a:	60 93 b5 02 	sts	0x02B5, r22
    825e:	70 93 b6 02 	sts	0x02B6, r23
    8262:	80 93 b7 02 	sts	0x02B7, r24
    8266:	90 93 b8 02 	sts	0x02B8, r25
				Frate_Totalizer = ((F_Rate/216000) + Frate_Totalizer);
    826a:	20 e0       	ldi	r18, 0x00	; 0
    826c:	30 ef       	ldi	r19, 0xF0	; 240
    826e:	42 e5       	ldi	r20, 0x52	; 82
    8270:	58 e4       	ldi	r21, 0x48	; 72
    8272:	0e 94 40 43 	call	0x8680	; 0x8680 <__divsf3>
    8276:	20 91 c3 02 	lds	r18, 0x02C3
    827a:	30 91 c4 02 	lds	r19, 0x02C4
    827e:	40 91 c5 02 	lds	r20, 0x02C5
    8282:	50 91 c6 02 	lds	r21, 0x02C6
    8286:	0e 94 dc 42 	call	0x85b8	; 0x85b8 <__addsf3>
    828a:	60 93 c3 02 	sts	0x02C3, r22
    828e:	70 93 c4 02 	sts	0x02C4, r23
    8292:	80 93 c5 02 	sts	0x02C5, r24
    8296:	90 93 c6 02 	sts	0x02C6, r25
				if(Frate_Totalizer >= 99999.00)
    829a:	20 e8       	ldi	r18, 0x80	; 128
    829c:	3f e4       	ldi	r19, 0x4F	; 79
    829e:	43 ec       	ldi	r20, 0xC3	; 195
    82a0:	57 e4       	ldi	r21, 0x47	; 71
    82a2:	0e 94 36 44 	call	0x886c	; 0x886c <__gesf2>
    82a6:	88 23       	and	r24, r24
    82a8:	44 f0       	brlt	.+16     	; 0x82ba <PageOne+0x660>
				{
					Frate_Totalizer = 0;
    82aa:	80 92 c3 02 	sts	0x02C3, r8
    82ae:	90 92 c4 02 	sts	0x02C4, r9
    82b2:	a0 92 c5 02 	sts	0x02C5, r10
    82b6:	b0 92 c6 02 	sts	0x02C6, r11
				}
				sprintf(Frate_Totalizer_Buf,"%08.2f", Frate_Totalizer);		
    82ba:	ad b7       	in	r26, 0x3d	; 61
    82bc:	be b7       	in	r27, 0x3e	; 62
    82be:	18 97       	sbiw	r26, 0x08	; 8
    82c0:	0f b6       	in	r0, 0x3f	; 63
    82c2:	f8 94       	cli
    82c4:	be bf       	out	0x3e, r27	; 62
    82c6:	0f be       	out	0x3f, r0	; 63
    82c8:	ad bf       	out	0x3d, r26	; 61
    82ca:	ed b7       	in	r30, 0x3d	; 61
    82cc:	fe b7       	in	r31, 0x3e	; 62
    82ce:	31 96       	adiw	r30, 0x01	; 1
    82d0:	12 96       	adiw	r26, 0x02	; 2
    82d2:	dc 92       	st	X, r13
    82d4:	ce 92       	st	-X, r12
    82d6:	11 97       	sbiw	r26, 0x01	; 1
    82d8:	53 82       	std	Z+3, r5	; 0x03
    82da:	42 82       	std	Z+2, r4	; 0x02
    82dc:	80 91 c3 02 	lds	r24, 0x02C3
    82e0:	90 91 c4 02 	lds	r25, 0x02C4
    82e4:	a0 91 c5 02 	lds	r26, 0x02C5
    82e8:	b0 91 c6 02 	lds	r27, 0x02C6
    82ec:	84 83       	std	Z+4, r24	; 0x04
    82ee:	95 83       	std	Z+5, r25	; 0x05
    82f0:	a6 83       	std	Z+6, r26	; 0x06
    82f2:	b7 83       	std	Z+7, r27	; 0x07
    82f4:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
				Frate_Totalizerlength = strlen(Frate_Totalizer_Buf);
    82f8:	f6 01       	movw	r30, r12
    82fa:	01 90       	ld	r0, Z+
    82fc:	00 20       	and	r0, r0
    82fe:	e9 f7       	brne	.-6      	; 0x82fa <PageOne+0x6a0>
    8300:	31 97       	sbiw	r30, 0x01	; 1
    8302:	ec 19       	sub	r30, r12
    8304:	fd 09       	sbc	r31, r13
    8306:	f0 93 75 02 	sts	0x0275, r31
    830a:	e0 93 74 02 	sts	0x0274, r30

				if(Frate_Totalizerlength < Frate_Totalizertemplength)
    830e:	8d b7       	in	r24, 0x3d	; 61
    8310:	9e b7       	in	r25, 0x3e	; 62
    8312:	08 96       	adiw	r24, 0x08	; 8
    8314:	0f b6       	in	r0, 0x3f	; 63
    8316:	f8 94       	cli
    8318:	9e bf       	out	0x3e, r25	; 62
    831a:	0f be       	out	0x3f, r0	; 63
    831c:	8d bf       	out	0x3d, r24	; 61
    831e:	80 91 6c 02 	lds	r24, 0x026C
    8322:	90 91 6d 02 	lds	r25, 0x026D
    8326:	e8 17       	cp	r30, r24
    8328:	f9 07       	cpc	r31, r25
    832a:	d4 f4       	brge	.+52     	; 0x8360 <PageOne+0x706>
				{
					//lcd_clrscr();
					sprintf(Frate_Totalizer_Buf,"%-9s", Frate_Totalizer_Buf);
    832c:	00 d0       	rcall	.+0      	; 0x832e <PageOne+0x6d4>
    832e:	00 d0       	rcall	.+0      	; 0x8330 <PageOne+0x6d6>
    8330:	00 d0       	rcall	.+0      	; 0x8332 <PageOne+0x6d8>
    8332:	ed b7       	in	r30, 0x3d	; 61
    8334:	fe b7       	in	r31, 0x3e	; 62
    8336:	31 96       	adiw	r30, 0x01	; 1
    8338:	ad b7       	in	r26, 0x3d	; 61
    833a:	be b7       	in	r27, 0x3e	; 62
    833c:	12 96       	adiw	r26, 0x02	; 2
    833e:	dc 92       	st	X, r13
    8340:	ce 92       	st	-X, r12
    8342:	11 97       	sbiw	r26, 0x01	; 1
    8344:	73 82       	std	Z+3, r7	; 0x03
    8346:	62 82       	std	Z+2, r6	; 0x02
    8348:	d5 82       	std	Z+5, r13	; 0x05
    834a:	c4 82       	std	Z+4, r12	; 0x04
    834c:	0e 94 ba 49 	call	0x9374	; 0x9374 <sprintf>
    8350:	8d b7       	in	r24, 0x3d	; 61
    8352:	9e b7       	in	r25, 0x3e	; 62
    8354:	06 96       	adiw	r24, 0x06	; 6
    8356:	0f b6       	in	r0, 0x3f	; 63
    8358:	f8 94       	cli
    835a:	9e bf       	out	0x3e, r25	; 62
    835c:	0f be       	out	0x3f, r0	; 63
    835e:	8d bf       	out	0x3d, r24	; 61
		 
				}
				lcd_gotoxy(7,0);
    8360:	87 e0       	ldi	r24, 0x07	; 7
    8362:	60 e0       	ldi	r22, 0x00	; 0
    8364:	0e 94 11 04 	call	0x822	; 0x822 <lcd_gotoxy>
				lcd_puts(Frate_Totalizer_Buf);
    8368:	c6 01       	movw	r24, r12
    836a:	0e 94 4d 04 	call	0x89a	; 0x89a <lcd_puts>
				Frate_Totalizertemplength =  Frate_Totalizerlength;
    836e:	80 91 74 02 	lds	r24, 0x0274
    8372:	90 91 75 02 	lds	r25, 0x0275
    8376:	90 93 6d 02 	sts	0x026D, r25
    837a:	80 93 6c 02 	sts	0x026C, r24
		    lcd_clrscr();
			lcd_gotoxy(0,0);
			lcd_puts("Total");
			lcd_gotoxy(0,1);
			lcd_puts("Status");
			while(key != 'A')
    837e:	80 91 68 03 	lds	r24, 0x0368
    8382:	90 91 69 03 	lds	r25, 0x0369
    8386:	81 34       	cpi	r24, 0x41	; 65
    8388:	91 05       	cpc	r25, r1
    838a:	09 f0       	breq	.+2      	; 0x838e <PageOne+0x734>
    838c:	00 cf       	rjmp	.-512    	; 0x818e <PageOne+0x534>
	    		
				

			}
		}
}
    838e:	e2 96       	adiw	r28, 0x32	; 50
    8390:	0f b6       	in	r0, 0x3f	; 63
    8392:	f8 94       	cli
    8394:	de bf       	out	0x3e, r29	; 62
    8396:	0f be       	out	0x3f, r0	; 63
    8398:	cd bf       	out	0x3d, r28	; 61
    839a:	cf 91       	pop	r28
    839c:	df 91       	pop	r29
    839e:	1f 91       	pop	r17
    83a0:	0f 91       	pop	r16
    83a2:	ff 90       	pop	r15
    83a4:	ef 90       	pop	r14
    83a6:	df 90       	pop	r13
    83a8:	cf 90       	pop	r12
    83aa:	bf 90       	pop	r11
    83ac:	af 90       	pop	r10
    83ae:	9f 90       	pop	r9
    83b0:	8f 90       	pop	r8
    83b2:	7f 90       	pop	r7
    83b4:	6f 90       	pop	r6
    83b6:	5f 90       	pop	r5
    83b8:	4f 90       	pop	r4
    83ba:	08 95       	ret

000083bc <HX711_is_ready>:
    HX711_set_gain(gain);
}

int HX711_is_ready(void)
{
    return (DOUT_INPUT & (1 << DOUT_PIN)) == 0;
    83bc:	26 b3       	in	r18, 0x16	; 22
    83be:	33 27       	eor	r19, r19
    83c0:	27 fd       	sbrc	r18, 7
    83c2:	30 95       	com	r19
    83c4:	20 95       	com	r18
    83c6:	30 95       	com	r19
    83c8:	22 27       	eor	r18, r18
    83ca:	33 0f       	add	r19, r19
    83cc:	22 1f       	adc	r18, r18
    83ce:	33 27       	eor	r19, r19
}
    83d0:	c9 01       	movw	r24, r18
    83d2:	08 95       	ret

000083d4 <HX711_read>:
}

uint32_t HX711_read(void)
{
	// wait for the chip to become ready
	while (!HX711_is_ready());
    83d4:	b7 99       	sbic	0x16, 7	; 22
    83d6:	fe cf       	rjmp	.-4      	; 0x83d4 <HX711_read>

    unsigned long count; 
    unsigned char i;
 
    DOUT_SET_HIGH;
    83d8:	c7 9a       	sbi	0x18, 7	; 24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    83da:	85 e0       	ldi	r24, 0x05	; 5
    83dc:	98 2f       	mov	r25, r24
    83de:	9a 95       	dec	r25
    83e0:	f1 f7       	brne	.-4      	; 0x83de <HX711_read+0xa>
    
    _delay_us(1);
 
    PD_SCK_SET_LOW;
    83e2:	c6 98       	cbi	0x18, 6	; 24
    83e4:	8a 95       	dec	r24
    83e6:	f1 f7       	brne	.-4      	; 0x83e4 <HX711_read+0x10>
    _delay_us(1);
 
    count=0; 
    while(DOUT_READ); 
    83e8:	b7 99       	sbic	0x16, 7	; 22
    83ea:	fe cf       	rjmp	.-4      	; 0x83e8 <HX711_read+0x14>
    83ec:	20 e0       	ldi	r18, 0x00	; 0
    83ee:	30 e0       	ldi	r19, 0x00	; 0
    83f0:	40 e0       	ldi	r20, 0x00	; 0
    83f2:	50 e0       	ldi	r21, 0x00	; 0
    83f4:	90 e0       	ldi	r25, 0x00	; 0
    83f6:	65 e0       	ldi	r22, 0x05	; 5
    for(i=0;i<24;i++)
    { 
        PD_SCK_SET_HIGH; 
    83f8:	c6 9a       	sbi	0x18, 6	; 24
    83fa:	86 2f       	mov	r24, r22
    83fc:	8a 95       	dec	r24
    83fe:	f1 f7       	brne	.-4      	; 0x83fc <HX711_read+0x28>
        _delay_us(1);
        count=count<<1; 
    8400:	22 0f       	add	r18, r18
    8402:	33 1f       	adc	r19, r19
    8404:	44 1f       	adc	r20, r20
    8406:	55 1f       	adc	r21, r21
        PD_SCK_SET_LOW; 
    8408:	c6 98       	cbi	0x18, 6	; 24
    840a:	86 2f       	mov	r24, r22
    840c:	8a 95       	dec	r24
    840e:	f1 f7       	brne	.-4      	; 0x840c <HX711_read+0x38>
        _delay_us(1);
        if(DOUT_READ)
    8410:	b7 9b       	sbis	0x16, 7	; 22
    8412:	04 c0       	rjmp	.+8      	; 0x841c <HX711_read+0x48>
            count++; 
    8414:	2f 5f       	subi	r18, 0xFF	; 255
    8416:	3f 4f       	sbci	r19, 0xFF	; 255
    8418:	4f 4f       	sbci	r20, 0xFF	; 255
    841a:	5f 4f       	sbci	r21, 0xFF	; 255
    PD_SCK_SET_LOW;
    _delay_us(1);
 
    count=0; 
    while(DOUT_READ); 
    for(i=0;i<24;i++)
    841c:	9f 5f       	subi	r25, 0xFF	; 255
    841e:	98 31       	cpi	r25, 0x18	; 24
    8420:	59 f7       	brne	.-42     	; 0x83f8 <HX711_read+0x24>
        PD_SCK_SET_LOW; 
        _delay_us(1);
        if(DOUT_READ)
            count++; 
    } 
    count = count>>6;
    8422:	96 e0       	ldi	r25, 0x06	; 6
    8424:	56 95       	lsr	r21
    8426:	47 95       	ror	r20
    8428:	37 95       	ror	r19
    842a:	27 95       	ror	r18
    842c:	9a 95       	dec	r25
    842e:	d1 f7       	brne	.-12     	; 0x8424 <HX711_read+0x50>
    PD_SCK_SET_HIGH; 
    8430:	c6 9a       	sbi	0x18, 6	; 24
    8432:	85 e0       	ldi	r24, 0x05	; 5
    8434:	98 2f       	mov	r25, r24
    8436:	9a 95       	dec	r25
    8438:	f1 f7       	brne	.-4      	; 0x8436 <HX711_read+0x62>
    _delay_us(1);
    PD_SCK_SET_LOW; 
    843a:	c6 98       	cbi	0x18, 6	; 24
    843c:	8a 95       	dec	r24
    843e:	f1 f7       	brne	.-4      	; 0x843c <HX711_read+0x68>
    8440:	80 e0       	ldi	r24, 0x00	; 0
    8442:	90 e0       	ldi	r25, 0x00	; 0
    8444:	a0 e8       	ldi	r26, 0x80	; 128
    8446:	b0 e0       	ldi	r27, 0x00	; 0
    8448:	28 27       	eor	r18, r24
    844a:	39 27       	eor	r19, r25
    844c:	4a 27       	eor	r20, r26
    844e:	5b 27       	eor	r21, r27
    _delay_us(1);
    count ^= 0x800000;
    return(count);
}
    8450:	b9 01       	movw	r22, r18
    8452:	ca 01       	movw	r24, r20
    8454:	08 95       	ret

00008456 <HX711_set_gain>:
    return (DOUT_INPUT & (1 << DOUT_PIN)) == 0;
}

void HX711_set_gain(uint8_t gain)
{
	switch (gain)
    8456:	80 34       	cpi	r24, 0x40	; 64
    8458:	39 f0       	breq	.+14     	; 0x8468 <HX711_set_gain+0x12>
    845a:	80 38       	cpi	r24, 0x80	; 128
    845c:	19 f0       	breq	.+6      	; 0x8464 <HX711_set_gain+0xe>
    845e:	80 32       	cpi	r24, 0x20	; 32
    8460:	41 f4       	brne	.+16     	; 0x8472 <HX711_set_gain+0x1c>
    8462:	04 c0       	rjmp	.+8      	; 0x846c <HX711_set_gain+0x16>
	{
		case 128:		// channel A, gain factor 128
			GAIN = 1;
    8464:	81 e0       	ldi	r24, 0x01	; 1
    8466:	03 c0       	rjmp	.+6      	; 0x846e <HX711_set_gain+0x18>
			break;
		case 64:		// channel A, gain factor 64
			GAIN = 3;
    8468:	83 e0       	ldi	r24, 0x03	; 3
    846a:	01 c0       	rjmp	.+2      	; 0x846e <HX711_set_gain+0x18>
			break;
		case 32:		// channel B, gain factor 32
			GAIN = 2;
    846c:	82 e0       	ldi	r24, 0x02	; 2
    846e:	80 93 a7 02 	sts	0x02A7, r24
			break;
	}

	PD_SCK_SET_LOW;
    8472:	c6 98       	cbi	0x18, 6	; 24
	HX711_read();
    8474:	0e 94 ea 41 	call	0x83d4	; 0x83d4 <HX711_read>
}
    8478:	08 95       	ret

0000847a <HX711_init>:
void HX711_power_up();
uint8_t shiftIn(void);
*/
void HX711_init(uint8_t gain)
{
    PD_SCK_SET_OUTPUT;
    847a:	be 9a       	sbi	0x17, 6	; 23
    DOUT_SET_INPUT;
    847c:	bf 98       	cbi	0x17, 7	; 23
    847e:	c7 9a       	sbi	0x18, 7	; 24

    HX711_set_gain(gain);
    8480:	0e 94 2b 42 	call	0x8456	; 0x8456 <HX711_set_gain>
}
    8484:	08 95       	ret

00008486 <HX711_read_average>:
    count ^= 0x800000;
    return(count);
}

uint32_t HX711_read_average(uint8_t times)
{
    8486:	cf 92       	push	r12
    8488:	df 92       	push	r13
    848a:	ef 92       	push	r14
    848c:	ff 92       	push	r15
    848e:	0f 93       	push	r16
    8490:	1f 93       	push	r17
    8492:	c8 2e       	mov	r12, r24
    8494:	ee 24       	eor	r14, r14
    8496:	ff 24       	eor	r15, r15
    8498:	87 01       	movw	r16, r14
    849a:	dd 24       	eor	r13, r13
    849c:	07 c0       	rjmp	.+14     	; 0x84ac <HX711_read_average+0x26>
	uint32_t sum = 0;
	for (uint8_t i = 0; i < times; i++)
	{
		sum += HX711_read();
    849e:	0e 94 ea 41 	call	0x83d4	; 0x83d4 <HX711_read>
    84a2:	e6 0e       	add	r14, r22
    84a4:	f7 1e       	adc	r15, r23
    84a6:	08 1f       	adc	r16, r24
    84a8:	19 1f       	adc	r17, r25
}

uint32_t HX711_read_average(uint8_t times)
{
	uint32_t sum = 0;
	for (uint8_t i = 0; i < times; i++)
    84aa:	d3 94       	inc	r13
    84ac:	dc 14       	cp	r13, r12
    84ae:	b8 f3       	brcs	.-18     	; 0x849e <HX711_read_average+0x18>
    84b0:	2c 2d       	mov	r18, r12
    84b2:	30 e0       	ldi	r19, 0x00	; 0
    84b4:	40 e0       	ldi	r20, 0x00	; 0
    84b6:	50 e0       	ldi	r21, 0x00	; 0
    84b8:	c8 01       	movw	r24, r16
    84ba:	b7 01       	movw	r22, r14
    84bc:	0e 94 71 48 	call	0x90e2	; 0x90e2 <__udivmodsi4>
    84c0:	ca 01       	movw	r24, r20
	{
		sum += HX711_read();
		// TODO: See if yield will work | yield();
	}
	return sum / times;
}
    84c2:	b9 01       	movw	r22, r18
    84c4:	1f 91       	pop	r17
    84c6:	0f 91       	pop	r16
    84c8:	ff 90       	pop	r15
    84ca:	ef 90       	pop	r14
    84cc:	df 90       	pop	r13
    84ce:	cf 90       	pop	r12
    84d0:	08 95       	ret

000084d2 <HX711_get_value>:

double HX711_get_value(uint8_t times)
{
	return HX711_read_average(times) - OFFSET;
    84d2:	0e 94 43 42 	call	0x8486	; 0x8486 <HX711_read_average>
    84d6:	0e 94 a8 43 	call	0x8750	; 0x8750 <__floatunsisf>
    84da:	20 91 97 02 	lds	r18, 0x0297
    84de:	30 91 98 02 	lds	r19, 0x0298
    84e2:	40 91 99 02 	lds	r20, 0x0299
    84e6:	50 91 9a 02 	lds	r21, 0x029A
    84ea:	0e 94 db 42 	call	0x85b6	; 0x85b6 <__subsf3>
}
    84ee:	08 95       	ret

000084f0 <HX711_get_units>:

float HX711_get_units(uint8_t times)
{
	return HX711_get_value(times) / SCALE;
    84f0:	0e 94 69 42 	call	0x84d2	; 0x84d2 <HX711_get_value>
    84f4:	20 91 4e 03 	lds	r18, 0x034E
    84f8:	30 91 4f 03 	lds	r19, 0x034F
    84fc:	40 91 50 03 	lds	r20, 0x0350
    8500:	50 91 51 03 	lds	r21, 0x0351
    8504:	0e 94 40 43 	call	0x8680	; 0x8680 <__divsf3>
}
    8508:	08 95       	ret

0000850a <HX711_tare>:

void HX711_tare(uint8_t times)
{
	double sum = HX711_read_average(times);
    850a:	0e 94 43 42 	call	0x8486	; 0x8486 <HX711_read_average>
	return SCALE;
}

void HX711_set_offset(double offset)
{
    OFFSET = offset;
    850e:	0e 94 a8 43 	call	0x8750	; 0x8750 <__floatunsisf>
    8512:	60 93 97 02 	sts	0x0297, r22
    8516:	70 93 98 02 	sts	0x0298, r23
    851a:	80 93 99 02 	sts	0x0299, r24
    851e:	90 93 9a 02 	sts	0x029A, r25

void HX711_tare(uint8_t times)
{
	double sum = HX711_read_average(times);
	HX711_set_offset(sum);
}
    8522:	08 95       	ret

00008524 <HX711_set_scale>:

void HX711_set_scale(float scale)
{
	SCALE = scale;
    8524:	60 93 4e 03 	sts	0x034E, r22
    8528:	70 93 4f 03 	sts	0x034F, r23
    852c:	80 93 50 03 	sts	0x0350, r24
    8530:	90 93 51 03 	sts	0x0351, r25
}
    8534:	08 95       	ret

00008536 <HX711_get_scale>:

float HX711_get_scale(void)
{
	return SCALE;
}
    8536:	20 91 4e 03 	lds	r18, 0x034E
    853a:	30 91 4f 03 	lds	r19, 0x034F
    853e:	40 91 50 03 	lds	r20, 0x0350
    8542:	50 91 51 03 	lds	r21, 0x0351
    8546:	b9 01       	movw	r22, r18
    8548:	ca 01       	movw	r24, r20
    854a:	08 95       	ret

0000854c <HX711_set_offset>:

void HX711_set_offset(double offset)
{
    OFFSET = offset;
    854c:	60 93 97 02 	sts	0x0297, r22
    8550:	70 93 98 02 	sts	0x0298, r23
    8554:	80 93 99 02 	sts	0x0299, r24
    8558:	90 93 9a 02 	sts	0x029A, r25
}
    855c:	08 95       	ret

0000855e <HX711_get_offset>:

double HX711_get_offset(void)
{
	return OFFSET;
}
    855e:	20 91 97 02 	lds	r18, 0x0297
    8562:	30 91 98 02 	lds	r19, 0x0298
    8566:	40 91 99 02 	lds	r20, 0x0299
    856a:	50 91 9a 02 	lds	r21, 0x029A
    856e:	b9 01       	movw	r22, r18
    8570:	ca 01       	movw	r24, r20
    8572:	08 95       	ret

00008574 <HX711_power_down>:

void HX711_power_down(void)
{
	PD_SCK_SET_LOW;
    8574:	c6 98       	cbi	0x18, 6	; 24
	PD_SCK_SET_HIGH;
    8576:	c6 9a       	sbi	0x18, 6	; 24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    8578:	88 e1       	ldi	r24, 0x18	; 24
    857a:	91 e0       	ldi	r25, 0x01	; 1
    857c:	01 97       	sbiw	r24, 0x01	; 1
    857e:	f1 f7       	brne	.-4      	; 0x857c <HX711_power_down+0x8>
	_delay_us(70);
}
    8580:	08 95       	ret

00008582 <HX711_power_up>:

void HX711_power_up(void)
{
	PD_SCK_SET_LOW;
    8582:	c6 98       	cbi	0x18, 6	; 24
}
    8584:	08 95       	ret

00008586 <shiftIn>:

uint8_t shiftIn(void)
{
    8586:	40 e0       	ldi	r20, 0x00	; 0
    8588:	27 e0       	ldi	r18, 0x07	; 7
    858a:	30 e0       	ldi	r19, 0x00	; 0
    uint8_t value = 0;

    for (uint8_t i = 0; i < 8; ++i)
    {
        PD_SCK_SET_HIGH;
    858c:	c6 9a       	sbi	0x18, 6	; 24
        value |= DOUT_READ << (7 - i);
    858e:	86 b3       	in	r24, 0x16	; 22
    8590:	90 e0       	ldi	r25, 0x00	; 0
    8592:	80 78       	andi	r24, 0x80	; 128
    8594:	90 70       	andi	r25, 0x00	; 0
    8596:	02 2e       	mov	r0, r18
    8598:	02 c0       	rjmp	.+4      	; 0x859e <shiftIn+0x18>
    859a:	88 0f       	add	r24, r24
    859c:	99 1f       	adc	r25, r25
    859e:	0a 94       	dec	r0
    85a0:	e2 f7       	brpl	.-8      	; 0x859a <shiftIn+0x14>
    85a2:	48 2b       	or	r20, r24
        PD_SCK_SET_LOW;
    85a4:	c6 98       	cbi	0x18, 6	; 24
    85a6:	21 50       	subi	r18, 0x01	; 1
    85a8:	30 40       	sbci	r19, 0x00	; 0

uint8_t shiftIn(void)
{
    uint8_t value = 0;

    for (uint8_t i = 0; i < 8; ++i)
    85aa:	8f ef       	ldi	r24, 0xFF	; 255
    85ac:	2f 3f       	cpi	r18, 0xFF	; 255
    85ae:	38 07       	cpc	r19, r24
    85b0:	69 f7       	brne	.-38     	; 0x858c <shiftIn+0x6>
        PD_SCK_SET_HIGH;
        value |= DOUT_READ << (7 - i);
        PD_SCK_SET_LOW;
    }
    return value;
}
    85b2:	84 2f       	mov	r24, r20
    85b4:	08 95       	ret

000085b6 <__subsf3>:
    85b6:	50 58       	subi	r21, 0x80	; 128

000085b8 <__addsf3>:
    85b8:	bb 27       	eor	r27, r27
    85ba:	aa 27       	eor	r26, r26
    85bc:	0e d0       	rcall	.+28     	; 0x85da <__addsf3x>
    85be:	1c c1       	rjmp	.+568    	; 0x87f8 <__fp_round>
    85c0:	0d d1       	rcall	.+538    	; 0x87dc <__fp_pscA>
    85c2:	30 f0       	brcs	.+12     	; 0x85d0 <__addsf3+0x18>
    85c4:	12 d1       	rcall	.+548    	; 0x87ea <__fp_pscB>
    85c6:	20 f0       	brcs	.+8      	; 0x85d0 <__addsf3+0x18>
    85c8:	31 f4       	brne	.+12     	; 0x85d6 <__addsf3+0x1e>
    85ca:	9f 3f       	cpi	r25, 0xFF	; 255
    85cc:	11 f4       	brne	.+4      	; 0x85d2 <__addsf3+0x1a>
    85ce:	1e f4       	brtc	.+6      	; 0x85d6 <__addsf3+0x1e>
    85d0:	02 c1       	rjmp	.+516    	; 0x87d6 <__fp_nan>
    85d2:	0e f4       	brtc	.+2      	; 0x85d6 <__addsf3+0x1e>
    85d4:	e0 95       	com	r30
    85d6:	e7 fb       	bst	r30, 7
    85d8:	f8 c0       	rjmp	.+496    	; 0x87ca <__fp_inf>

000085da <__addsf3x>:
    85da:	e9 2f       	mov	r30, r25
    85dc:	1e d1       	rcall	.+572    	; 0x881a <__fp_split3>
    85de:	80 f3       	brcs	.-32     	; 0x85c0 <__addsf3+0x8>
    85e0:	ba 17       	cp	r27, r26
    85e2:	62 07       	cpc	r22, r18
    85e4:	73 07       	cpc	r23, r19
    85e6:	84 07       	cpc	r24, r20
    85e8:	95 07       	cpc	r25, r21
    85ea:	18 f0       	brcs	.+6      	; 0x85f2 <__addsf3x+0x18>
    85ec:	71 f4       	brne	.+28     	; 0x860a <__addsf3x+0x30>
    85ee:	9e f5       	brtc	.+102    	; 0x8656 <__addsf3x+0x7c>
    85f0:	36 c1       	rjmp	.+620    	; 0x885e <__fp_zero>
    85f2:	0e f4       	brtc	.+2      	; 0x85f6 <__addsf3x+0x1c>
    85f4:	e0 95       	com	r30
    85f6:	0b 2e       	mov	r0, r27
    85f8:	ba 2f       	mov	r27, r26
    85fa:	a0 2d       	mov	r26, r0
    85fc:	0b 01       	movw	r0, r22
    85fe:	b9 01       	movw	r22, r18
    8600:	90 01       	movw	r18, r0
    8602:	0c 01       	movw	r0, r24
    8604:	ca 01       	movw	r24, r20
    8606:	a0 01       	movw	r20, r0
    8608:	11 24       	eor	r1, r1
    860a:	ff 27       	eor	r31, r31
    860c:	59 1b       	sub	r21, r25
    860e:	99 f0       	breq	.+38     	; 0x8636 <__addsf3x+0x5c>
    8610:	59 3f       	cpi	r21, 0xF9	; 249
    8612:	50 f4       	brcc	.+20     	; 0x8628 <__addsf3x+0x4e>
    8614:	50 3e       	cpi	r21, 0xE0	; 224
    8616:	68 f1       	brcs	.+90     	; 0x8672 <__addsf3x+0x98>
    8618:	1a 16       	cp	r1, r26
    861a:	f0 40       	sbci	r31, 0x00	; 0
    861c:	a2 2f       	mov	r26, r18
    861e:	23 2f       	mov	r18, r19
    8620:	34 2f       	mov	r19, r20
    8622:	44 27       	eor	r20, r20
    8624:	58 5f       	subi	r21, 0xF8	; 248
    8626:	f3 cf       	rjmp	.-26     	; 0x860e <__addsf3x+0x34>
    8628:	46 95       	lsr	r20
    862a:	37 95       	ror	r19
    862c:	27 95       	ror	r18
    862e:	a7 95       	ror	r26
    8630:	f0 40       	sbci	r31, 0x00	; 0
    8632:	53 95       	inc	r21
    8634:	c9 f7       	brne	.-14     	; 0x8628 <__addsf3x+0x4e>
    8636:	7e f4       	brtc	.+30     	; 0x8656 <__addsf3x+0x7c>
    8638:	1f 16       	cp	r1, r31
    863a:	ba 0b       	sbc	r27, r26
    863c:	62 0b       	sbc	r22, r18
    863e:	73 0b       	sbc	r23, r19
    8640:	84 0b       	sbc	r24, r20
    8642:	ba f0       	brmi	.+46     	; 0x8672 <__addsf3x+0x98>
    8644:	91 50       	subi	r25, 0x01	; 1
    8646:	a1 f0       	breq	.+40     	; 0x8670 <__addsf3x+0x96>
    8648:	ff 0f       	add	r31, r31
    864a:	bb 1f       	adc	r27, r27
    864c:	66 1f       	adc	r22, r22
    864e:	77 1f       	adc	r23, r23
    8650:	88 1f       	adc	r24, r24
    8652:	c2 f7       	brpl	.-16     	; 0x8644 <__addsf3x+0x6a>
    8654:	0e c0       	rjmp	.+28     	; 0x8672 <__addsf3x+0x98>
    8656:	ba 0f       	add	r27, r26
    8658:	62 1f       	adc	r22, r18
    865a:	73 1f       	adc	r23, r19
    865c:	84 1f       	adc	r24, r20
    865e:	48 f4       	brcc	.+18     	; 0x8672 <__addsf3x+0x98>
    8660:	87 95       	ror	r24
    8662:	77 95       	ror	r23
    8664:	67 95       	ror	r22
    8666:	b7 95       	ror	r27
    8668:	f7 95       	ror	r31
    866a:	9e 3f       	cpi	r25, 0xFE	; 254
    866c:	08 f0       	brcs	.+2      	; 0x8670 <__addsf3x+0x96>
    866e:	b3 cf       	rjmp	.-154    	; 0x85d6 <__addsf3+0x1e>
    8670:	93 95       	inc	r25
    8672:	88 0f       	add	r24, r24
    8674:	08 f0       	brcs	.+2      	; 0x8678 <__addsf3x+0x9e>
    8676:	99 27       	eor	r25, r25
    8678:	ee 0f       	add	r30, r30
    867a:	97 95       	ror	r25
    867c:	87 95       	ror	r24
    867e:	08 95       	ret

00008680 <__divsf3>:
    8680:	0c d0       	rcall	.+24     	; 0x869a <__divsf3x>
    8682:	ba c0       	rjmp	.+372    	; 0x87f8 <__fp_round>
    8684:	b2 d0       	rcall	.+356    	; 0x87ea <__fp_pscB>
    8686:	40 f0       	brcs	.+16     	; 0x8698 <__divsf3+0x18>
    8688:	a9 d0       	rcall	.+338    	; 0x87dc <__fp_pscA>
    868a:	30 f0       	brcs	.+12     	; 0x8698 <__divsf3+0x18>
    868c:	21 f4       	brne	.+8      	; 0x8696 <__divsf3+0x16>
    868e:	5f 3f       	cpi	r21, 0xFF	; 255
    8690:	19 f0       	breq	.+6      	; 0x8698 <__divsf3+0x18>
    8692:	9b c0       	rjmp	.+310    	; 0x87ca <__fp_inf>
    8694:	51 11       	cpse	r21, r1
    8696:	e4 c0       	rjmp	.+456    	; 0x8860 <__fp_szero>
    8698:	9e c0       	rjmp	.+316    	; 0x87d6 <__fp_nan>

0000869a <__divsf3x>:
    869a:	bf d0       	rcall	.+382    	; 0x881a <__fp_split3>
    869c:	98 f3       	brcs	.-26     	; 0x8684 <__divsf3+0x4>

0000869e <__divsf3_pse>:
    869e:	99 23       	and	r25, r25
    86a0:	c9 f3       	breq	.-14     	; 0x8694 <__divsf3+0x14>
    86a2:	55 23       	and	r21, r21
    86a4:	b1 f3       	breq	.-20     	; 0x8692 <__divsf3+0x12>
    86a6:	95 1b       	sub	r25, r21
    86a8:	55 0b       	sbc	r21, r21
    86aa:	bb 27       	eor	r27, r27
    86ac:	aa 27       	eor	r26, r26
    86ae:	62 17       	cp	r22, r18
    86b0:	73 07       	cpc	r23, r19
    86b2:	84 07       	cpc	r24, r20
    86b4:	38 f0       	brcs	.+14     	; 0x86c4 <__divsf3_pse+0x26>
    86b6:	9f 5f       	subi	r25, 0xFF	; 255
    86b8:	5f 4f       	sbci	r21, 0xFF	; 255
    86ba:	22 0f       	add	r18, r18
    86bc:	33 1f       	adc	r19, r19
    86be:	44 1f       	adc	r20, r20
    86c0:	aa 1f       	adc	r26, r26
    86c2:	a9 f3       	breq	.-22     	; 0x86ae <__divsf3_pse+0x10>
    86c4:	33 d0       	rcall	.+102    	; 0x872c <__divsf3_pse+0x8e>
    86c6:	0e 2e       	mov	r0, r30
    86c8:	3a f0       	brmi	.+14     	; 0x86d8 <__divsf3_pse+0x3a>
    86ca:	e0 e8       	ldi	r30, 0x80	; 128
    86cc:	30 d0       	rcall	.+96     	; 0x872e <__divsf3_pse+0x90>
    86ce:	91 50       	subi	r25, 0x01	; 1
    86d0:	50 40       	sbci	r21, 0x00	; 0
    86d2:	e6 95       	lsr	r30
    86d4:	00 1c       	adc	r0, r0
    86d6:	ca f7       	brpl	.-14     	; 0x86ca <__divsf3_pse+0x2c>
    86d8:	29 d0       	rcall	.+82     	; 0x872c <__divsf3_pse+0x8e>
    86da:	fe 2f       	mov	r31, r30
    86dc:	27 d0       	rcall	.+78     	; 0x872c <__divsf3_pse+0x8e>
    86de:	66 0f       	add	r22, r22
    86e0:	77 1f       	adc	r23, r23
    86e2:	88 1f       	adc	r24, r24
    86e4:	bb 1f       	adc	r27, r27
    86e6:	26 17       	cp	r18, r22
    86e8:	37 07       	cpc	r19, r23
    86ea:	48 07       	cpc	r20, r24
    86ec:	ab 07       	cpc	r26, r27
    86ee:	b0 e8       	ldi	r27, 0x80	; 128
    86f0:	09 f0       	breq	.+2      	; 0x86f4 <__divsf3_pse+0x56>
    86f2:	bb 0b       	sbc	r27, r27
    86f4:	80 2d       	mov	r24, r0
    86f6:	bf 01       	movw	r22, r30
    86f8:	ff 27       	eor	r31, r31
    86fa:	93 58       	subi	r25, 0x83	; 131
    86fc:	5f 4f       	sbci	r21, 0xFF	; 255
    86fe:	2a f0       	brmi	.+10     	; 0x870a <__divsf3_pse+0x6c>
    8700:	9e 3f       	cpi	r25, 0xFE	; 254
    8702:	51 05       	cpc	r21, r1
    8704:	68 f0       	brcs	.+26     	; 0x8720 <__divsf3_pse+0x82>
    8706:	61 c0       	rjmp	.+194    	; 0x87ca <__fp_inf>
    8708:	ab c0       	rjmp	.+342    	; 0x8860 <__fp_szero>
    870a:	5f 3f       	cpi	r21, 0xFF	; 255
    870c:	ec f3       	brlt	.-6      	; 0x8708 <__divsf3_pse+0x6a>
    870e:	98 3e       	cpi	r25, 0xE8	; 232
    8710:	dc f3       	brlt	.-10     	; 0x8708 <__divsf3_pse+0x6a>
    8712:	86 95       	lsr	r24
    8714:	77 95       	ror	r23
    8716:	67 95       	ror	r22
    8718:	b7 95       	ror	r27
    871a:	f7 95       	ror	r31
    871c:	9f 5f       	subi	r25, 0xFF	; 255
    871e:	c9 f7       	brne	.-14     	; 0x8712 <__divsf3_pse+0x74>
    8720:	88 0f       	add	r24, r24
    8722:	91 1d       	adc	r25, r1
    8724:	96 95       	lsr	r25
    8726:	87 95       	ror	r24
    8728:	97 f9       	bld	r25, 7
    872a:	08 95       	ret
    872c:	e1 e0       	ldi	r30, 0x01	; 1
    872e:	66 0f       	add	r22, r22
    8730:	77 1f       	adc	r23, r23
    8732:	88 1f       	adc	r24, r24
    8734:	bb 1f       	adc	r27, r27
    8736:	62 17       	cp	r22, r18
    8738:	73 07       	cpc	r23, r19
    873a:	84 07       	cpc	r24, r20
    873c:	ba 07       	cpc	r27, r26
    873e:	20 f0       	brcs	.+8      	; 0x8748 <__divsf3_pse+0xaa>
    8740:	62 1b       	sub	r22, r18
    8742:	73 0b       	sbc	r23, r19
    8744:	84 0b       	sbc	r24, r20
    8746:	ba 0b       	sbc	r27, r26
    8748:	ee 1f       	adc	r30, r30
    874a:	88 f7       	brcc	.-30     	; 0x872e <__divsf3_pse+0x90>
    874c:	e0 95       	com	r30
    874e:	08 95       	ret

00008750 <__floatunsisf>:
    8750:	e8 94       	clt
    8752:	09 c0       	rjmp	.+18     	; 0x8766 <__floatsisf+0x12>

00008754 <__floatsisf>:
    8754:	97 fb       	bst	r25, 7
    8756:	3e f4       	brtc	.+14     	; 0x8766 <__floatsisf+0x12>
    8758:	90 95       	com	r25
    875a:	80 95       	com	r24
    875c:	70 95       	com	r23
    875e:	61 95       	neg	r22
    8760:	7f 4f       	sbci	r23, 0xFF	; 255
    8762:	8f 4f       	sbci	r24, 0xFF	; 255
    8764:	9f 4f       	sbci	r25, 0xFF	; 255
    8766:	99 23       	and	r25, r25
    8768:	a9 f0       	breq	.+42     	; 0x8794 <__floatsisf+0x40>
    876a:	f9 2f       	mov	r31, r25
    876c:	96 e9       	ldi	r25, 0x96	; 150
    876e:	bb 27       	eor	r27, r27
    8770:	93 95       	inc	r25
    8772:	f6 95       	lsr	r31
    8774:	87 95       	ror	r24
    8776:	77 95       	ror	r23
    8778:	67 95       	ror	r22
    877a:	b7 95       	ror	r27
    877c:	f1 11       	cpse	r31, r1
    877e:	f8 cf       	rjmp	.-16     	; 0x8770 <__floatsisf+0x1c>
    8780:	fa f4       	brpl	.+62     	; 0x87c0 <__floatsisf+0x6c>
    8782:	bb 0f       	add	r27, r27
    8784:	11 f4       	brne	.+4      	; 0x878a <__floatsisf+0x36>
    8786:	60 ff       	sbrs	r22, 0
    8788:	1b c0       	rjmp	.+54     	; 0x87c0 <__floatsisf+0x6c>
    878a:	6f 5f       	subi	r22, 0xFF	; 255
    878c:	7f 4f       	sbci	r23, 0xFF	; 255
    878e:	8f 4f       	sbci	r24, 0xFF	; 255
    8790:	9f 4f       	sbci	r25, 0xFF	; 255
    8792:	16 c0       	rjmp	.+44     	; 0x87c0 <__floatsisf+0x6c>
    8794:	88 23       	and	r24, r24
    8796:	11 f0       	breq	.+4      	; 0x879c <__floatsisf+0x48>
    8798:	96 e9       	ldi	r25, 0x96	; 150
    879a:	11 c0       	rjmp	.+34     	; 0x87be <__floatsisf+0x6a>
    879c:	77 23       	and	r23, r23
    879e:	21 f0       	breq	.+8      	; 0x87a8 <__floatsisf+0x54>
    87a0:	9e e8       	ldi	r25, 0x8E	; 142
    87a2:	87 2f       	mov	r24, r23
    87a4:	76 2f       	mov	r23, r22
    87a6:	05 c0       	rjmp	.+10     	; 0x87b2 <__floatsisf+0x5e>
    87a8:	66 23       	and	r22, r22
    87aa:	71 f0       	breq	.+28     	; 0x87c8 <__floatsisf+0x74>
    87ac:	96 e8       	ldi	r25, 0x86	; 134
    87ae:	86 2f       	mov	r24, r22
    87b0:	70 e0       	ldi	r23, 0x00	; 0
    87b2:	60 e0       	ldi	r22, 0x00	; 0
    87b4:	2a f0       	brmi	.+10     	; 0x87c0 <__floatsisf+0x6c>
    87b6:	9a 95       	dec	r25
    87b8:	66 0f       	add	r22, r22
    87ba:	77 1f       	adc	r23, r23
    87bc:	88 1f       	adc	r24, r24
    87be:	da f7       	brpl	.-10     	; 0x87b6 <__floatsisf+0x62>
    87c0:	88 0f       	add	r24, r24
    87c2:	96 95       	lsr	r25
    87c4:	87 95       	ror	r24
    87c6:	97 f9       	bld	r25, 7
    87c8:	08 95       	ret

000087ca <__fp_inf>:
    87ca:	97 f9       	bld	r25, 7
    87cc:	9f 67       	ori	r25, 0x7F	; 127
    87ce:	80 e8       	ldi	r24, 0x80	; 128
    87d0:	70 e0       	ldi	r23, 0x00	; 0
    87d2:	60 e0       	ldi	r22, 0x00	; 0
    87d4:	08 95       	ret

000087d6 <__fp_nan>:
    87d6:	9f ef       	ldi	r25, 0xFF	; 255
    87d8:	80 ec       	ldi	r24, 0xC0	; 192
    87da:	08 95       	ret

000087dc <__fp_pscA>:
    87dc:	00 24       	eor	r0, r0
    87de:	0a 94       	dec	r0
    87e0:	16 16       	cp	r1, r22
    87e2:	17 06       	cpc	r1, r23
    87e4:	18 06       	cpc	r1, r24
    87e6:	09 06       	cpc	r0, r25
    87e8:	08 95       	ret

000087ea <__fp_pscB>:
    87ea:	00 24       	eor	r0, r0
    87ec:	0a 94       	dec	r0
    87ee:	12 16       	cp	r1, r18
    87f0:	13 06       	cpc	r1, r19
    87f2:	14 06       	cpc	r1, r20
    87f4:	05 06       	cpc	r0, r21
    87f6:	08 95       	ret

000087f8 <__fp_round>:
    87f8:	09 2e       	mov	r0, r25
    87fa:	03 94       	inc	r0
    87fc:	00 0c       	add	r0, r0
    87fe:	11 f4       	brne	.+4      	; 0x8804 <__fp_round+0xc>
    8800:	88 23       	and	r24, r24
    8802:	52 f0       	brmi	.+20     	; 0x8818 <__fp_round+0x20>
    8804:	bb 0f       	add	r27, r27
    8806:	40 f4       	brcc	.+16     	; 0x8818 <__fp_round+0x20>
    8808:	bf 2b       	or	r27, r31
    880a:	11 f4       	brne	.+4      	; 0x8810 <__fp_round+0x18>
    880c:	60 ff       	sbrs	r22, 0
    880e:	04 c0       	rjmp	.+8      	; 0x8818 <__fp_round+0x20>
    8810:	6f 5f       	subi	r22, 0xFF	; 255
    8812:	7f 4f       	sbci	r23, 0xFF	; 255
    8814:	8f 4f       	sbci	r24, 0xFF	; 255
    8816:	9f 4f       	sbci	r25, 0xFF	; 255
    8818:	08 95       	ret

0000881a <__fp_split3>:
    881a:	57 fd       	sbrc	r21, 7
    881c:	90 58       	subi	r25, 0x80	; 128
    881e:	44 0f       	add	r20, r20
    8820:	55 1f       	adc	r21, r21
    8822:	59 f0       	breq	.+22     	; 0x883a <__fp_splitA+0x10>
    8824:	5f 3f       	cpi	r21, 0xFF	; 255
    8826:	71 f0       	breq	.+28     	; 0x8844 <__fp_splitA+0x1a>
    8828:	47 95       	ror	r20

0000882a <__fp_splitA>:
    882a:	88 0f       	add	r24, r24
    882c:	97 fb       	bst	r25, 7
    882e:	99 1f       	adc	r25, r25
    8830:	61 f0       	breq	.+24     	; 0x884a <__fp_splitA+0x20>
    8832:	9f 3f       	cpi	r25, 0xFF	; 255
    8834:	79 f0       	breq	.+30     	; 0x8854 <__fp_splitA+0x2a>
    8836:	87 95       	ror	r24
    8838:	08 95       	ret
    883a:	12 16       	cp	r1, r18
    883c:	13 06       	cpc	r1, r19
    883e:	14 06       	cpc	r1, r20
    8840:	55 1f       	adc	r21, r21
    8842:	f2 cf       	rjmp	.-28     	; 0x8828 <__fp_split3+0xe>
    8844:	46 95       	lsr	r20
    8846:	f1 df       	rcall	.-30     	; 0x882a <__fp_splitA>
    8848:	08 c0       	rjmp	.+16     	; 0x885a <__fp_splitA+0x30>
    884a:	16 16       	cp	r1, r22
    884c:	17 06       	cpc	r1, r23
    884e:	18 06       	cpc	r1, r24
    8850:	99 1f       	adc	r25, r25
    8852:	f1 cf       	rjmp	.-30     	; 0x8836 <__fp_splitA+0xc>
    8854:	86 95       	lsr	r24
    8856:	71 05       	cpc	r23, r1
    8858:	61 05       	cpc	r22, r1
    885a:	08 94       	sec
    885c:	08 95       	ret

0000885e <__fp_zero>:
    885e:	e8 94       	clt

00008860 <__fp_szero>:
    8860:	bb 27       	eor	r27, r27
    8862:	66 27       	eor	r22, r22
    8864:	77 27       	eor	r23, r23
    8866:	cb 01       	movw	r24, r22
    8868:	97 f9       	bld	r25, 7
    886a:	08 95       	ret

0000886c <__gesf2>:
    886c:	66 d0       	rcall	.+204    	; 0x893a <__fp_cmp>
    886e:	08 f4       	brcc	.+2      	; 0x8872 <__gesf2+0x6>
    8870:	8f ef       	ldi	r24, 0xFF	; 255
    8872:	08 95       	ret

00008874 <__mulsf3>:
    8874:	0b d0       	rcall	.+22     	; 0x888c <__mulsf3x>
    8876:	c0 cf       	rjmp	.-128    	; 0x87f8 <__fp_round>
    8878:	b1 df       	rcall	.-158    	; 0x87dc <__fp_pscA>
    887a:	28 f0       	brcs	.+10     	; 0x8886 <__mulsf3+0x12>
    887c:	b6 df       	rcall	.-148    	; 0x87ea <__fp_pscB>
    887e:	18 f0       	brcs	.+6      	; 0x8886 <__mulsf3+0x12>
    8880:	95 23       	and	r25, r21
    8882:	09 f0       	breq	.+2      	; 0x8886 <__mulsf3+0x12>
    8884:	a2 cf       	rjmp	.-188    	; 0x87ca <__fp_inf>
    8886:	a7 cf       	rjmp	.-178    	; 0x87d6 <__fp_nan>
    8888:	11 24       	eor	r1, r1
    888a:	ea cf       	rjmp	.-44     	; 0x8860 <__fp_szero>

0000888c <__mulsf3x>:
    888c:	c6 df       	rcall	.-116    	; 0x881a <__fp_split3>
    888e:	a0 f3       	brcs	.-24     	; 0x8878 <__mulsf3+0x4>

00008890 <__mulsf3_pse>:
    8890:	95 9f       	mul	r25, r21
    8892:	d1 f3       	breq	.-12     	; 0x8888 <__mulsf3+0x14>
    8894:	95 0f       	add	r25, r21
    8896:	50 e0       	ldi	r21, 0x00	; 0
    8898:	55 1f       	adc	r21, r21
    889a:	62 9f       	mul	r22, r18
    889c:	f0 01       	movw	r30, r0
    889e:	72 9f       	mul	r23, r18
    88a0:	bb 27       	eor	r27, r27
    88a2:	f0 0d       	add	r31, r0
    88a4:	b1 1d       	adc	r27, r1
    88a6:	63 9f       	mul	r22, r19
    88a8:	aa 27       	eor	r26, r26
    88aa:	f0 0d       	add	r31, r0
    88ac:	b1 1d       	adc	r27, r1
    88ae:	aa 1f       	adc	r26, r26
    88b0:	64 9f       	mul	r22, r20
    88b2:	66 27       	eor	r22, r22
    88b4:	b0 0d       	add	r27, r0
    88b6:	a1 1d       	adc	r26, r1
    88b8:	66 1f       	adc	r22, r22
    88ba:	82 9f       	mul	r24, r18
    88bc:	22 27       	eor	r18, r18
    88be:	b0 0d       	add	r27, r0
    88c0:	a1 1d       	adc	r26, r1
    88c2:	62 1f       	adc	r22, r18
    88c4:	73 9f       	mul	r23, r19
    88c6:	b0 0d       	add	r27, r0
    88c8:	a1 1d       	adc	r26, r1
    88ca:	62 1f       	adc	r22, r18
    88cc:	83 9f       	mul	r24, r19
    88ce:	a0 0d       	add	r26, r0
    88d0:	61 1d       	adc	r22, r1
    88d2:	22 1f       	adc	r18, r18
    88d4:	74 9f       	mul	r23, r20
    88d6:	33 27       	eor	r19, r19
    88d8:	a0 0d       	add	r26, r0
    88da:	61 1d       	adc	r22, r1
    88dc:	23 1f       	adc	r18, r19
    88de:	84 9f       	mul	r24, r20
    88e0:	60 0d       	add	r22, r0
    88e2:	21 1d       	adc	r18, r1
    88e4:	82 2f       	mov	r24, r18
    88e6:	76 2f       	mov	r23, r22
    88e8:	6a 2f       	mov	r22, r26
    88ea:	11 24       	eor	r1, r1
    88ec:	9f 57       	subi	r25, 0x7F	; 127
    88ee:	50 40       	sbci	r21, 0x00	; 0
    88f0:	8a f0       	brmi	.+34     	; 0x8914 <__mulsf3_pse+0x84>
    88f2:	e1 f0       	breq	.+56     	; 0x892c <__mulsf3_pse+0x9c>
    88f4:	88 23       	and	r24, r24
    88f6:	4a f0       	brmi	.+18     	; 0x890a <__mulsf3_pse+0x7a>
    88f8:	ee 0f       	add	r30, r30
    88fa:	ff 1f       	adc	r31, r31
    88fc:	bb 1f       	adc	r27, r27
    88fe:	66 1f       	adc	r22, r22
    8900:	77 1f       	adc	r23, r23
    8902:	88 1f       	adc	r24, r24
    8904:	91 50       	subi	r25, 0x01	; 1
    8906:	50 40       	sbci	r21, 0x00	; 0
    8908:	a9 f7       	brne	.-22     	; 0x88f4 <__mulsf3_pse+0x64>
    890a:	9e 3f       	cpi	r25, 0xFE	; 254
    890c:	51 05       	cpc	r21, r1
    890e:	70 f0       	brcs	.+28     	; 0x892c <__mulsf3_pse+0x9c>
    8910:	5c cf       	rjmp	.-328    	; 0x87ca <__fp_inf>
    8912:	a6 cf       	rjmp	.-180    	; 0x8860 <__fp_szero>
    8914:	5f 3f       	cpi	r21, 0xFF	; 255
    8916:	ec f3       	brlt	.-6      	; 0x8912 <__mulsf3_pse+0x82>
    8918:	98 3e       	cpi	r25, 0xE8	; 232
    891a:	dc f3       	brlt	.-10     	; 0x8912 <__mulsf3_pse+0x82>
    891c:	86 95       	lsr	r24
    891e:	77 95       	ror	r23
    8920:	67 95       	ror	r22
    8922:	b7 95       	ror	r27
    8924:	f7 95       	ror	r31
    8926:	e7 95       	ror	r30
    8928:	9f 5f       	subi	r25, 0xFF	; 255
    892a:	c1 f7       	brne	.-16     	; 0x891c <__mulsf3_pse+0x8c>
    892c:	fe 2b       	or	r31, r30
    892e:	88 0f       	add	r24, r24
    8930:	91 1d       	adc	r25, r1
    8932:	96 95       	lsr	r25
    8934:	87 95       	ror	r24
    8936:	97 f9       	bld	r25, 7
    8938:	08 95       	ret

0000893a <__fp_cmp>:
    893a:	99 0f       	add	r25, r25
    893c:	00 08       	sbc	r0, r0
    893e:	55 0f       	add	r21, r21
    8940:	aa 0b       	sbc	r26, r26
    8942:	e0 e8       	ldi	r30, 0x80	; 128
    8944:	fe ef       	ldi	r31, 0xFE	; 254
    8946:	16 16       	cp	r1, r22
    8948:	17 06       	cpc	r1, r23
    894a:	e8 07       	cpc	r30, r24
    894c:	f9 07       	cpc	r31, r25
    894e:	c0 f0       	brcs	.+48     	; 0x8980 <__fp_cmp+0x46>
    8950:	12 16       	cp	r1, r18
    8952:	13 06       	cpc	r1, r19
    8954:	e4 07       	cpc	r30, r20
    8956:	f5 07       	cpc	r31, r21
    8958:	98 f0       	brcs	.+38     	; 0x8980 <__fp_cmp+0x46>
    895a:	62 1b       	sub	r22, r18
    895c:	73 0b       	sbc	r23, r19
    895e:	84 0b       	sbc	r24, r20
    8960:	95 0b       	sbc	r25, r21
    8962:	39 f4       	brne	.+14     	; 0x8972 <__fp_cmp+0x38>
    8964:	0a 26       	eor	r0, r26
    8966:	61 f0       	breq	.+24     	; 0x8980 <__fp_cmp+0x46>
    8968:	23 2b       	or	r18, r19
    896a:	24 2b       	or	r18, r20
    896c:	25 2b       	or	r18, r21
    896e:	21 f4       	brne	.+8      	; 0x8978 <__fp_cmp+0x3e>
    8970:	08 95       	ret
    8972:	0a 26       	eor	r0, r26
    8974:	09 f4       	brne	.+2      	; 0x8978 <__fp_cmp+0x3e>
    8976:	a1 40       	sbci	r26, 0x01	; 1
    8978:	a6 95       	lsr	r26
    897a:	8f ef       	ldi	r24, 0xFF	; 255
    897c:	81 1d       	adc	r24, r1
    897e:	81 1d       	adc	r24, r1
    8980:	08 95       	ret

00008982 <vfprintf>:
    8982:	2f 92       	push	r2
    8984:	3f 92       	push	r3
    8986:	4f 92       	push	r4
    8988:	5f 92       	push	r5
    898a:	6f 92       	push	r6
    898c:	7f 92       	push	r7
    898e:	8f 92       	push	r8
    8990:	9f 92       	push	r9
    8992:	af 92       	push	r10
    8994:	bf 92       	push	r11
    8996:	cf 92       	push	r12
    8998:	df 92       	push	r13
    899a:	ef 92       	push	r14
    899c:	ff 92       	push	r15
    899e:	0f 93       	push	r16
    89a0:	1f 93       	push	r17
    89a2:	df 93       	push	r29
    89a4:	cf 93       	push	r28
    89a6:	cd b7       	in	r28, 0x3d	; 61
    89a8:	de b7       	in	r29, 0x3e	; 62
    89aa:	61 97       	sbiw	r28, 0x11	; 17
    89ac:	0f b6       	in	r0, 0x3f	; 63
    89ae:	f8 94       	cli
    89b0:	de bf       	out	0x3e, r29	; 62
    89b2:	0f be       	out	0x3f, r0	; 63
    89b4:	cd bf       	out	0x3d, r28	; 61
    89b6:	3c 01       	movw	r6, r24
    89b8:	7f 87       	std	Y+15, r23	; 0x0f
    89ba:	6e 87       	std	Y+14, r22	; 0x0e
    89bc:	6a 01       	movw	r12, r20
    89be:	fc 01       	movw	r30, r24
    89c0:	17 82       	std	Z+7, r1	; 0x07
    89c2:	16 82       	std	Z+6, r1	; 0x06
    89c4:	83 81       	ldd	r24, Z+3	; 0x03
    89c6:	81 fd       	sbrc	r24, 1
    89c8:	03 c0       	rjmp	.+6      	; 0x89d0 <vfprintf+0x4e>
    89ca:	6f ef       	ldi	r22, 0xFF	; 255
    89cc:	7f ef       	ldi	r23, 0xFF	; 255
    89ce:	6f c3       	rjmp	.+1758   	; 0x90ae <vfprintf+0x72c>
    89d0:	9e 01       	movw	r18, r28
    89d2:	2f 5f       	subi	r18, 0xFF	; 255
    89d4:	3f 4f       	sbci	r19, 0xFF	; 255
    89d6:	39 8b       	std	Y+17, r19	; 0x11
    89d8:	28 8b       	std	Y+16, r18	; 0x10
    89da:	f3 01       	movw	r30, r6
    89dc:	23 81       	ldd	r18, Z+3	; 0x03
    89de:	ee 85       	ldd	r30, Y+14	; 0x0e
    89e0:	ff 85       	ldd	r31, Y+15	; 0x0f
    89e2:	23 fd       	sbrc	r18, 3
    89e4:	85 91       	lpm	r24, Z+
    89e6:	23 ff       	sbrs	r18, 3
    89e8:	81 91       	ld	r24, Z+
    89ea:	ff 87       	std	Y+15, r31	; 0x0f
    89ec:	ee 87       	std	Y+14, r30	; 0x0e
    89ee:	88 23       	and	r24, r24
    89f0:	09 f4       	brne	.+2      	; 0x89f4 <vfprintf+0x72>
    89f2:	5a c3       	rjmp	.+1716   	; 0x90a8 <vfprintf+0x726>
    89f4:	85 32       	cpi	r24, 0x25	; 37
    89f6:	51 f4       	brne	.+20     	; 0x8a0c <vfprintf+0x8a>
    89f8:	ee 85       	ldd	r30, Y+14	; 0x0e
    89fa:	ff 85       	ldd	r31, Y+15	; 0x0f
    89fc:	23 fd       	sbrc	r18, 3
    89fe:	85 91       	lpm	r24, Z+
    8a00:	23 ff       	sbrs	r18, 3
    8a02:	81 91       	ld	r24, Z+
    8a04:	ff 87       	std	Y+15, r31	; 0x0f
    8a06:	ee 87       	std	Y+14, r30	; 0x0e
    8a08:	85 32       	cpi	r24, 0x25	; 37
    8a0a:	29 f4       	brne	.+10     	; 0x8a16 <vfprintf+0x94>
    8a0c:	90 e0       	ldi	r25, 0x00	; 0
    8a0e:	b3 01       	movw	r22, r6
    8a10:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    8a14:	e2 cf       	rjmp	.-60     	; 0x89da <vfprintf+0x58>
    8a16:	98 2f       	mov	r25, r24
    8a18:	10 e0       	ldi	r17, 0x00	; 0
    8a1a:	88 24       	eor	r8, r8
    8a1c:	99 24       	eor	r9, r9
    8a1e:	10 32       	cpi	r17, 0x20	; 32
    8a20:	b0 f4       	brcc	.+44     	; 0x8a4e <vfprintf+0xcc>
    8a22:	9b 32       	cpi	r25, 0x2B	; 43
    8a24:	69 f0       	breq	.+26     	; 0x8a40 <vfprintf+0xbe>
    8a26:	9c 32       	cpi	r25, 0x2C	; 44
    8a28:	28 f4       	brcc	.+10     	; 0x8a34 <vfprintf+0xb2>
    8a2a:	90 32       	cpi	r25, 0x20	; 32
    8a2c:	51 f0       	breq	.+20     	; 0x8a42 <vfprintf+0xc0>
    8a2e:	93 32       	cpi	r25, 0x23	; 35
    8a30:	71 f4       	brne	.+28     	; 0x8a4e <vfprintf+0xcc>
    8a32:	0b c0       	rjmp	.+22     	; 0x8a4a <vfprintf+0xc8>
    8a34:	9d 32       	cpi	r25, 0x2D	; 45
    8a36:	39 f0       	breq	.+14     	; 0x8a46 <vfprintf+0xc4>
    8a38:	90 33       	cpi	r25, 0x30	; 48
    8a3a:	49 f4       	brne	.+18     	; 0x8a4e <vfprintf+0xcc>
    8a3c:	11 60       	ori	r17, 0x01	; 1
    8a3e:	28 c0       	rjmp	.+80     	; 0x8a90 <vfprintf+0x10e>
    8a40:	12 60       	ori	r17, 0x02	; 2
    8a42:	14 60       	ori	r17, 0x04	; 4
    8a44:	25 c0       	rjmp	.+74     	; 0x8a90 <vfprintf+0x10e>
    8a46:	18 60       	ori	r17, 0x08	; 8
    8a48:	23 c0       	rjmp	.+70     	; 0x8a90 <vfprintf+0x10e>
    8a4a:	10 61       	ori	r17, 0x10	; 16
    8a4c:	21 c0       	rjmp	.+66     	; 0x8a90 <vfprintf+0x10e>
    8a4e:	17 fd       	sbrc	r17, 7
    8a50:	2a c0       	rjmp	.+84     	; 0x8aa6 <vfprintf+0x124>
    8a52:	89 2f       	mov	r24, r25
    8a54:	80 53       	subi	r24, 0x30	; 48
    8a56:	8a 30       	cpi	r24, 0x0A	; 10
    8a58:	78 f4       	brcc	.+30     	; 0x8a78 <vfprintf+0xf6>
    8a5a:	16 ff       	sbrs	r17, 6
    8a5c:	06 c0       	rjmp	.+12     	; 0x8a6a <vfprintf+0xe8>
    8a5e:	fa e0       	ldi	r31, 0x0A	; 10
    8a60:	9f 9e       	mul	r9, r31
    8a62:	90 2c       	mov	r9, r0
    8a64:	11 24       	eor	r1, r1
    8a66:	98 0e       	add	r9, r24
    8a68:	13 c0       	rjmp	.+38     	; 0x8a90 <vfprintf+0x10e>
    8a6a:	3a e0       	ldi	r19, 0x0A	; 10
    8a6c:	83 9e       	mul	r8, r19
    8a6e:	80 2c       	mov	r8, r0
    8a70:	11 24       	eor	r1, r1
    8a72:	88 0e       	add	r8, r24
    8a74:	10 62       	ori	r17, 0x20	; 32
    8a76:	0c c0       	rjmp	.+24     	; 0x8a90 <vfprintf+0x10e>
    8a78:	9e 32       	cpi	r25, 0x2E	; 46
    8a7a:	21 f4       	brne	.+8      	; 0x8a84 <vfprintf+0x102>
    8a7c:	16 fd       	sbrc	r17, 6
    8a7e:	14 c3       	rjmp	.+1576   	; 0x90a8 <vfprintf+0x726>
    8a80:	10 64       	ori	r17, 0x40	; 64
    8a82:	06 c0       	rjmp	.+12     	; 0x8a90 <vfprintf+0x10e>
    8a84:	9c 36       	cpi	r25, 0x6C	; 108
    8a86:	11 f4       	brne	.+4      	; 0x8a8c <vfprintf+0x10a>
    8a88:	10 68       	ori	r17, 0x80	; 128
    8a8a:	02 c0       	rjmp	.+4      	; 0x8a90 <vfprintf+0x10e>
    8a8c:	98 36       	cpi	r25, 0x68	; 104
    8a8e:	59 f4       	brne	.+22     	; 0x8aa6 <vfprintf+0x124>
    8a90:	ee 85       	ldd	r30, Y+14	; 0x0e
    8a92:	ff 85       	ldd	r31, Y+15	; 0x0f
    8a94:	23 fd       	sbrc	r18, 3
    8a96:	95 91       	lpm	r25, Z+
    8a98:	23 ff       	sbrs	r18, 3
    8a9a:	91 91       	ld	r25, Z+
    8a9c:	ff 87       	std	Y+15, r31	; 0x0f
    8a9e:	ee 87       	std	Y+14, r30	; 0x0e
    8aa0:	99 23       	and	r25, r25
    8aa2:	09 f0       	breq	.+2      	; 0x8aa6 <vfprintf+0x124>
    8aa4:	bc cf       	rjmp	.-136    	; 0x8a1e <vfprintf+0x9c>
    8aa6:	89 2f       	mov	r24, r25
    8aa8:	85 54       	subi	r24, 0x45	; 69
    8aaa:	83 30       	cpi	r24, 0x03	; 3
    8aac:	20 f4       	brcc	.+8      	; 0x8ab6 <vfprintf+0x134>
    8aae:	81 2f       	mov	r24, r17
    8ab0:	80 61       	ori	r24, 0x10	; 16
    8ab2:	90 5e       	subi	r25, 0xE0	; 224
    8ab4:	07 c0       	rjmp	.+14     	; 0x8ac4 <vfprintf+0x142>
    8ab6:	89 2f       	mov	r24, r25
    8ab8:	85 56       	subi	r24, 0x65	; 101
    8aba:	83 30       	cpi	r24, 0x03	; 3
    8abc:	08 f0       	brcs	.+2      	; 0x8ac0 <vfprintf+0x13e>
    8abe:	9f c1       	rjmp	.+830    	; 0x8dfe <vfprintf+0x47c>
    8ac0:	81 2f       	mov	r24, r17
    8ac2:	8f 7e       	andi	r24, 0xEF	; 239
    8ac4:	86 fd       	sbrc	r24, 6
    8ac6:	02 c0       	rjmp	.+4      	; 0x8acc <vfprintf+0x14a>
    8ac8:	76 e0       	ldi	r23, 0x06	; 6
    8aca:	97 2e       	mov	r9, r23
    8acc:	6f e3       	ldi	r22, 0x3F	; 63
    8ace:	f6 2e       	mov	r15, r22
    8ad0:	f8 22       	and	r15, r24
    8ad2:	95 36       	cpi	r25, 0x65	; 101
    8ad4:	19 f4       	brne	.+6      	; 0x8adc <vfprintf+0x15a>
    8ad6:	f0 e4       	ldi	r31, 0x40	; 64
    8ad8:	ff 2a       	or	r15, r31
    8ada:	07 c0       	rjmp	.+14     	; 0x8aea <vfprintf+0x168>
    8adc:	96 36       	cpi	r25, 0x66	; 102
    8ade:	19 f4       	brne	.+6      	; 0x8ae6 <vfprintf+0x164>
    8ae0:	20 e8       	ldi	r18, 0x80	; 128
    8ae2:	f2 2a       	or	r15, r18
    8ae4:	02 c0       	rjmp	.+4      	; 0x8aea <vfprintf+0x168>
    8ae6:	91 10       	cpse	r9, r1
    8ae8:	9a 94       	dec	r9
    8aea:	f7 fe       	sbrs	r15, 7
    8aec:	0a c0       	rjmp	.+20     	; 0x8b02 <vfprintf+0x180>
    8aee:	3b e3       	ldi	r19, 0x3B	; 59
    8af0:	39 15       	cp	r19, r9
    8af2:	18 f4       	brcc	.+6      	; 0x8afa <vfprintf+0x178>
    8af4:	5c e3       	ldi	r21, 0x3C	; 60
    8af6:	b5 2e       	mov	r11, r21
    8af8:	02 c0       	rjmp	.+4      	; 0x8afe <vfprintf+0x17c>
    8afa:	b9 2c       	mov	r11, r9
    8afc:	b3 94       	inc	r11
    8afe:	27 e0       	ldi	r18, 0x07	; 7
    8b00:	09 c0       	rjmp	.+18     	; 0x8b14 <vfprintf+0x192>
    8b02:	47 e0       	ldi	r20, 0x07	; 7
    8b04:	49 15       	cp	r20, r9
    8b06:	20 f4       	brcc	.+8      	; 0x8b10 <vfprintf+0x18e>
    8b08:	bb 24       	eor	r11, r11
    8b0a:	47 e0       	ldi	r20, 0x07	; 7
    8b0c:	94 2e       	mov	r9, r20
    8b0e:	f7 cf       	rjmp	.-18     	; 0x8afe <vfprintf+0x17c>
    8b10:	29 2d       	mov	r18, r9
    8b12:	bb 24       	eor	r11, r11
    8b14:	c6 01       	movw	r24, r12
    8b16:	04 96       	adiw	r24, 0x04	; 4
    8b18:	9d 87       	std	Y+13, r25	; 0x0d
    8b1a:	8c 87       	std	Y+12, r24	; 0x0c
    8b1c:	f6 01       	movw	r30, r12
    8b1e:	60 81       	ld	r22, Z
    8b20:	71 81       	ldd	r23, Z+1	; 0x01
    8b22:	82 81       	ldd	r24, Z+2	; 0x02
    8b24:	93 81       	ldd	r25, Z+3	; 0x03
    8b26:	ae 01       	movw	r20, r28
    8b28:	4f 5f       	subi	r20, 0xFF	; 255
    8b2a:	5f 4f       	sbci	r21, 0xFF	; 255
    8b2c:	0b 2d       	mov	r16, r11
    8b2e:	0e 94 97 48 	call	0x912e	; 0x912e <__ftoa_engine>
    8b32:	6c 01       	movw	r12, r24
    8b34:	09 81       	ldd	r16, Y+1	; 0x01
    8b36:	20 2e       	mov	r2, r16
    8b38:	33 24       	eor	r3, r3
    8b3a:	00 ff       	sbrs	r16, 0
    8b3c:	04 c0       	rjmp	.+8      	; 0x8b46 <vfprintf+0x1c4>
    8b3e:	03 fd       	sbrc	r16, 3
    8b40:	02 c0       	rjmp	.+4      	; 0x8b46 <vfprintf+0x1c4>
    8b42:	1d e2       	ldi	r17, 0x2D	; 45
    8b44:	09 c0       	rjmp	.+18     	; 0x8b58 <vfprintf+0x1d6>
    8b46:	f1 fe       	sbrs	r15, 1
    8b48:	02 c0       	rjmp	.+4      	; 0x8b4e <vfprintf+0x1cc>
    8b4a:	1b e2       	ldi	r17, 0x2B	; 43
    8b4c:	05 c0       	rjmp	.+10     	; 0x8b58 <vfprintf+0x1d6>
    8b4e:	f2 fc       	sbrc	r15, 2
    8b50:	02 c0       	rjmp	.+4      	; 0x8b56 <vfprintf+0x1d4>
    8b52:	10 e0       	ldi	r17, 0x00	; 0
    8b54:	01 c0       	rjmp	.+2      	; 0x8b58 <vfprintf+0x1d6>
    8b56:	10 e2       	ldi	r17, 0x20	; 32
    8b58:	c1 01       	movw	r24, r2
    8b5a:	8c 70       	andi	r24, 0x0C	; 12
    8b5c:	90 70       	andi	r25, 0x00	; 0
    8b5e:	89 2b       	or	r24, r25
    8b60:	b9 f1       	breq	.+110    	; 0x8bd0 <vfprintf+0x24e>
    8b62:	11 23       	and	r17, r17
    8b64:	11 f4       	brne	.+4      	; 0x8b6a <vfprintf+0x1e8>
    8b66:	83 e0       	ldi	r24, 0x03	; 3
    8b68:	01 c0       	rjmp	.+2      	; 0x8b6c <vfprintf+0x1ea>
    8b6a:	84 e0       	ldi	r24, 0x04	; 4
    8b6c:	88 15       	cp	r24, r8
    8b6e:	10 f0       	brcs	.+4      	; 0x8b74 <vfprintf+0x1f2>
    8b70:	88 24       	eor	r8, r8
    8b72:	0a c0       	rjmp	.+20     	; 0x8b88 <vfprintf+0x206>
    8b74:	88 1a       	sub	r8, r24
    8b76:	f3 fc       	sbrc	r15, 3
    8b78:	07 c0       	rjmp	.+14     	; 0x8b88 <vfprintf+0x206>
    8b7a:	80 e2       	ldi	r24, 0x20	; 32
    8b7c:	90 e0       	ldi	r25, 0x00	; 0
    8b7e:	b3 01       	movw	r22, r6
    8b80:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    8b84:	8a 94       	dec	r8
    8b86:	c9 f7       	brne	.-14     	; 0x8b7a <vfprintf+0x1f8>
    8b88:	11 23       	and	r17, r17
    8b8a:	29 f0       	breq	.+10     	; 0x8b96 <vfprintf+0x214>
    8b8c:	81 2f       	mov	r24, r17
    8b8e:	90 e0       	ldi	r25, 0x00	; 0
    8b90:	b3 01       	movw	r22, r6
    8b92:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    8b96:	23 fe       	sbrs	r2, 3
    8b98:	03 c0       	rjmp	.+6      	; 0x8ba0 <vfprintf+0x21e>
    8b9a:	0c e8       	ldi	r16, 0x8C	; 140
    8b9c:	10 e0       	ldi	r17, 0x00	; 0
    8b9e:	0e c0       	rjmp	.+28     	; 0x8bbc <vfprintf+0x23a>
    8ba0:	00 e9       	ldi	r16, 0x90	; 144
    8ba2:	10 e0       	ldi	r17, 0x00	; 0
    8ba4:	0b c0       	rjmp	.+22     	; 0x8bbc <vfprintf+0x23a>
    8ba6:	e1 14       	cp	r14, r1
    8ba8:	f1 04       	cpc	r15, r1
    8baa:	09 f0       	breq	.+2      	; 0x8bae <vfprintf+0x22c>
    8bac:	80 52       	subi	r24, 0x20	; 32
    8bae:	90 e0       	ldi	r25, 0x00	; 0
    8bb0:	b3 01       	movw	r22, r6
    8bb2:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    8bb6:	0f 5f       	subi	r16, 0xFF	; 255
    8bb8:	1f 4f       	sbci	r17, 0xFF	; 255
    8bba:	05 c0       	rjmp	.+10     	; 0x8bc6 <vfprintf+0x244>
    8bbc:	ef 2c       	mov	r14, r15
    8bbe:	ff 24       	eor	r15, r15
    8bc0:	f0 e1       	ldi	r31, 0x10	; 16
    8bc2:	ef 22       	and	r14, r31
    8bc4:	ff 24       	eor	r15, r15
    8bc6:	f8 01       	movw	r30, r16
    8bc8:	84 91       	lpm	r24, Z+
    8bca:	88 23       	and	r24, r24
    8bcc:	61 f7       	brne	.-40     	; 0x8ba6 <vfprintf+0x224>
    8bce:	14 c1       	rjmp	.+552    	; 0x8df8 <vfprintf+0x476>
    8bd0:	f7 fe       	sbrs	r15, 7
    8bd2:	12 c0       	rjmp	.+36     	; 0x8bf8 <vfprintf+0x276>
    8bd4:	bc 0c       	add	r11, r12
    8bd6:	24 fe       	sbrs	r2, 4
    8bd8:	04 c0       	rjmp	.+8      	; 0x8be2 <vfprintf+0x260>
    8bda:	8a 81       	ldd	r24, Y+2	; 0x02
    8bdc:	81 33       	cpi	r24, 0x31	; 49
    8bde:	09 f4       	brne	.+2      	; 0x8be2 <vfprintf+0x260>
    8be0:	ba 94       	dec	r11
    8be2:	1b 14       	cp	r1, r11
    8be4:	1c f0       	brlt	.+6      	; 0x8bec <vfprintf+0x26a>
    8be6:	bb 24       	eor	r11, r11
    8be8:	b3 94       	inc	r11
    8bea:	2d c0       	rjmp	.+90     	; 0x8c46 <vfprintf+0x2c4>
    8bec:	f8 e0       	ldi	r31, 0x08	; 8
    8bee:	fb 15       	cp	r31, r11
    8bf0:	50 f5       	brcc	.+84     	; 0x8c46 <vfprintf+0x2c4>
    8bf2:	38 e0       	ldi	r19, 0x08	; 8
    8bf4:	b3 2e       	mov	r11, r19
    8bf6:	27 c0       	rjmp	.+78     	; 0x8c46 <vfprintf+0x2c4>
    8bf8:	f6 fc       	sbrc	r15, 6
    8bfa:	25 c0       	rjmp	.+74     	; 0x8c46 <vfprintf+0x2c4>
    8bfc:	89 2d       	mov	r24, r9
    8bfe:	90 e0       	ldi	r25, 0x00	; 0
    8c00:	8c 15       	cp	r24, r12
    8c02:	9d 05       	cpc	r25, r13
    8c04:	4c f0       	brlt	.+18     	; 0x8c18 <vfprintf+0x296>
    8c06:	2c ef       	ldi	r18, 0xFC	; 252
    8c08:	c2 16       	cp	r12, r18
    8c0a:	2f ef       	ldi	r18, 0xFF	; 255
    8c0c:	d2 06       	cpc	r13, r18
    8c0e:	24 f0       	brlt	.+8      	; 0x8c18 <vfprintf+0x296>
    8c10:	30 e8       	ldi	r19, 0x80	; 128
    8c12:	f3 2a       	or	r15, r19
    8c14:	01 c0       	rjmp	.+2      	; 0x8c18 <vfprintf+0x296>
    8c16:	9a 94       	dec	r9
    8c18:	99 20       	and	r9, r9
    8c1a:	49 f0       	breq	.+18     	; 0x8c2e <vfprintf+0x2ac>
    8c1c:	e2 e0       	ldi	r30, 0x02	; 2
    8c1e:	f0 e0       	ldi	r31, 0x00	; 0
    8c20:	ec 0f       	add	r30, r28
    8c22:	fd 1f       	adc	r31, r29
    8c24:	e9 0d       	add	r30, r9
    8c26:	f1 1d       	adc	r31, r1
    8c28:	80 81       	ld	r24, Z
    8c2a:	80 33       	cpi	r24, 0x30	; 48
    8c2c:	a1 f3       	breq	.-24     	; 0x8c16 <vfprintf+0x294>
    8c2e:	f7 fe       	sbrs	r15, 7
    8c30:	0a c0       	rjmp	.+20     	; 0x8c46 <vfprintf+0x2c4>
    8c32:	b9 2c       	mov	r11, r9
    8c34:	b3 94       	inc	r11
    8c36:	89 2d       	mov	r24, r9
    8c38:	90 e0       	ldi	r25, 0x00	; 0
    8c3a:	c8 16       	cp	r12, r24
    8c3c:	d9 06       	cpc	r13, r25
    8c3e:	14 f0       	brlt	.+4      	; 0x8c44 <vfprintf+0x2c2>
    8c40:	99 24       	eor	r9, r9
    8c42:	01 c0       	rjmp	.+2      	; 0x8c46 <vfprintf+0x2c4>
    8c44:	9c 18       	sub	r9, r12
    8c46:	f7 fc       	sbrc	r15, 7
    8c48:	03 c0       	rjmp	.+6      	; 0x8c50 <vfprintf+0x2ce>
    8c4a:	25 e0       	ldi	r18, 0x05	; 5
    8c4c:	30 e0       	ldi	r19, 0x00	; 0
    8c4e:	09 c0       	rjmp	.+18     	; 0x8c62 <vfprintf+0x2e0>
    8c50:	1c 14       	cp	r1, r12
    8c52:	1d 04       	cpc	r1, r13
    8c54:	1c f0       	brlt	.+6      	; 0x8c5c <vfprintf+0x2da>
    8c56:	21 e0       	ldi	r18, 0x01	; 1
    8c58:	30 e0       	ldi	r19, 0x00	; 0
    8c5a:	03 c0       	rjmp	.+6      	; 0x8c62 <vfprintf+0x2e0>
    8c5c:	96 01       	movw	r18, r12
    8c5e:	2f 5f       	subi	r18, 0xFF	; 255
    8c60:	3f 4f       	sbci	r19, 0xFF	; 255
    8c62:	11 23       	and	r17, r17
    8c64:	11 f0       	breq	.+4      	; 0x8c6a <vfprintf+0x2e8>
    8c66:	2f 5f       	subi	r18, 0xFF	; 255
    8c68:	3f 4f       	sbci	r19, 0xFF	; 255
    8c6a:	99 20       	and	r9, r9
    8c6c:	29 f0       	breq	.+10     	; 0x8c78 <vfprintf+0x2f6>
    8c6e:	89 2d       	mov	r24, r9
    8c70:	90 e0       	ldi	r25, 0x00	; 0
    8c72:	01 96       	adiw	r24, 0x01	; 1
    8c74:	28 0f       	add	r18, r24
    8c76:	39 1f       	adc	r19, r25
    8c78:	88 2d       	mov	r24, r8
    8c7a:	90 e0       	ldi	r25, 0x00	; 0
    8c7c:	28 17       	cp	r18, r24
    8c7e:	39 07       	cpc	r19, r25
    8c80:	14 f0       	brlt	.+4      	; 0x8c86 <vfprintf+0x304>
    8c82:	88 24       	eor	r8, r8
    8c84:	01 c0       	rjmp	.+2      	; 0x8c88 <vfprintf+0x306>
    8c86:	82 1a       	sub	r8, r18
    8c88:	4f 2c       	mov	r4, r15
    8c8a:	55 24       	eor	r5, r5
    8c8c:	c2 01       	movw	r24, r4
    8c8e:	89 70       	andi	r24, 0x09	; 9
    8c90:	90 70       	andi	r25, 0x00	; 0
    8c92:	89 2b       	or	r24, r25
    8c94:	39 f0       	breq	.+14     	; 0x8ca4 <vfprintf+0x322>
    8c96:	08 c0       	rjmp	.+16     	; 0x8ca8 <vfprintf+0x326>
    8c98:	80 e2       	ldi	r24, 0x20	; 32
    8c9a:	90 e0       	ldi	r25, 0x00	; 0
    8c9c:	b3 01       	movw	r22, r6
    8c9e:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    8ca2:	8a 94       	dec	r8
    8ca4:	88 20       	and	r8, r8
    8ca6:	c1 f7       	brne	.-16     	; 0x8c98 <vfprintf+0x316>
    8ca8:	11 23       	and	r17, r17
    8caa:	29 f0       	breq	.+10     	; 0x8cb6 <vfprintf+0x334>
    8cac:	81 2f       	mov	r24, r17
    8cae:	90 e0       	ldi	r25, 0x00	; 0
    8cb0:	b3 01       	movw	r22, r6
    8cb2:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    8cb6:	43 fe       	sbrs	r4, 3
    8cb8:	07 c0       	rjmp	.+14     	; 0x8cc8 <vfprintf+0x346>
    8cba:	08 c0       	rjmp	.+16     	; 0x8ccc <vfprintf+0x34a>
    8cbc:	80 e3       	ldi	r24, 0x30	; 48
    8cbe:	90 e0       	ldi	r25, 0x00	; 0
    8cc0:	b3 01       	movw	r22, r6
    8cc2:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    8cc6:	8a 94       	dec	r8
    8cc8:	88 20       	and	r8, r8
    8cca:	c1 f7       	brne	.-16     	; 0x8cbc <vfprintf+0x33a>
    8ccc:	f7 fe       	sbrs	r15, 7
    8cce:	46 c0       	rjmp	.+140    	; 0x8d5c <vfprintf+0x3da>
    8cd0:	86 01       	movw	r16, r12
    8cd2:	d7 fe       	sbrs	r13, 7
    8cd4:	02 c0       	rjmp	.+4      	; 0x8cda <vfprintf+0x358>
    8cd6:	00 e0       	ldi	r16, 0x00	; 0
    8cd8:	10 e0       	ldi	r17, 0x00	; 0
    8cda:	76 01       	movw	r14, r12
    8cdc:	08 94       	sec
    8cde:	e1 1c       	adc	r14, r1
    8ce0:	f1 1c       	adc	r15, r1
    8ce2:	e0 1a       	sub	r14, r16
    8ce4:	f1 0a       	sbc	r15, r17
    8ce6:	41 e0       	ldi	r20, 0x01	; 1
    8ce8:	50 e0       	ldi	r21, 0x00	; 0
    8cea:	4c 0f       	add	r20, r28
    8cec:	5d 1f       	adc	r21, r29
    8cee:	e4 0e       	add	r14, r20
    8cf0:	f5 1e       	adc	r15, r21
    8cf2:	26 01       	movw	r4, r12
    8cf4:	4b 18       	sub	r4, r11
    8cf6:	51 08       	sbc	r5, r1
    8cf8:	89 2d       	mov	r24, r9
    8cfa:	90 e0       	ldi	r25, 0x00	; 0
    8cfc:	aa 24       	eor	r10, r10
    8cfe:	bb 24       	eor	r11, r11
    8d00:	a8 1a       	sub	r10, r24
    8d02:	b9 0a       	sbc	r11, r25
    8d04:	5f ef       	ldi	r21, 0xFF	; 255
    8d06:	0f 3f       	cpi	r16, 0xFF	; 255
    8d08:	15 07       	cpc	r17, r21
    8d0a:	29 f4       	brne	.+10     	; 0x8d16 <vfprintf+0x394>
    8d0c:	8e e2       	ldi	r24, 0x2E	; 46
    8d0e:	90 e0       	ldi	r25, 0x00	; 0
    8d10:	b3 01       	movw	r22, r6
    8d12:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    8d16:	c0 16       	cp	r12, r16
    8d18:	d1 06       	cpc	r13, r17
    8d1a:	34 f0       	brlt	.+12     	; 0x8d28 <vfprintf+0x3a6>
    8d1c:	40 16       	cp	r4, r16
    8d1e:	51 06       	cpc	r5, r17
    8d20:	1c f4       	brge	.+6      	; 0x8d28 <vfprintf+0x3a6>
    8d22:	f7 01       	movw	r30, r14
    8d24:	80 81       	ld	r24, Z
    8d26:	01 c0       	rjmp	.+2      	; 0x8d2a <vfprintf+0x3a8>
    8d28:	80 e3       	ldi	r24, 0x30	; 48
    8d2a:	01 50       	subi	r16, 0x01	; 1
    8d2c:	10 40       	sbci	r17, 0x00	; 0
    8d2e:	08 94       	sec
    8d30:	e1 1c       	adc	r14, r1
    8d32:	f1 1c       	adc	r15, r1
    8d34:	0a 15       	cp	r16, r10
    8d36:	1b 05       	cpc	r17, r11
    8d38:	2c f0       	brlt	.+10     	; 0x8d44 <vfprintf+0x3c2>
    8d3a:	90 e0       	ldi	r25, 0x00	; 0
    8d3c:	b3 01       	movw	r22, r6
    8d3e:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    8d42:	e0 cf       	rjmp	.-64     	; 0x8d04 <vfprintf+0x382>
    8d44:	0c 15       	cp	r16, r12
    8d46:	1d 05       	cpc	r17, r13
    8d48:	39 f4       	brne	.+14     	; 0x8d58 <vfprintf+0x3d6>
    8d4a:	9a 81       	ldd	r25, Y+2	; 0x02
    8d4c:	96 33       	cpi	r25, 0x36	; 54
    8d4e:	18 f4       	brcc	.+6      	; 0x8d56 <vfprintf+0x3d4>
    8d50:	95 33       	cpi	r25, 0x35	; 53
    8d52:	11 f4       	brne	.+4      	; 0x8d58 <vfprintf+0x3d6>
    8d54:	24 fe       	sbrs	r2, 4
    8d56:	81 e3       	ldi	r24, 0x31	; 49
    8d58:	90 e0       	ldi	r25, 0x00	; 0
    8d5a:	4b c0       	rjmp	.+150    	; 0x8df2 <vfprintf+0x470>
    8d5c:	8a 81       	ldd	r24, Y+2	; 0x02
    8d5e:	81 33       	cpi	r24, 0x31	; 49
    8d60:	09 f0       	breq	.+2      	; 0x8d64 <vfprintf+0x3e2>
    8d62:	0f 7e       	andi	r16, 0xEF	; 239
    8d64:	90 e0       	ldi	r25, 0x00	; 0
    8d66:	b3 01       	movw	r22, r6
    8d68:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    8d6c:	99 20       	and	r9, r9
    8d6e:	a1 f0       	breq	.+40     	; 0x8d98 <vfprintf+0x416>
    8d70:	8e e2       	ldi	r24, 0x2E	; 46
    8d72:	90 e0       	ldi	r25, 0x00	; 0
    8d74:	b3 01       	movw	r22, r6
    8d76:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    8d7a:	12 e0       	ldi	r17, 0x02	; 2
    8d7c:	e1 e0       	ldi	r30, 0x01	; 1
    8d7e:	f0 e0       	ldi	r31, 0x00	; 0
    8d80:	ec 0f       	add	r30, r28
    8d82:	fd 1f       	adc	r31, r29
    8d84:	e1 0f       	add	r30, r17
    8d86:	f1 1d       	adc	r31, r1
    8d88:	1f 5f       	subi	r17, 0xFF	; 255
    8d8a:	80 81       	ld	r24, Z
    8d8c:	90 e0       	ldi	r25, 0x00	; 0
    8d8e:	b3 01       	movw	r22, r6
    8d90:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    8d94:	9a 94       	dec	r9
    8d96:	91 f7       	brne	.-28     	; 0x8d7c <vfprintf+0x3fa>
    8d98:	44 fc       	sbrc	r4, 4
    8d9a:	03 c0       	rjmp	.+6      	; 0x8da2 <vfprintf+0x420>
    8d9c:	85 e6       	ldi	r24, 0x65	; 101
    8d9e:	90 e0       	ldi	r25, 0x00	; 0
    8da0:	02 c0       	rjmp	.+4      	; 0x8da6 <vfprintf+0x424>
    8da2:	85 e4       	ldi	r24, 0x45	; 69
    8da4:	90 e0       	ldi	r25, 0x00	; 0
    8da6:	b3 01       	movw	r22, r6
    8da8:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    8dac:	d7 fc       	sbrc	r13, 7
    8dae:	05 c0       	rjmp	.+10     	; 0x8dba <vfprintf+0x438>
    8db0:	c1 14       	cp	r12, r1
    8db2:	d1 04       	cpc	r13, r1
    8db4:	41 f4       	brne	.+16     	; 0x8dc6 <vfprintf+0x444>
    8db6:	04 ff       	sbrs	r16, 4
    8db8:	06 c0       	rjmp	.+12     	; 0x8dc6 <vfprintf+0x444>
    8dba:	d0 94       	com	r13
    8dbc:	c1 94       	neg	r12
    8dbe:	d1 08       	sbc	r13, r1
    8dc0:	d3 94       	inc	r13
    8dc2:	8d e2       	ldi	r24, 0x2D	; 45
    8dc4:	01 c0       	rjmp	.+2      	; 0x8dc8 <vfprintf+0x446>
    8dc6:	8b e2       	ldi	r24, 0x2B	; 43
    8dc8:	90 e0       	ldi	r25, 0x00	; 0
    8dca:	b3 01       	movw	r22, r6
    8dcc:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    8dd0:	80 e3       	ldi	r24, 0x30	; 48
    8dd2:	05 c0       	rjmp	.+10     	; 0x8dde <vfprintf+0x45c>
    8dd4:	8f 5f       	subi	r24, 0xFF	; 255
    8dd6:	26 ef       	ldi	r18, 0xF6	; 246
    8dd8:	3f ef       	ldi	r19, 0xFF	; 255
    8dda:	c2 0e       	add	r12, r18
    8ddc:	d3 1e       	adc	r13, r19
    8dde:	3a e0       	ldi	r19, 0x0A	; 10
    8de0:	c3 16       	cp	r12, r19
    8de2:	d1 04       	cpc	r13, r1
    8de4:	bc f7       	brge	.-18     	; 0x8dd4 <vfprintf+0x452>
    8de6:	90 e0       	ldi	r25, 0x00	; 0
    8de8:	b3 01       	movw	r22, r6
    8dea:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    8dee:	c6 01       	movw	r24, r12
    8df0:	c0 96       	adiw	r24, 0x30	; 48
    8df2:	b3 01       	movw	r22, r6
    8df4:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    8df8:	cc 84       	ldd	r12, Y+12	; 0x0c
    8dfa:	dd 84       	ldd	r13, Y+13	; 0x0d
    8dfc:	52 c1       	rjmp	.+676    	; 0x90a2 <vfprintf+0x720>
    8dfe:	93 36       	cpi	r25, 0x63	; 99
    8e00:	31 f0       	breq	.+12     	; 0x8e0e <vfprintf+0x48c>
    8e02:	93 37       	cpi	r25, 0x73	; 115
    8e04:	99 f0       	breq	.+38     	; 0x8e2c <vfprintf+0x4aa>
    8e06:	93 35       	cpi	r25, 0x53	; 83
    8e08:	09 f0       	breq	.+2      	; 0x8e0c <vfprintf+0x48a>
    8e0a:	59 c0       	rjmp	.+178    	; 0x8ebe <vfprintf+0x53c>
    8e0c:	23 c0       	rjmp	.+70     	; 0x8e54 <vfprintf+0x4d2>
    8e0e:	f6 01       	movw	r30, r12
    8e10:	80 81       	ld	r24, Z
    8e12:	89 83       	std	Y+1, r24	; 0x01
    8e14:	5e 01       	movw	r10, r28
    8e16:	08 94       	sec
    8e18:	a1 1c       	adc	r10, r1
    8e1a:	b1 1c       	adc	r11, r1
    8e1c:	22 e0       	ldi	r18, 0x02	; 2
    8e1e:	30 e0       	ldi	r19, 0x00	; 0
    8e20:	c2 0e       	add	r12, r18
    8e22:	d3 1e       	adc	r13, r19
    8e24:	21 e0       	ldi	r18, 0x01	; 1
    8e26:	e2 2e       	mov	r14, r18
    8e28:	f1 2c       	mov	r15, r1
    8e2a:	12 c0       	rjmp	.+36     	; 0x8e50 <vfprintf+0x4ce>
    8e2c:	f6 01       	movw	r30, r12
    8e2e:	a0 80       	ld	r10, Z
    8e30:	b1 80       	ldd	r11, Z+1	; 0x01
    8e32:	16 fd       	sbrc	r17, 6
    8e34:	03 c0       	rjmp	.+6      	; 0x8e3c <vfprintf+0x4ba>
    8e36:	6f ef       	ldi	r22, 0xFF	; 255
    8e38:	7f ef       	ldi	r23, 0xFF	; 255
    8e3a:	02 c0       	rjmp	.+4      	; 0x8e40 <vfprintf+0x4be>
    8e3c:	69 2d       	mov	r22, r9
    8e3e:	70 e0       	ldi	r23, 0x00	; 0
    8e40:	22 e0       	ldi	r18, 0x02	; 2
    8e42:	30 e0       	ldi	r19, 0x00	; 0
    8e44:	c2 0e       	add	r12, r18
    8e46:	d3 1e       	adc	r13, r19
    8e48:	c5 01       	movw	r24, r10
    8e4a:	0e 94 83 49 	call	0x9306	; 0x9306 <strnlen>
    8e4e:	7c 01       	movw	r14, r24
    8e50:	1f 77       	andi	r17, 0x7F	; 127
    8e52:	13 c0       	rjmp	.+38     	; 0x8e7a <vfprintf+0x4f8>
    8e54:	f6 01       	movw	r30, r12
    8e56:	a0 80       	ld	r10, Z
    8e58:	b1 80       	ldd	r11, Z+1	; 0x01
    8e5a:	16 fd       	sbrc	r17, 6
    8e5c:	03 c0       	rjmp	.+6      	; 0x8e64 <vfprintf+0x4e2>
    8e5e:	6f ef       	ldi	r22, 0xFF	; 255
    8e60:	7f ef       	ldi	r23, 0xFF	; 255
    8e62:	02 c0       	rjmp	.+4      	; 0x8e68 <vfprintf+0x4e6>
    8e64:	69 2d       	mov	r22, r9
    8e66:	70 e0       	ldi	r23, 0x00	; 0
    8e68:	22 e0       	ldi	r18, 0x02	; 2
    8e6a:	30 e0       	ldi	r19, 0x00	; 0
    8e6c:	c2 0e       	add	r12, r18
    8e6e:	d3 1e       	adc	r13, r19
    8e70:	c5 01       	movw	r24, r10
    8e72:	0e 94 6f 49 	call	0x92de	; 0x92de <strnlen_P>
    8e76:	7c 01       	movw	r14, r24
    8e78:	10 68       	ori	r17, 0x80	; 128
    8e7a:	13 ff       	sbrs	r17, 3
    8e7c:	07 c0       	rjmp	.+14     	; 0x8e8c <vfprintf+0x50a>
    8e7e:	1b c0       	rjmp	.+54     	; 0x8eb6 <vfprintf+0x534>
    8e80:	80 e2       	ldi	r24, 0x20	; 32
    8e82:	90 e0       	ldi	r25, 0x00	; 0
    8e84:	b3 01       	movw	r22, r6
    8e86:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    8e8a:	8a 94       	dec	r8
    8e8c:	88 2d       	mov	r24, r8
    8e8e:	90 e0       	ldi	r25, 0x00	; 0
    8e90:	e8 16       	cp	r14, r24
    8e92:	f9 06       	cpc	r15, r25
    8e94:	a8 f3       	brcs	.-22     	; 0x8e80 <vfprintf+0x4fe>
    8e96:	0f c0       	rjmp	.+30     	; 0x8eb6 <vfprintf+0x534>
    8e98:	f5 01       	movw	r30, r10
    8e9a:	17 fd       	sbrc	r17, 7
    8e9c:	85 91       	lpm	r24, Z+
    8e9e:	17 ff       	sbrs	r17, 7
    8ea0:	81 91       	ld	r24, Z+
    8ea2:	5f 01       	movw	r10, r30
    8ea4:	90 e0       	ldi	r25, 0x00	; 0
    8ea6:	b3 01       	movw	r22, r6
    8ea8:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    8eac:	81 10       	cpse	r8, r1
    8eae:	8a 94       	dec	r8
    8eb0:	08 94       	sec
    8eb2:	e1 08       	sbc	r14, r1
    8eb4:	f1 08       	sbc	r15, r1
    8eb6:	e1 14       	cp	r14, r1
    8eb8:	f1 04       	cpc	r15, r1
    8eba:	71 f7       	brne	.-36     	; 0x8e98 <vfprintf+0x516>
    8ebc:	f2 c0       	rjmp	.+484    	; 0x90a2 <vfprintf+0x720>
    8ebe:	94 36       	cpi	r25, 0x64	; 100
    8ec0:	11 f0       	breq	.+4      	; 0x8ec6 <vfprintf+0x544>
    8ec2:	99 36       	cpi	r25, 0x69	; 105
    8ec4:	89 f5       	brne	.+98     	; 0x8f28 <vfprintf+0x5a6>
    8ec6:	17 ff       	sbrs	r17, 7
    8ec8:	08 c0       	rjmp	.+16     	; 0x8eda <vfprintf+0x558>
    8eca:	f6 01       	movw	r30, r12
    8ecc:	20 81       	ld	r18, Z
    8ece:	31 81       	ldd	r19, Z+1	; 0x01
    8ed0:	42 81       	ldd	r20, Z+2	; 0x02
    8ed2:	53 81       	ldd	r21, Z+3	; 0x03
    8ed4:	84 e0       	ldi	r24, 0x04	; 4
    8ed6:	90 e0       	ldi	r25, 0x00	; 0
    8ed8:	0a c0       	rjmp	.+20     	; 0x8eee <vfprintf+0x56c>
    8eda:	f6 01       	movw	r30, r12
    8edc:	80 81       	ld	r24, Z
    8ede:	91 81       	ldd	r25, Z+1	; 0x01
    8ee0:	9c 01       	movw	r18, r24
    8ee2:	44 27       	eor	r20, r20
    8ee4:	37 fd       	sbrc	r19, 7
    8ee6:	40 95       	com	r20
    8ee8:	54 2f       	mov	r21, r20
    8eea:	82 e0       	ldi	r24, 0x02	; 2
    8eec:	90 e0       	ldi	r25, 0x00	; 0
    8eee:	c8 0e       	add	r12, r24
    8ef0:	d9 1e       	adc	r13, r25
    8ef2:	9f e6       	ldi	r25, 0x6F	; 111
    8ef4:	f9 2e       	mov	r15, r25
    8ef6:	f1 22       	and	r15, r17
    8ef8:	57 ff       	sbrs	r21, 7
    8efa:	09 c0       	rjmp	.+18     	; 0x8f0e <vfprintf+0x58c>
    8efc:	50 95       	com	r21
    8efe:	40 95       	com	r20
    8f00:	30 95       	com	r19
    8f02:	21 95       	neg	r18
    8f04:	3f 4f       	sbci	r19, 0xFF	; 255
    8f06:	4f 4f       	sbci	r20, 0xFF	; 255
    8f08:	5f 4f       	sbci	r21, 0xFF	; 255
    8f0a:	90 e8       	ldi	r25, 0x80	; 128
    8f0c:	f9 2a       	or	r15, r25
    8f0e:	ca 01       	movw	r24, r20
    8f10:	b9 01       	movw	r22, r18
    8f12:	ae 01       	movw	r20, r28
    8f14:	4f 5f       	subi	r20, 0xFF	; 255
    8f16:	5f 4f       	sbci	r21, 0xFF	; 255
    8f18:	2a e0       	ldi	r18, 0x0A	; 10
    8f1a:	30 e0       	ldi	r19, 0x00	; 0
    8f1c:	0e 94 eb 49 	call	0x93d6	; 0x93d6 <__ultoa_invert>
    8f20:	e8 2e       	mov	r14, r24
    8f22:	e8 89       	ldd	r30, Y+16	; 0x10
    8f24:	ee 1a       	sub	r14, r30
    8f26:	41 c0       	rjmp	.+130    	; 0x8faa <vfprintf+0x628>
    8f28:	95 37       	cpi	r25, 0x75	; 117
    8f2a:	21 f4       	brne	.+8      	; 0x8f34 <vfprintf+0x5b2>
    8f2c:	1f 7e       	andi	r17, 0xEF	; 239
    8f2e:	2a e0       	ldi	r18, 0x0A	; 10
    8f30:	30 e0       	ldi	r19, 0x00	; 0
    8f32:	1c c0       	rjmp	.+56     	; 0x8f6c <vfprintf+0x5ea>
    8f34:	19 7f       	andi	r17, 0xF9	; 249
    8f36:	9f 36       	cpi	r25, 0x6F	; 111
    8f38:	61 f0       	breq	.+24     	; 0x8f52 <vfprintf+0x5d0>
    8f3a:	90 37       	cpi	r25, 0x70	; 112
    8f3c:	20 f4       	brcc	.+8      	; 0x8f46 <vfprintf+0x5c4>
    8f3e:	98 35       	cpi	r25, 0x58	; 88
    8f40:	09 f0       	breq	.+2      	; 0x8f44 <vfprintf+0x5c2>
    8f42:	b2 c0       	rjmp	.+356    	; 0x90a8 <vfprintf+0x726>
    8f44:	0f c0       	rjmp	.+30     	; 0x8f64 <vfprintf+0x5e2>
    8f46:	90 37       	cpi	r25, 0x70	; 112
    8f48:	39 f0       	breq	.+14     	; 0x8f58 <vfprintf+0x5d6>
    8f4a:	98 37       	cpi	r25, 0x78	; 120
    8f4c:	09 f0       	breq	.+2      	; 0x8f50 <vfprintf+0x5ce>
    8f4e:	ac c0       	rjmp	.+344    	; 0x90a8 <vfprintf+0x726>
    8f50:	04 c0       	rjmp	.+8      	; 0x8f5a <vfprintf+0x5d8>
    8f52:	28 e0       	ldi	r18, 0x08	; 8
    8f54:	30 e0       	ldi	r19, 0x00	; 0
    8f56:	0a c0       	rjmp	.+20     	; 0x8f6c <vfprintf+0x5ea>
    8f58:	10 61       	ori	r17, 0x10	; 16
    8f5a:	14 fd       	sbrc	r17, 4
    8f5c:	14 60       	ori	r17, 0x04	; 4
    8f5e:	20 e1       	ldi	r18, 0x10	; 16
    8f60:	30 e0       	ldi	r19, 0x00	; 0
    8f62:	04 c0       	rjmp	.+8      	; 0x8f6c <vfprintf+0x5ea>
    8f64:	14 fd       	sbrc	r17, 4
    8f66:	16 60       	ori	r17, 0x06	; 6
    8f68:	20 e1       	ldi	r18, 0x10	; 16
    8f6a:	32 e0       	ldi	r19, 0x02	; 2
    8f6c:	17 ff       	sbrs	r17, 7
    8f6e:	08 c0       	rjmp	.+16     	; 0x8f80 <vfprintf+0x5fe>
    8f70:	f6 01       	movw	r30, r12
    8f72:	60 81       	ld	r22, Z
    8f74:	71 81       	ldd	r23, Z+1	; 0x01
    8f76:	82 81       	ldd	r24, Z+2	; 0x02
    8f78:	93 81       	ldd	r25, Z+3	; 0x03
    8f7a:	44 e0       	ldi	r20, 0x04	; 4
    8f7c:	50 e0       	ldi	r21, 0x00	; 0
    8f7e:	08 c0       	rjmp	.+16     	; 0x8f90 <vfprintf+0x60e>
    8f80:	f6 01       	movw	r30, r12
    8f82:	80 81       	ld	r24, Z
    8f84:	91 81       	ldd	r25, Z+1	; 0x01
    8f86:	bc 01       	movw	r22, r24
    8f88:	80 e0       	ldi	r24, 0x00	; 0
    8f8a:	90 e0       	ldi	r25, 0x00	; 0
    8f8c:	42 e0       	ldi	r20, 0x02	; 2
    8f8e:	50 e0       	ldi	r21, 0x00	; 0
    8f90:	c4 0e       	add	r12, r20
    8f92:	d5 1e       	adc	r13, r21
    8f94:	ae 01       	movw	r20, r28
    8f96:	4f 5f       	subi	r20, 0xFF	; 255
    8f98:	5f 4f       	sbci	r21, 0xFF	; 255
    8f9a:	0e 94 eb 49 	call	0x93d6	; 0x93d6 <__ultoa_invert>
    8f9e:	e8 2e       	mov	r14, r24
    8fa0:	58 89       	ldd	r21, Y+16	; 0x10
    8fa2:	e5 1a       	sub	r14, r21
    8fa4:	8f e7       	ldi	r24, 0x7F	; 127
    8fa6:	f8 2e       	mov	r15, r24
    8fa8:	f1 22       	and	r15, r17
    8faa:	f6 fe       	sbrs	r15, 6
    8fac:	0b c0       	rjmp	.+22     	; 0x8fc4 <vfprintf+0x642>
    8fae:	8e ef       	ldi	r24, 0xFE	; 254
    8fb0:	f8 22       	and	r15, r24
    8fb2:	e9 14       	cp	r14, r9
    8fb4:	38 f4       	brcc	.+14     	; 0x8fc4 <vfprintf+0x642>
    8fb6:	f4 fe       	sbrs	r15, 4
    8fb8:	07 c0       	rjmp	.+14     	; 0x8fc8 <vfprintf+0x646>
    8fba:	f2 fc       	sbrc	r15, 2
    8fbc:	05 c0       	rjmp	.+10     	; 0x8fc8 <vfprintf+0x646>
    8fbe:	9f ee       	ldi	r25, 0xEF	; 239
    8fc0:	f9 22       	and	r15, r25
    8fc2:	02 c0       	rjmp	.+4      	; 0x8fc8 <vfprintf+0x646>
    8fc4:	1e 2d       	mov	r17, r14
    8fc6:	01 c0       	rjmp	.+2      	; 0x8fca <vfprintf+0x648>
    8fc8:	19 2d       	mov	r17, r9
    8fca:	f4 fe       	sbrs	r15, 4
    8fcc:	0d c0       	rjmp	.+26     	; 0x8fe8 <vfprintf+0x666>
    8fce:	fe 01       	movw	r30, r28
    8fd0:	ee 0d       	add	r30, r14
    8fd2:	f1 1d       	adc	r31, r1
    8fd4:	80 81       	ld	r24, Z
    8fd6:	80 33       	cpi	r24, 0x30	; 48
    8fd8:	19 f4       	brne	.+6      	; 0x8fe0 <vfprintf+0x65e>
    8fda:	e9 ee       	ldi	r30, 0xE9	; 233
    8fdc:	fe 22       	and	r15, r30
    8fde:	08 c0       	rjmp	.+16     	; 0x8ff0 <vfprintf+0x66e>
    8fe0:	1f 5f       	subi	r17, 0xFF	; 255
    8fe2:	f2 fe       	sbrs	r15, 2
    8fe4:	05 c0       	rjmp	.+10     	; 0x8ff0 <vfprintf+0x66e>
    8fe6:	03 c0       	rjmp	.+6      	; 0x8fee <vfprintf+0x66c>
    8fe8:	8f 2d       	mov	r24, r15
    8fea:	86 78       	andi	r24, 0x86	; 134
    8fec:	09 f0       	breq	.+2      	; 0x8ff0 <vfprintf+0x66e>
    8fee:	1f 5f       	subi	r17, 0xFF	; 255
    8ff0:	0f 2d       	mov	r16, r15
    8ff2:	f3 fc       	sbrc	r15, 3
    8ff4:	14 c0       	rjmp	.+40     	; 0x901e <vfprintf+0x69c>
    8ff6:	f0 fe       	sbrs	r15, 0
    8ff8:	0f c0       	rjmp	.+30     	; 0x9018 <vfprintf+0x696>
    8ffa:	18 15       	cp	r17, r8
    8ffc:	10 f0       	brcs	.+4      	; 0x9002 <vfprintf+0x680>
    8ffe:	9e 2c       	mov	r9, r14
    9000:	0b c0       	rjmp	.+22     	; 0x9018 <vfprintf+0x696>
    9002:	9e 2c       	mov	r9, r14
    9004:	98 0c       	add	r9, r8
    9006:	91 1a       	sub	r9, r17
    9008:	18 2d       	mov	r17, r8
    900a:	06 c0       	rjmp	.+12     	; 0x9018 <vfprintf+0x696>
    900c:	80 e2       	ldi	r24, 0x20	; 32
    900e:	90 e0       	ldi	r25, 0x00	; 0
    9010:	b3 01       	movw	r22, r6
    9012:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    9016:	1f 5f       	subi	r17, 0xFF	; 255
    9018:	18 15       	cp	r17, r8
    901a:	c0 f3       	brcs	.-16     	; 0x900c <vfprintf+0x68a>
    901c:	04 c0       	rjmp	.+8      	; 0x9026 <vfprintf+0x6a4>
    901e:	18 15       	cp	r17, r8
    9020:	10 f4       	brcc	.+4      	; 0x9026 <vfprintf+0x6a4>
    9022:	81 1a       	sub	r8, r17
    9024:	01 c0       	rjmp	.+2      	; 0x9028 <vfprintf+0x6a6>
    9026:	88 24       	eor	r8, r8
    9028:	04 ff       	sbrs	r16, 4
    902a:	0f c0       	rjmp	.+30     	; 0x904a <vfprintf+0x6c8>
    902c:	80 e3       	ldi	r24, 0x30	; 48
    902e:	90 e0       	ldi	r25, 0x00	; 0
    9030:	b3 01       	movw	r22, r6
    9032:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    9036:	02 ff       	sbrs	r16, 2
    9038:	1d c0       	rjmp	.+58     	; 0x9074 <vfprintf+0x6f2>
    903a:	01 fd       	sbrc	r16, 1
    903c:	03 c0       	rjmp	.+6      	; 0x9044 <vfprintf+0x6c2>
    903e:	88 e7       	ldi	r24, 0x78	; 120
    9040:	90 e0       	ldi	r25, 0x00	; 0
    9042:	0e c0       	rjmp	.+28     	; 0x9060 <vfprintf+0x6de>
    9044:	88 e5       	ldi	r24, 0x58	; 88
    9046:	90 e0       	ldi	r25, 0x00	; 0
    9048:	0b c0       	rjmp	.+22     	; 0x9060 <vfprintf+0x6de>
    904a:	80 2f       	mov	r24, r16
    904c:	86 78       	andi	r24, 0x86	; 134
    904e:	91 f0       	breq	.+36     	; 0x9074 <vfprintf+0x6f2>
    9050:	01 ff       	sbrs	r16, 1
    9052:	02 c0       	rjmp	.+4      	; 0x9058 <vfprintf+0x6d6>
    9054:	8b e2       	ldi	r24, 0x2B	; 43
    9056:	01 c0       	rjmp	.+2      	; 0x905a <vfprintf+0x6d8>
    9058:	80 e2       	ldi	r24, 0x20	; 32
    905a:	f7 fc       	sbrc	r15, 7
    905c:	8d e2       	ldi	r24, 0x2D	; 45
    905e:	90 e0       	ldi	r25, 0x00	; 0
    9060:	b3 01       	movw	r22, r6
    9062:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    9066:	06 c0       	rjmp	.+12     	; 0x9074 <vfprintf+0x6f2>
    9068:	80 e3       	ldi	r24, 0x30	; 48
    906a:	90 e0       	ldi	r25, 0x00	; 0
    906c:	b3 01       	movw	r22, r6
    906e:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    9072:	9a 94       	dec	r9
    9074:	e9 14       	cp	r14, r9
    9076:	c0 f3       	brcs	.-16     	; 0x9068 <vfprintf+0x6e6>
    9078:	ea 94       	dec	r14
    907a:	e1 e0       	ldi	r30, 0x01	; 1
    907c:	f0 e0       	ldi	r31, 0x00	; 0
    907e:	ec 0f       	add	r30, r28
    9080:	fd 1f       	adc	r31, r29
    9082:	ee 0d       	add	r30, r14
    9084:	f1 1d       	adc	r31, r1
    9086:	80 81       	ld	r24, Z
    9088:	90 e0       	ldi	r25, 0x00	; 0
    908a:	b3 01       	movw	r22, r6
    908c:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    9090:	ee 20       	and	r14, r14
    9092:	91 f7       	brne	.-28     	; 0x9078 <vfprintf+0x6f6>
    9094:	06 c0       	rjmp	.+12     	; 0x90a2 <vfprintf+0x720>
    9096:	80 e2       	ldi	r24, 0x20	; 32
    9098:	90 e0       	ldi	r25, 0x00	; 0
    909a:	b3 01       	movw	r22, r6
    909c:	0e 94 8e 49 	call	0x931c	; 0x931c <fputc>
    90a0:	8a 94       	dec	r8
    90a2:	88 20       	and	r8, r8
    90a4:	c1 f7       	brne	.-16     	; 0x9096 <vfprintf+0x714>
    90a6:	99 cc       	rjmp	.-1742   	; 0x89da <vfprintf+0x58>
    90a8:	f3 01       	movw	r30, r6
    90aa:	66 81       	ldd	r22, Z+6	; 0x06
    90ac:	77 81       	ldd	r23, Z+7	; 0x07
    90ae:	cb 01       	movw	r24, r22
    90b0:	61 96       	adiw	r28, 0x11	; 17
    90b2:	0f b6       	in	r0, 0x3f	; 63
    90b4:	f8 94       	cli
    90b6:	de bf       	out	0x3e, r29	; 62
    90b8:	0f be       	out	0x3f, r0	; 63
    90ba:	cd bf       	out	0x3d, r28	; 61
    90bc:	cf 91       	pop	r28
    90be:	df 91       	pop	r29
    90c0:	1f 91       	pop	r17
    90c2:	0f 91       	pop	r16
    90c4:	ff 90       	pop	r15
    90c6:	ef 90       	pop	r14
    90c8:	df 90       	pop	r13
    90ca:	cf 90       	pop	r12
    90cc:	bf 90       	pop	r11
    90ce:	af 90       	pop	r10
    90d0:	9f 90       	pop	r9
    90d2:	8f 90       	pop	r8
    90d4:	7f 90       	pop	r7
    90d6:	6f 90       	pop	r6
    90d8:	5f 90       	pop	r5
    90da:	4f 90       	pop	r4
    90dc:	3f 90       	pop	r3
    90de:	2f 90       	pop	r2
    90e0:	08 95       	ret

000090e2 <__udivmodsi4>:
    90e2:	a1 e2       	ldi	r26, 0x21	; 33
    90e4:	1a 2e       	mov	r1, r26
    90e6:	aa 1b       	sub	r26, r26
    90e8:	bb 1b       	sub	r27, r27
    90ea:	fd 01       	movw	r30, r26
    90ec:	0d c0       	rjmp	.+26     	; 0x9108 <__udivmodsi4_ep>

000090ee <__udivmodsi4_loop>:
    90ee:	aa 1f       	adc	r26, r26
    90f0:	bb 1f       	adc	r27, r27
    90f2:	ee 1f       	adc	r30, r30
    90f4:	ff 1f       	adc	r31, r31
    90f6:	a2 17       	cp	r26, r18
    90f8:	b3 07       	cpc	r27, r19
    90fa:	e4 07       	cpc	r30, r20
    90fc:	f5 07       	cpc	r31, r21
    90fe:	20 f0       	brcs	.+8      	; 0x9108 <__udivmodsi4_ep>
    9100:	a2 1b       	sub	r26, r18
    9102:	b3 0b       	sbc	r27, r19
    9104:	e4 0b       	sbc	r30, r20
    9106:	f5 0b       	sbc	r31, r21

00009108 <__udivmodsi4_ep>:
    9108:	66 1f       	adc	r22, r22
    910a:	77 1f       	adc	r23, r23
    910c:	88 1f       	adc	r24, r24
    910e:	99 1f       	adc	r25, r25
    9110:	1a 94       	dec	r1
    9112:	69 f7       	brne	.-38     	; 0x90ee <__udivmodsi4_loop>
    9114:	60 95       	com	r22
    9116:	70 95       	com	r23
    9118:	80 95       	com	r24
    911a:	90 95       	com	r25
    911c:	9b 01       	movw	r18, r22
    911e:	ac 01       	movw	r20, r24
    9120:	bd 01       	movw	r22, r26
    9122:	cf 01       	movw	r24, r30
    9124:	08 95       	ret

00009126 <atof>:
    9126:	66 27       	eor	r22, r22
    9128:	77 27       	eor	r23, r23
    912a:	0c 94 5c 4a 	jmp	0x94b8	; 0x94b8 <strtod>

0000912e <__ftoa_engine>:
    912e:	28 30       	cpi	r18, 0x08	; 8
    9130:	08 f0       	brcs	.+2      	; 0x9134 <__ftoa_engine+0x6>
    9132:	27 e0       	ldi	r18, 0x07	; 7
    9134:	33 27       	eor	r19, r19
    9136:	da 01       	movw	r26, r20
    9138:	99 0f       	add	r25, r25
    913a:	31 1d       	adc	r19, r1
    913c:	87 fd       	sbrc	r24, 7
    913e:	91 60       	ori	r25, 0x01	; 1
    9140:	00 96       	adiw	r24, 0x00	; 0
    9142:	61 05       	cpc	r22, r1
    9144:	71 05       	cpc	r23, r1
    9146:	39 f4       	brne	.+14     	; 0x9156 <__ftoa_engine+0x28>
    9148:	32 60       	ori	r19, 0x02	; 2
    914a:	2e 5f       	subi	r18, 0xFE	; 254
    914c:	3d 93       	st	X+, r19
    914e:	30 e3       	ldi	r19, 0x30	; 48
    9150:	2a 95       	dec	r18
    9152:	e1 f7       	brne	.-8      	; 0x914c <__ftoa_engine+0x1e>
    9154:	08 95       	ret
    9156:	9f 3f       	cpi	r25, 0xFF	; 255
    9158:	30 f0       	brcs	.+12     	; 0x9166 <__ftoa_engine+0x38>
    915a:	80 38       	cpi	r24, 0x80	; 128
    915c:	71 05       	cpc	r23, r1
    915e:	61 05       	cpc	r22, r1
    9160:	09 f0       	breq	.+2      	; 0x9164 <__ftoa_engine+0x36>
    9162:	3c 5f       	subi	r19, 0xFC	; 252
    9164:	3c 5f       	subi	r19, 0xFC	; 252
    9166:	3d 93       	st	X+, r19
    9168:	91 30       	cpi	r25, 0x01	; 1
    916a:	08 f0       	brcs	.+2      	; 0x916e <__ftoa_engine+0x40>
    916c:	80 68       	ori	r24, 0x80	; 128
    916e:	91 1d       	adc	r25, r1
    9170:	df 93       	push	r29
    9172:	cf 93       	push	r28
    9174:	1f 93       	push	r17
    9176:	0f 93       	push	r16
    9178:	ff 92       	push	r15
    917a:	ef 92       	push	r14
    917c:	19 2f       	mov	r17, r25
    917e:	98 7f       	andi	r25, 0xF8	; 248
    9180:	96 95       	lsr	r25
    9182:	e9 2f       	mov	r30, r25
    9184:	96 95       	lsr	r25
    9186:	96 95       	lsr	r25
    9188:	e9 0f       	add	r30, r25
    918a:	ff 27       	eor	r31, r31
    918c:	e2 51       	subi	r30, 0x12	; 18
    918e:	ff 4f       	sbci	r31, 0xFF	; 255
    9190:	99 27       	eor	r25, r25
    9192:	33 27       	eor	r19, r19
    9194:	ee 24       	eor	r14, r14
    9196:	ff 24       	eor	r15, r15
    9198:	a7 01       	movw	r20, r14
    919a:	e7 01       	movw	r28, r14
    919c:	05 90       	lpm	r0, Z+
    919e:	08 94       	sec
    91a0:	07 94       	ror	r0
    91a2:	28 f4       	brcc	.+10     	; 0x91ae <__ftoa_engine+0x80>
    91a4:	36 0f       	add	r19, r22
    91a6:	e7 1e       	adc	r14, r23
    91a8:	f8 1e       	adc	r15, r24
    91aa:	49 1f       	adc	r20, r25
    91ac:	51 1d       	adc	r21, r1
    91ae:	66 0f       	add	r22, r22
    91b0:	77 1f       	adc	r23, r23
    91b2:	88 1f       	adc	r24, r24
    91b4:	99 1f       	adc	r25, r25
    91b6:	06 94       	lsr	r0
    91b8:	a1 f7       	brne	.-24     	; 0x91a2 <__ftoa_engine+0x74>
    91ba:	05 90       	lpm	r0, Z+
    91bc:	07 94       	ror	r0
    91be:	28 f4       	brcc	.+10     	; 0x91ca <__ftoa_engine+0x9c>
    91c0:	e7 0e       	add	r14, r23
    91c2:	f8 1e       	adc	r15, r24
    91c4:	49 1f       	adc	r20, r25
    91c6:	56 1f       	adc	r21, r22
    91c8:	c1 1d       	adc	r28, r1
    91ca:	77 0f       	add	r23, r23
    91cc:	88 1f       	adc	r24, r24
    91ce:	99 1f       	adc	r25, r25
    91d0:	66 1f       	adc	r22, r22
    91d2:	06 94       	lsr	r0
    91d4:	a1 f7       	brne	.-24     	; 0x91be <__ftoa_engine+0x90>
    91d6:	05 90       	lpm	r0, Z+
    91d8:	07 94       	ror	r0
    91da:	28 f4       	brcc	.+10     	; 0x91e6 <__ftoa_engine+0xb8>
    91dc:	f8 0e       	add	r15, r24
    91de:	49 1f       	adc	r20, r25
    91e0:	56 1f       	adc	r21, r22
    91e2:	c7 1f       	adc	r28, r23
    91e4:	d1 1d       	adc	r29, r1
    91e6:	88 0f       	add	r24, r24
    91e8:	99 1f       	adc	r25, r25
    91ea:	66 1f       	adc	r22, r22
    91ec:	77 1f       	adc	r23, r23
    91ee:	06 94       	lsr	r0
    91f0:	a1 f7       	brne	.-24     	; 0x91da <__ftoa_engine+0xac>
    91f2:	05 90       	lpm	r0, Z+
    91f4:	07 94       	ror	r0
    91f6:	20 f4       	brcc	.+8      	; 0x9200 <__ftoa_engine+0xd2>
    91f8:	49 0f       	add	r20, r25
    91fa:	56 1f       	adc	r21, r22
    91fc:	c7 1f       	adc	r28, r23
    91fe:	d8 1f       	adc	r29, r24
    9200:	99 0f       	add	r25, r25
    9202:	66 1f       	adc	r22, r22
    9204:	77 1f       	adc	r23, r23
    9206:	88 1f       	adc	r24, r24
    9208:	06 94       	lsr	r0
    920a:	a9 f7       	brne	.-22     	; 0x91f6 <__ftoa_engine+0xc8>
    920c:	84 91       	lpm	r24, Z+
    920e:	10 95       	com	r17
    9210:	17 70       	andi	r17, 0x07	; 7
    9212:	41 f0       	breq	.+16     	; 0x9224 <__ftoa_engine+0xf6>
    9214:	d6 95       	lsr	r29
    9216:	c7 95       	ror	r28
    9218:	57 95       	ror	r21
    921a:	47 95       	ror	r20
    921c:	f7 94       	ror	r15
    921e:	e7 94       	ror	r14
    9220:	1a 95       	dec	r17
    9222:	c1 f7       	brne	.-16     	; 0x9214 <__ftoa_engine+0xe6>
    9224:	e4 e9       	ldi	r30, 0x94	; 148
    9226:	f0 e0       	ldi	r31, 0x00	; 0
    9228:	68 94       	set
    922a:	15 90       	lpm	r1, Z+
    922c:	15 91       	lpm	r17, Z+
    922e:	35 91       	lpm	r19, Z+
    9230:	65 91       	lpm	r22, Z+
    9232:	95 91       	lpm	r25, Z+
    9234:	05 90       	lpm	r0, Z+
    9236:	7f e2       	ldi	r23, 0x2F	; 47
    9238:	73 95       	inc	r23
    923a:	e1 18       	sub	r14, r1
    923c:	f1 0a       	sbc	r15, r17
    923e:	43 0b       	sbc	r20, r19
    9240:	56 0b       	sbc	r21, r22
    9242:	c9 0b       	sbc	r28, r25
    9244:	d0 09       	sbc	r29, r0
    9246:	c0 f7       	brcc	.-16     	; 0x9238 <__ftoa_engine+0x10a>
    9248:	e1 0c       	add	r14, r1
    924a:	f1 1e       	adc	r15, r17
    924c:	43 1f       	adc	r20, r19
    924e:	56 1f       	adc	r21, r22
    9250:	c9 1f       	adc	r28, r25
    9252:	d0 1d       	adc	r29, r0
    9254:	7e f4       	brtc	.+30     	; 0x9274 <__ftoa_engine+0x146>
    9256:	70 33       	cpi	r23, 0x30	; 48
    9258:	11 f4       	brne	.+4      	; 0x925e <__ftoa_engine+0x130>
    925a:	8a 95       	dec	r24
    925c:	e6 cf       	rjmp	.-52     	; 0x922a <__ftoa_engine+0xfc>
    925e:	e8 94       	clt
    9260:	01 50       	subi	r16, 0x01	; 1
    9262:	30 f0       	brcs	.+12     	; 0x9270 <__ftoa_engine+0x142>
    9264:	08 0f       	add	r16, r24
    9266:	0a f4       	brpl	.+2      	; 0x926a <__ftoa_engine+0x13c>
    9268:	00 27       	eor	r16, r16
    926a:	02 17       	cp	r16, r18
    926c:	08 f4       	brcc	.+2      	; 0x9270 <__ftoa_engine+0x142>
    926e:	20 2f       	mov	r18, r16
    9270:	23 95       	inc	r18
    9272:	02 2f       	mov	r16, r18
    9274:	7a 33       	cpi	r23, 0x3A	; 58
    9276:	28 f0       	brcs	.+10     	; 0x9282 <__ftoa_engine+0x154>
    9278:	79 e3       	ldi	r23, 0x39	; 57
    927a:	7d 93       	st	X+, r23
    927c:	2a 95       	dec	r18
    927e:	e9 f7       	brne	.-6      	; 0x927a <__ftoa_engine+0x14c>
    9280:	10 c0       	rjmp	.+32     	; 0x92a2 <__ftoa_engine+0x174>
    9282:	7d 93       	st	X+, r23
    9284:	2a 95       	dec	r18
    9286:	89 f6       	brne	.-94     	; 0x922a <__ftoa_engine+0xfc>
    9288:	06 94       	lsr	r0
    928a:	97 95       	ror	r25
    928c:	67 95       	ror	r22
    928e:	37 95       	ror	r19
    9290:	17 95       	ror	r17
    9292:	17 94       	ror	r1
    9294:	e1 18       	sub	r14, r1
    9296:	f1 0a       	sbc	r15, r17
    9298:	43 0b       	sbc	r20, r19
    929a:	56 0b       	sbc	r21, r22
    929c:	c9 0b       	sbc	r28, r25
    929e:	d0 09       	sbc	r29, r0
    92a0:	98 f0       	brcs	.+38     	; 0x92c8 <__ftoa_engine+0x19a>
    92a2:	23 95       	inc	r18
    92a4:	7e 91       	ld	r23, -X
    92a6:	73 95       	inc	r23
    92a8:	7a 33       	cpi	r23, 0x3A	; 58
    92aa:	08 f0       	brcs	.+2      	; 0x92ae <__ftoa_engine+0x180>
    92ac:	70 e3       	ldi	r23, 0x30	; 48
    92ae:	7c 93       	st	X, r23
    92b0:	20 13       	cpse	r18, r16
    92b2:	b8 f7       	brcc	.-18     	; 0x92a2 <__ftoa_engine+0x174>
    92b4:	7e 91       	ld	r23, -X
    92b6:	70 61       	ori	r23, 0x10	; 16
    92b8:	7d 93       	st	X+, r23
    92ba:	30 f0       	brcs	.+12     	; 0x92c8 <__ftoa_engine+0x19a>
    92bc:	83 95       	inc	r24
    92be:	71 e3       	ldi	r23, 0x31	; 49
    92c0:	7d 93       	st	X+, r23
    92c2:	70 e3       	ldi	r23, 0x30	; 48
    92c4:	2a 95       	dec	r18
    92c6:	e1 f7       	brne	.-8      	; 0x92c0 <__ftoa_engine+0x192>
    92c8:	11 24       	eor	r1, r1
    92ca:	ef 90       	pop	r14
    92cc:	ff 90       	pop	r15
    92ce:	0f 91       	pop	r16
    92d0:	1f 91       	pop	r17
    92d2:	cf 91       	pop	r28
    92d4:	df 91       	pop	r29
    92d6:	99 27       	eor	r25, r25
    92d8:	87 fd       	sbrc	r24, 7
    92da:	90 95       	com	r25
    92dc:	08 95       	ret

000092de <strnlen_P>:
    92de:	fc 01       	movw	r30, r24
    92e0:	05 90       	lpm	r0, Z+
    92e2:	61 50       	subi	r22, 0x01	; 1
    92e4:	70 40       	sbci	r23, 0x00	; 0
    92e6:	01 10       	cpse	r0, r1
    92e8:	d8 f7       	brcc	.-10     	; 0x92e0 <strnlen_P+0x2>
    92ea:	80 95       	com	r24
    92ec:	90 95       	com	r25
    92ee:	8e 0f       	add	r24, r30
    92f0:	9f 1f       	adc	r25, r31
    92f2:	08 95       	ret

000092f4 <strcmp>:
    92f4:	fb 01       	movw	r30, r22
    92f6:	dc 01       	movw	r26, r24
    92f8:	8d 91       	ld	r24, X+
    92fa:	01 90       	ld	r0, Z+
    92fc:	80 19       	sub	r24, r0
    92fe:	01 10       	cpse	r0, r1
    9300:	d9 f3       	breq	.-10     	; 0x92f8 <strcmp+0x4>
    9302:	99 0b       	sbc	r25, r25
    9304:	08 95       	ret

00009306 <strnlen>:
    9306:	fc 01       	movw	r30, r24
    9308:	61 50       	subi	r22, 0x01	; 1
    930a:	70 40       	sbci	r23, 0x00	; 0
    930c:	01 90       	ld	r0, Z+
    930e:	01 10       	cpse	r0, r1
    9310:	d8 f7       	brcc	.-10     	; 0x9308 <strnlen+0x2>
    9312:	80 95       	com	r24
    9314:	90 95       	com	r25
    9316:	8e 0f       	add	r24, r30
    9318:	9f 1f       	adc	r25, r31
    931a:	08 95       	ret

0000931c <fputc>:
    931c:	0f 93       	push	r16
    931e:	1f 93       	push	r17
    9320:	cf 93       	push	r28
    9322:	df 93       	push	r29
    9324:	8c 01       	movw	r16, r24
    9326:	eb 01       	movw	r28, r22
    9328:	8b 81       	ldd	r24, Y+3	; 0x03
    932a:	81 ff       	sbrs	r24, 1
    932c:	1b c0       	rjmp	.+54     	; 0x9364 <fputc+0x48>
    932e:	82 ff       	sbrs	r24, 2
    9330:	0d c0       	rjmp	.+26     	; 0x934c <fputc+0x30>
    9332:	2e 81       	ldd	r18, Y+6	; 0x06
    9334:	3f 81       	ldd	r19, Y+7	; 0x07
    9336:	8c 81       	ldd	r24, Y+4	; 0x04
    9338:	9d 81       	ldd	r25, Y+5	; 0x05
    933a:	28 17       	cp	r18, r24
    933c:	39 07       	cpc	r19, r25
    933e:	64 f4       	brge	.+24     	; 0x9358 <fputc+0x3c>
    9340:	e8 81       	ld	r30, Y
    9342:	f9 81       	ldd	r31, Y+1	; 0x01
    9344:	01 93       	st	Z+, r16
    9346:	f9 83       	std	Y+1, r31	; 0x01
    9348:	e8 83       	st	Y, r30
    934a:	06 c0       	rjmp	.+12     	; 0x9358 <fputc+0x3c>
    934c:	e8 85       	ldd	r30, Y+8	; 0x08
    934e:	f9 85       	ldd	r31, Y+9	; 0x09
    9350:	80 2f       	mov	r24, r16
    9352:	09 95       	icall
    9354:	89 2b       	or	r24, r25
    9356:	31 f4       	brne	.+12     	; 0x9364 <fputc+0x48>
    9358:	8e 81       	ldd	r24, Y+6	; 0x06
    935a:	9f 81       	ldd	r25, Y+7	; 0x07
    935c:	01 96       	adiw	r24, 0x01	; 1
    935e:	9f 83       	std	Y+7, r25	; 0x07
    9360:	8e 83       	std	Y+6, r24	; 0x06
    9362:	02 c0       	rjmp	.+4      	; 0x9368 <fputc+0x4c>
    9364:	0f ef       	ldi	r16, 0xFF	; 255
    9366:	1f ef       	ldi	r17, 0xFF	; 255
    9368:	c8 01       	movw	r24, r16
    936a:	df 91       	pop	r29
    936c:	cf 91       	pop	r28
    936e:	1f 91       	pop	r17
    9370:	0f 91       	pop	r16
    9372:	08 95       	ret

00009374 <sprintf>:
    9374:	0f 93       	push	r16
    9376:	1f 93       	push	r17
    9378:	df 93       	push	r29
    937a:	cf 93       	push	r28
    937c:	cd b7       	in	r28, 0x3d	; 61
    937e:	de b7       	in	r29, 0x3e	; 62
    9380:	2e 97       	sbiw	r28, 0x0e	; 14
    9382:	0f b6       	in	r0, 0x3f	; 63
    9384:	f8 94       	cli
    9386:	de bf       	out	0x3e, r29	; 62
    9388:	0f be       	out	0x3f, r0	; 63
    938a:	cd bf       	out	0x3d, r28	; 61
    938c:	0d 89       	ldd	r16, Y+21	; 0x15
    938e:	1e 89       	ldd	r17, Y+22	; 0x16
    9390:	86 e0       	ldi	r24, 0x06	; 6
    9392:	8c 83       	std	Y+4, r24	; 0x04
    9394:	1a 83       	std	Y+2, r17	; 0x02
    9396:	09 83       	std	Y+1, r16	; 0x01
    9398:	8f ef       	ldi	r24, 0xFF	; 255
    939a:	9f e7       	ldi	r25, 0x7F	; 127
    939c:	9e 83       	std	Y+6, r25	; 0x06
    939e:	8d 83       	std	Y+5, r24	; 0x05
    93a0:	9e 01       	movw	r18, r28
    93a2:	27 5e       	subi	r18, 0xE7	; 231
    93a4:	3f 4f       	sbci	r19, 0xFF	; 255
    93a6:	ce 01       	movw	r24, r28
    93a8:	01 96       	adiw	r24, 0x01	; 1
    93aa:	6f 89       	ldd	r22, Y+23	; 0x17
    93ac:	78 8d       	ldd	r23, Y+24	; 0x18
    93ae:	a9 01       	movw	r20, r18
    93b0:	0e 94 c1 44 	call	0x8982	; 0x8982 <vfprintf>
    93b4:	2f 81       	ldd	r18, Y+7	; 0x07
    93b6:	38 85       	ldd	r19, Y+8	; 0x08
    93b8:	02 0f       	add	r16, r18
    93ba:	13 1f       	adc	r17, r19
    93bc:	f8 01       	movw	r30, r16
    93be:	10 82       	st	Z, r1
    93c0:	2e 96       	adiw	r28, 0x0e	; 14
    93c2:	0f b6       	in	r0, 0x3f	; 63
    93c4:	f8 94       	cli
    93c6:	de bf       	out	0x3e, r29	; 62
    93c8:	0f be       	out	0x3f, r0	; 63
    93ca:	cd bf       	out	0x3d, r28	; 61
    93cc:	cf 91       	pop	r28
    93ce:	df 91       	pop	r29
    93d0:	1f 91       	pop	r17
    93d2:	0f 91       	pop	r16
    93d4:	08 95       	ret

000093d6 <__ultoa_invert>:
    93d6:	fa 01       	movw	r30, r20
    93d8:	aa 27       	eor	r26, r26
    93da:	28 30       	cpi	r18, 0x08	; 8
    93dc:	51 f1       	breq	.+84     	; 0x9432 <__ultoa_invert+0x5c>
    93de:	20 31       	cpi	r18, 0x10	; 16
    93e0:	81 f1       	breq	.+96     	; 0x9442 <__ultoa_invert+0x6c>
    93e2:	e8 94       	clt
    93e4:	6f 93       	push	r22
    93e6:	6e 7f       	andi	r22, 0xFE	; 254
    93e8:	6e 5f       	subi	r22, 0xFE	; 254
    93ea:	7f 4f       	sbci	r23, 0xFF	; 255
    93ec:	8f 4f       	sbci	r24, 0xFF	; 255
    93ee:	9f 4f       	sbci	r25, 0xFF	; 255
    93f0:	af 4f       	sbci	r26, 0xFF	; 255
    93f2:	b1 e0       	ldi	r27, 0x01	; 1
    93f4:	3e d0       	rcall	.+124    	; 0x9472 <__ultoa_invert+0x9c>
    93f6:	b4 e0       	ldi	r27, 0x04	; 4
    93f8:	3c d0       	rcall	.+120    	; 0x9472 <__ultoa_invert+0x9c>
    93fa:	67 0f       	add	r22, r23
    93fc:	78 1f       	adc	r23, r24
    93fe:	89 1f       	adc	r24, r25
    9400:	9a 1f       	adc	r25, r26
    9402:	a1 1d       	adc	r26, r1
    9404:	68 0f       	add	r22, r24
    9406:	79 1f       	adc	r23, r25
    9408:	8a 1f       	adc	r24, r26
    940a:	91 1d       	adc	r25, r1
    940c:	a1 1d       	adc	r26, r1
    940e:	6a 0f       	add	r22, r26
    9410:	71 1d       	adc	r23, r1
    9412:	81 1d       	adc	r24, r1
    9414:	91 1d       	adc	r25, r1
    9416:	a1 1d       	adc	r26, r1
    9418:	20 d0       	rcall	.+64     	; 0x945a <__ultoa_invert+0x84>
    941a:	09 f4       	brne	.+2      	; 0x941e <__ultoa_invert+0x48>
    941c:	68 94       	set
    941e:	3f 91       	pop	r19
    9420:	2a e0       	ldi	r18, 0x0A	; 10
    9422:	26 9f       	mul	r18, r22
    9424:	11 24       	eor	r1, r1
    9426:	30 19       	sub	r19, r0
    9428:	30 5d       	subi	r19, 0xD0	; 208
    942a:	31 93       	st	Z+, r19
    942c:	de f6       	brtc	.-74     	; 0x93e4 <__ultoa_invert+0xe>
    942e:	cf 01       	movw	r24, r30
    9430:	08 95       	ret
    9432:	46 2f       	mov	r20, r22
    9434:	47 70       	andi	r20, 0x07	; 7
    9436:	40 5d       	subi	r20, 0xD0	; 208
    9438:	41 93       	st	Z+, r20
    943a:	b3 e0       	ldi	r27, 0x03	; 3
    943c:	0f d0       	rcall	.+30     	; 0x945c <__ultoa_invert+0x86>
    943e:	c9 f7       	brne	.-14     	; 0x9432 <__ultoa_invert+0x5c>
    9440:	f6 cf       	rjmp	.-20     	; 0x942e <__ultoa_invert+0x58>
    9442:	46 2f       	mov	r20, r22
    9444:	4f 70       	andi	r20, 0x0F	; 15
    9446:	40 5d       	subi	r20, 0xD0	; 208
    9448:	4a 33       	cpi	r20, 0x3A	; 58
    944a:	18 f0       	brcs	.+6      	; 0x9452 <__ultoa_invert+0x7c>
    944c:	49 5d       	subi	r20, 0xD9	; 217
    944e:	31 fd       	sbrc	r19, 1
    9450:	40 52       	subi	r20, 0x20	; 32
    9452:	41 93       	st	Z+, r20
    9454:	02 d0       	rcall	.+4      	; 0x945a <__ultoa_invert+0x84>
    9456:	a9 f7       	brne	.-22     	; 0x9442 <__ultoa_invert+0x6c>
    9458:	ea cf       	rjmp	.-44     	; 0x942e <__ultoa_invert+0x58>
    945a:	b4 e0       	ldi	r27, 0x04	; 4
    945c:	a6 95       	lsr	r26
    945e:	97 95       	ror	r25
    9460:	87 95       	ror	r24
    9462:	77 95       	ror	r23
    9464:	67 95       	ror	r22
    9466:	ba 95       	dec	r27
    9468:	c9 f7       	brne	.-14     	; 0x945c <__ultoa_invert+0x86>
    946a:	00 97       	sbiw	r24, 0x00	; 0
    946c:	61 05       	cpc	r22, r1
    946e:	71 05       	cpc	r23, r1
    9470:	08 95       	ret
    9472:	9b 01       	movw	r18, r22
    9474:	ac 01       	movw	r20, r24
    9476:	0a 2e       	mov	r0, r26
    9478:	06 94       	lsr	r0
    947a:	57 95       	ror	r21
    947c:	47 95       	ror	r20
    947e:	37 95       	ror	r19
    9480:	27 95       	ror	r18
    9482:	ba 95       	dec	r27
    9484:	c9 f7       	brne	.-14     	; 0x9478 <__ultoa_invert+0xa2>
    9486:	62 0f       	add	r22, r18
    9488:	73 1f       	adc	r23, r19
    948a:	84 1f       	adc	r24, r20
    948c:	95 1f       	adc	r25, r21
    948e:	a0 1d       	adc	r26, r0
    9490:	08 95       	ret

00009492 <__eerd_dword_m128>:
    9492:	a6 e1       	ldi	r26, 0x16	; 22
    9494:	b0 e0       	ldi	r27, 0x00	; 0
    9496:	44 e0       	ldi	r20, 0x04	; 4
    9498:	50 e0       	ldi	r21, 0x00	; 0
    949a:	0c 94 f0 4b 	jmp	0x97e0	; 0x97e0 <__eerd_blraw_m128>

0000949e <__eewr_dword_m128>:
    949e:	24 2f       	mov	r18, r20
    94a0:	0e 94 ff 4b 	call	0x97fe	; 0x97fe <__eewr_r18_m128>
    94a4:	25 2f       	mov	r18, r21
    94a6:	0e 94 ff 4b 	call	0x97fe	; 0x97fe <__eewr_r18_m128>
    94aa:	0c 94 57 4a 	jmp	0x94ae	; 0x94ae <__eewr_word_m128>

000094ae <__eewr_word_m128>:
    94ae:	0e 94 fe 4b 	call	0x97fc	; 0x97fc <__eewr_byte_m128>
    94b2:	27 2f       	mov	r18, r23
    94b4:	0c 94 ff 4b 	jmp	0x97fe	; 0x97fe <__eewr_r18_m128>

000094b8 <strtod>:
    94b8:	8f 92       	push	r8
    94ba:	9f 92       	push	r9
    94bc:	af 92       	push	r10
    94be:	bf 92       	push	r11
    94c0:	cf 92       	push	r12
    94c2:	df 92       	push	r13
    94c4:	ef 92       	push	r14
    94c6:	ff 92       	push	r15
    94c8:	0f 93       	push	r16
    94ca:	1f 93       	push	r17
    94cc:	cf 93       	push	r28
    94ce:	df 93       	push	r29
    94d0:	ec 01       	movw	r28, r24
    94d2:	5b 01       	movw	r10, r22
    94d4:	61 15       	cp	r22, r1
    94d6:	71 05       	cpc	r23, r1
    94d8:	19 f0       	breq	.+6      	; 0x94e0 <strtod+0x28>
    94da:	fb 01       	movw	r30, r22
    94dc:	91 83       	std	Z+1, r25	; 0x01
    94de:	80 83       	st	Z, r24
    94e0:	f9 90       	ld	r15, Y+
    94e2:	8f 2d       	mov	r24, r15
    94e4:	90 e0       	ldi	r25, 0x00	; 0
    94e6:	0e 94 ca 4b 	call	0x9794	; 0x9794 <isspace>
    94ea:	89 2b       	or	r24, r25
    94ec:	c9 f7       	brne	.-14     	; 0x94e0 <strtod+0x28>
    94ee:	fd e2       	ldi	r31, 0x2D	; 45
    94f0:	ff 16       	cp	r15, r31
    94f2:	21 f4       	brne	.+8      	; 0x94fc <strtod+0x44>
    94f4:	f9 90       	ld	r15, Y+
    94f6:	ee 24       	eor	r14, r14
    94f8:	e3 94       	inc	r14
    94fa:	05 c0       	rjmp	.+10     	; 0x9506 <strtod+0x4e>
    94fc:	2b e2       	ldi	r18, 0x2B	; 43
    94fe:	f2 16       	cp	r15, r18
    9500:	09 f4       	brne	.+2      	; 0x9504 <strtod+0x4c>
    9502:	f9 90       	ld	r15, Y+
    9504:	ee 24       	eor	r14, r14
    9506:	8e 01       	movw	r16, r28
    9508:	01 50       	subi	r16, 0x01	; 1
    950a:	10 40       	sbci	r17, 0x00	; 0
    950c:	c8 01       	movw	r24, r16
    950e:	6e e8       	ldi	r22, 0x8E	; 142
    9510:	71 e0       	ldi	r23, 0x01	; 1
    9512:	43 e0       	ldi	r20, 0x03	; 3
    9514:	50 e0       	ldi	r21, 0x00	; 0
    9516:	0e 94 d2 4b 	call	0x97a4	; 0x97a4 <strncasecmp_P>
    951a:	89 2b       	or	r24, r25
    951c:	01 f5       	brne	.+64     	; 0x955e <strtod+0xa6>
    951e:	8e 01       	movw	r16, r28
    9520:	0e 5f       	subi	r16, 0xFE	; 254
    9522:	1f 4f       	sbci	r17, 0xFF	; 255
    9524:	c8 01       	movw	r24, r16
    9526:	61 e9       	ldi	r22, 0x91	; 145
    9528:	71 e0       	ldi	r23, 0x01	; 1
    952a:	45 e0       	ldi	r20, 0x05	; 5
    952c:	50 e0       	ldi	r21, 0x00	; 0
    952e:	0e 94 d2 4b 	call	0x97a4	; 0x97a4 <strncasecmp_P>
    9532:	89 2b       	or	r24, r25
    9534:	19 f4       	brne	.+6      	; 0x953c <strtod+0x84>
    9536:	8e 01       	movw	r16, r28
    9538:	09 5f       	subi	r16, 0xF9	; 249
    953a:	1f 4f       	sbci	r17, 0xFF	; 255
    953c:	a1 14       	cp	r10, r1
    953e:	b1 04       	cpc	r11, r1
    9540:	19 f0       	breq	.+6      	; 0x9548 <strtod+0x90>
    9542:	f5 01       	movw	r30, r10
    9544:	11 83       	std	Z+1, r17	; 0x01
    9546:	00 83       	st	Z, r16
    9548:	e0 fc       	sbrc	r14, 0
    954a:	04 c0       	rjmp	.+8      	; 0x9554 <strtod+0x9c>
    954c:	70 e0       	ldi	r23, 0x00	; 0
    954e:	90 e0       	ldi	r25, 0x00	; 0
    9550:	80 e8       	ldi	r24, 0x80	; 128
    9552:	14 c0       	rjmp	.+40     	; 0x957c <strtod+0xc4>
    9554:	70 e0       	ldi	r23, 0x00	; 0
    9556:	90 e0       	ldi	r25, 0x00	; 0
    9558:	80 e8       	ldi	r24, 0x80	; 128
    955a:	6f ef       	ldi	r22, 0xFF	; 255
    955c:	08 c1       	rjmp	.+528    	; 0x976e <strtod+0x2b6>
    955e:	c8 01       	movw	r24, r16
    9560:	66 e9       	ldi	r22, 0x96	; 150
    9562:	71 e0       	ldi	r23, 0x01	; 1
    9564:	43 e0       	ldi	r20, 0x03	; 3
    9566:	50 e0       	ldi	r21, 0x00	; 0
    9568:	0e 94 d2 4b 	call	0x97a4	; 0x97a4 <strncasecmp_P>
    956c:	89 2b       	or	r24, r25
    956e:	69 f4       	brne	.+26     	; 0x958a <strtod+0xd2>
    9570:	a1 14       	cp	r10, r1
    9572:	b1 04       	cpc	r11, r1
    9574:	29 f4       	brne	.+10     	; 0x9580 <strtod+0xc8>
    9576:	70 e0       	ldi	r23, 0x00	; 0
    9578:	90 e0       	ldi	r25, 0x00	; 0
    957a:	80 ec       	ldi	r24, 0xC0	; 192
    957c:	6f e7       	ldi	r22, 0x7F	; 127
    957e:	f7 c0       	rjmp	.+494    	; 0x976e <strtod+0x2b6>
    9580:	22 96       	adiw	r28, 0x02	; 2
    9582:	f5 01       	movw	r30, r10
    9584:	d1 83       	std	Z+1, r29	; 0x01
    9586:	c0 83       	st	Z, r28
    9588:	f6 cf       	rjmp	.-20     	; 0x9576 <strtod+0xbe>
    958a:	88 24       	eor	r8, r8
    958c:	99 24       	eor	r9, r9
    958e:	40 e0       	ldi	r20, 0x00	; 0
    9590:	50 e0       	ldi	r21, 0x00	; 0
    9592:	60 e0       	ldi	r22, 0x00	; 0
    9594:	70 e0       	ldi	r23, 0x00	; 0
    9596:	ef 2d       	mov	r30, r15
    9598:	e0 53       	subi	r30, 0x30	; 48
    959a:	ea 30       	cpi	r30, 0x0A	; 10
    959c:	a0 f5       	brcc	.+104    	; 0x9606 <strtod+0x14e>
    959e:	f2 e0       	ldi	r31, 0x02	; 2
    95a0:	ef 2a       	or	r14, r31
    95a2:	8e 2d       	mov	r24, r14
    95a4:	90 e0       	ldi	r25, 0x00	; 0
    95a6:	9c 01       	movw	r18, r24
    95a8:	28 70       	andi	r18, 0x08	; 8
    95aa:	30 70       	andi	r19, 0x00	; 0
    95ac:	e2 fe       	sbrs	r14, 2
    95ae:	06 c0       	rjmp	.+12     	; 0x95bc <strtod+0x104>
    95b0:	23 2b       	or	r18, r19
    95b2:	79 f5       	brne	.+94     	; 0x9612 <strtod+0x15a>
    95b4:	08 94       	sec
    95b6:	81 1c       	adc	r8, r1
    95b8:	91 1c       	adc	r9, r1
    95ba:	2b c0       	rjmp	.+86     	; 0x9612 <strtod+0x15a>
    95bc:	23 2b       	or	r18, r19
    95be:	19 f0       	breq	.+6      	; 0x95c6 <strtod+0x10e>
    95c0:	08 94       	sec
    95c2:	81 08       	sbc	r8, r1
    95c4:	91 08       	sbc	r9, r1
    95c6:	db 01       	movw	r26, r22
    95c8:	ca 01       	movw	r24, r20
    95ca:	12 e0       	ldi	r17, 0x02	; 2
    95cc:	88 0f       	add	r24, r24
    95ce:	99 1f       	adc	r25, r25
    95d0:	aa 1f       	adc	r26, r26
    95d2:	bb 1f       	adc	r27, r27
    95d4:	1a 95       	dec	r17
    95d6:	d1 f7       	brne	.-12     	; 0x95cc <strtod+0x114>
    95d8:	48 0f       	add	r20, r24
    95da:	59 1f       	adc	r21, r25
    95dc:	6a 1f       	adc	r22, r26
    95de:	7b 1f       	adc	r23, r27
    95e0:	44 0f       	add	r20, r20
    95e2:	55 1f       	adc	r21, r21
    95e4:	66 1f       	adc	r22, r22
    95e6:	77 1f       	adc	r23, r23
    95e8:	4e 0f       	add	r20, r30
    95ea:	51 1d       	adc	r21, r1
    95ec:	61 1d       	adc	r22, r1
    95ee:	71 1d       	adc	r23, r1
    95f0:	48 39       	cpi	r20, 0x98	; 152
    95f2:	29 e9       	ldi	r18, 0x99	; 153
    95f4:	52 07       	cpc	r21, r18
    95f6:	29 e9       	ldi	r18, 0x99	; 153
    95f8:	62 07       	cpc	r22, r18
    95fa:	29 e1       	ldi	r18, 0x19	; 25
    95fc:	72 07       	cpc	r23, r18
    95fe:	48 f0       	brcs	.+18     	; 0x9612 <strtod+0x15a>
    9600:	84 e0       	ldi	r24, 0x04	; 4
    9602:	e8 2a       	or	r14, r24
    9604:	06 c0       	rjmp	.+12     	; 0x9612 <strtod+0x15a>
    9606:	ee 3f       	cpi	r30, 0xFE	; 254
    9608:	31 f4       	brne	.+12     	; 0x9616 <strtod+0x15e>
    960a:	e3 fc       	sbrc	r14, 3
    960c:	39 c0       	rjmp	.+114    	; 0x9680 <strtod+0x1c8>
    960e:	98 e0       	ldi	r25, 0x08	; 8
    9610:	e9 2a       	or	r14, r25
    9612:	f9 90       	ld	r15, Y+
    9614:	c0 cf       	rjmp	.-128    	; 0x9596 <strtod+0xde>
    9616:	e5 33       	cpi	r30, 0x35	; 53
    9618:	11 f0       	breq	.+4      	; 0x961e <strtod+0x166>
    961a:	e5 31       	cpi	r30, 0x15	; 21
    961c:	89 f5       	brne	.+98     	; 0x9680 <strtod+0x1c8>
    961e:	29 91       	ld	r18, Y+
    9620:	2d 32       	cpi	r18, 0x2D	; 45
    9622:	19 f4       	brne	.+6      	; 0x962a <strtod+0x172>
    9624:	e0 e1       	ldi	r30, 0x10	; 16
    9626:	ee 2a       	or	r14, r30
    9628:	05 c0       	rjmp	.+10     	; 0x9634 <strtod+0x17c>
    962a:	2b 32       	cpi	r18, 0x2B	; 43
    962c:	19 f0       	breq	.+6      	; 0x9634 <strtod+0x17c>
    962e:	81 e0       	ldi	r24, 0x01	; 1
    9630:	90 e0       	ldi	r25, 0x00	; 0
    9632:	03 c0       	rjmp	.+6      	; 0x963a <strtod+0x182>
    9634:	29 91       	ld	r18, Y+
    9636:	82 e0       	ldi	r24, 0x02	; 2
    9638:	90 e0       	ldi	r25, 0x00	; 0
    963a:	e2 2f       	mov	r30, r18
    963c:	e0 53       	subi	r30, 0x30	; 48
    963e:	ea 30       	cpi	r30, 0x0A	; 10
    9640:	18 f0       	brcs	.+6      	; 0x9648 <strtod+0x190>
    9642:	c8 1b       	sub	r28, r24
    9644:	d9 0b       	sbc	r29, r25
    9646:	1c c0       	rjmp	.+56     	; 0x9680 <strtod+0x1c8>
    9648:	20 e0       	ldi	r18, 0x00	; 0
    964a:	30 e0       	ldi	r19, 0x00	; 0
    964c:	fc e0       	ldi	r31, 0x0C	; 12
    964e:	20 38       	cpi	r18, 0x80	; 128
    9650:	3f 07       	cpc	r19, r31
    9652:	5c f4       	brge	.+22     	; 0x966a <strtod+0x1b2>
    9654:	c9 01       	movw	r24, r18
    9656:	88 0f       	add	r24, r24
    9658:	99 1f       	adc	r25, r25
    965a:	88 0f       	add	r24, r24
    965c:	99 1f       	adc	r25, r25
    965e:	28 0f       	add	r18, r24
    9660:	39 1f       	adc	r19, r25
    9662:	22 0f       	add	r18, r18
    9664:	33 1f       	adc	r19, r19
    9666:	2e 0f       	add	r18, r30
    9668:	31 1d       	adc	r19, r1
    966a:	e9 91       	ld	r30, Y+
    966c:	e0 53       	subi	r30, 0x30	; 48
    966e:	ea 30       	cpi	r30, 0x0A	; 10
    9670:	68 f3       	brcs	.-38     	; 0x964c <strtod+0x194>
    9672:	e4 fe       	sbrs	r14, 4
    9674:	03 c0       	rjmp	.+6      	; 0x967c <strtod+0x1c4>
    9676:	30 95       	com	r19
    9678:	21 95       	neg	r18
    967a:	3f 4f       	sbci	r19, 0xFF	; 255
    967c:	82 0e       	add	r8, r18
    967e:	93 1e       	adc	r9, r19
    9680:	ce 2c       	mov	r12, r14
    9682:	dd 24       	eor	r13, r13
    9684:	e1 fe       	sbrs	r14, 1
    9686:	07 c0       	rjmp	.+14     	; 0x9696 <strtod+0x1de>
    9688:	a1 14       	cp	r10, r1
    968a:	b1 04       	cpc	r11, r1
    968c:	21 f0       	breq	.+8      	; 0x9696 <strtod+0x1de>
    968e:	21 97       	sbiw	r28, 0x01	; 1
    9690:	f5 01       	movw	r30, r10
    9692:	d1 83       	std	Z+1, r29	; 0x01
    9694:	c0 83       	st	Z, r28
    9696:	cb 01       	movw	r24, r22
    9698:	ba 01       	movw	r22, r20
    969a:	0e 94 a8 43 	call	0x8750	; 0x8750 <__floatunsisf>
    969e:	7b 01       	movw	r14, r22
    96a0:	8c 01       	movw	r16, r24
    96a2:	f3 e0       	ldi	r31, 0x03	; 3
    96a4:	cf 22       	and	r12, r31
    96a6:	dd 24       	eor	r13, r13
    96a8:	23 e0       	ldi	r18, 0x03	; 3
    96aa:	c2 16       	cp	r12, r18
    96ac:	d1 04       	cpc	r13, r1
    96ae:	21 f4       	brne	.+8      	; 0x96b8 <strtod+0x200>
    96b0:	17 fb       	bst	r17, 7
    96b2:	10 95       	com	r17
    96b4:	17 f9       	bld	r17, 7
    96b6:	10 95       	com	r17
    96b8:	57 01       	movw	r10, r14
    96ba:	68 01       	movw	r12, r16
    96bc:	c8 01       	movw	r24, r16
    96be:	b7 01       	movw	r22, r14
    96c0:	20 e0       	ldi	r18, 0x00	; 0
    96c2:	30 e0       	ldi	r19, 0x00	; 0
    96c4:	40 e0       	ldi	r20, 0x00	; 0
    96c6:	50 e0       	ldi	r21, 0x00	; 0
    96c8:	0e 94 ea 4b 	call	0x97d4	; 0x97d4 <__cmpsf2>
    96cc:	88 23       	and	r24, r24
    96ce:	09 f4       	brne	.+2      	; 0x96d2 <strtod+0x21a>
    96d0:	4a c0       	rjmp	.+148    	; 0x9766 <strtod+0x2ae>
    96d2:	97 fe       	sbrs	r9, 7
    96d4:	0d c0       	rjmp	.+26     	; 0x96f0 <strtod+0x238>
    96d6:	2d ea       	ldi	r18, 0xAD	; 173
    96d8:	e2 2e       	mov	r14, r18
    96da:	21 e0       	ldi	r18, 0x01	; 1
    96dc:	f2 2e       	mov	r15, r18
    96de:	90 94       	com	r9
    96e0:	81 94       	neg	r8
    96e2:	91 08       	sbc	r9, r1
    96e4:	93 94       	inc	r9
    96e6:	c0 e2       	ldi	r28, 0x20	; 32
    96e8:	d0 e0       	ldi	r29, 0x00	; 0
    96ea:	00 e0       	ldi	r16, 0x00	; 0
    96ec:	10 e0       	ldi	r17, 0x00	; 0
    96ee:	12 c0       	rjmp	.+36     	; 0x9714 <strtod+0x25c>
    96f0:	95 ec       	ldi	r25, 0xC5	; 197
    96f2:	e9 2e       	mov	r14, r25
    96f4:	91 e0       	ldi	r25, 0x01	; 1
    96f6:	f9 2e       	mov	r15, r25
    96f8:	f6 cf       	rjmp	.-20     	; 0x96e6 <strtod+0x22e>
    96fa:	f7 01       	movw	r30, r14
    96fc:	25 91       	lpm	r18, Z+
    96fe:	35 91       	lpm	r19, Z+
    9700:	45 91       	lpm	r20, Z+
    9702:	54 91       	lpm	r21, Z+
    9704:	c6 01       	movw	r24, r12
    9706:	b5 01       	movw	r22, r10
    9708:	0e 94 3a 44 	call	0x8874	; 0x8874 <__mulsf3>
    970c:	5b 01       	movw	r10, r22
    970e:	6c 01       	movw	r12, r24
    9710:	8c 1a       	sub	r8, r28
    9712:	9d 0a       	sbc	r9, r29
    9714:	8c 16       	cp	r8, r28
    9716:	9d 06       	cpc	r9, r29
    9718:	84 f7       	brge	.-32     	; 0x96fa <strtod+0x242>
    971a:	d5 95       	asr	r29
    971c:	c7 95       	ror	r28
    971e:	0f 5f       	subi	r16, 0xFF	; 255
    9720:	1f 4f       	sbci	r17, 0xFF	; 255
    9722:	06 30       	cpi	r16, 0x06	; 6
    9724:	11 05       	cpc	r17, r1
    9726:	29 f0       	breq	.+10     	; 0x9732 <strtod+0x27a>
    9728:	8c ef       	ldi	r24, 0xFC	; 252
    972a:	9f ef       	ldi	r25, 0xFF	; 255
    972c:	e8 0e       	add	r14, r24
    972e:	f9 1e       	adc	r15, r25
    9730:	f1 cf       	rjmp	.-30     	; 0x9714 <strtod+0x25c>
    9732:	c5 01       	movw	r24, r10
    9734:	d6 01       	movw	r26, r12
    9736:	7c 01       	movw	r14, r24
    9738:	8d 01       	movw	r16, r26
    973a:	8c 2d       	mov	r24, r12
    973c:	88 0f       	add	r24, r24
    973e:	8d 2d       	mov	r24, r13
    9740:	88 1f       	adc	r24, r24
    9742:	8f 3f       	cpi	r24, 0xFF	; 255
    9744:	51 f0       	breq	.+20     	; 0x975a <strtod+0x2a2>
    9746:	c6 01       	movw	r24, r12
    9748:	b5 01       	movw	r22, r10
    974a:	20 e0       	ldi	r18, 0x00	; 0
    974c:	30 e0       	ldi	r19, 0x00	; 0
    974e:	40 e0       	ldi	r20, 0x00	; 0
    9750:	50 e0       	ldi	r21, 0x00	; 0
    9752:	0e 94 ea 4b 	call	0x97d4	; 0x97d4 <__cmpsf2>
    9756:	88 23       	and	r24, r24
    9758:	31 f4       	brne	.+12     	; 0x9766 <strtod+0x2ae>
    975a:	82 e2       	ldi	r24, 0x22	; 34
    975c:	90 e0       	ldi	r25, 0x00	; 0
    975e:	90 93 a7 03 	sts	0x03A7, r25
    9762:	80 93 a6 03 	sts	0x03A6, r24
    9766:	7e 2d       	mov	r23, r14
    9768:	9f 2d       	mov	r25, r15
    976a:	80 2f       	mov	r24, r16
    976c:	61 2f       	mov	r22, r17
    976e:	27 2f       	mov	r18, r23
    9770:	39 2f       	mov	r19, r25
    9772:	48 2f       	mov	r20, r24
    9774:	56 2f       	mov	r21, r22
    9776:	b9 01       	movw	r22, r18
    9778:	ca 01       	movw	r24, r20
    977a:	df 91       	pop	r29
    977c:	cf 91       	pop	r28
    977e:	1f 91       	pop	r17
    9780:	0f 91       	pop	r16
    9782:	ff 90       	pop	r15
    9784:	ef 90       	pop	r14
    9786:	df 90       	pop	r13
    9788:	cf 90       	pop	r12
    978a:	bf 90       	pop	r11
    978c:	af 90       	pop	r10
    978e:	9f 90       	pop	r9
    9790:	8f 90       	pop	r8
    9792:	08 95       	ret

00009794 <isspace>:
    9794:	91 11       	cpse	r25, r1
    9796:	3f c0       	rjmp	.+126    	; 0x9816 <__ctype_isfalse>
    9798:	80 32       	cpi	r24, 0x20	; 32
    979a:	19 f0       	breq	.+6      	; 0x97a2 <isspace+0xe>
    979c:	89 50       	subi	r24, 0x09	; 9
    979e:	85 50       	subi	r24, 0x05	; 5
    97a0:	d0 f7       	brcc	.-12     	; 0x9796 <isspace+0x2>
    97a2:	08 95       	ret

000097a4 <strncasecmp_P>:
    97a4:	fb 01       	movw	r30, r22
    97a6:	dc 01       	movw	r26, r24
    97a8:	41 50       	subi	r20, 0x01	; 1
    97aa:	50 40       	sbci	r21, 0x00	; 0
    97ac:	88 f0       	brcs	.+34     	; 0x97d0 <strncasecmp_P+0x2c>
    97ae:	8d 91       	ld	r24, X+
    97b0:	81 34       	cpi	r24, 0x41	; 65
    97b2:	1c f0       	brlt	.+6      	; 0x97ba <strncasecmp_P+0x16>
    97b4:	8b 35       	cpi	r24, 0x5B	; 91
    97b6:	0c f4       	brge	.+2      	; 0x97ba <strncasecmp_P+0x16>
    97b8:	80 5e       	subi	r24, 0xE0	; 224
    97ba:	65 91       	lpm	r22, Z+
    97bc:	61 34       	cpi	r22, 0x41	; 65
    97be:	1c f0       	brlt	.+6      	; 0x97c6 <strncasecmp_P+0x22>
    97c0:	6b 35       	cpi	r22, 0x5B	; 91
    97c2:	0c f4       	brge	.+2      	; 0x97c6 <strncasecmp_P+0x22>
    97c4:	60 5e       	subi	r22, 0xE0	; 224
    97c6:	86 1b       	sub	r24, r22
    97c8:	61 11       	cpse	r22, r1
    97ca:	71 f3       	breq	.-36     	; 0x97a8 <strncasecmp_P+0x4>
    97cc:	99 0b       	sbc	r25, r25
    97ce:	08 95       	ret
    97d0:	88 1b       	sub	r24, r24
    97d2:	fc cf       	rjmp	.-8      	; 0x97cc <strncasecmp_P+0x28>

000097d4 <__cmpsf2>:
    97d4:	b2 d8       	rcall	.-3740   	; 0x893a <__fp_cmp>
    97d6:	08 f4       	brcc	.+2      	; 0x97da <__cmpsf2+0x6>
    97d8:	81 e0       	ldi	r24, 0x01	; 1
    97da:	08 95       	ret

000097dc <__eerd_block_m128>:
    97dc:	dc 01       	movw	r26, r24
    97de:	cb 01       	movw	r24, r22

000097e0 <__eerd_blraw_m128>:
    97e0:	fc 01       	movw	r30, r24
    97e2:	e1 99       	sbic	0x1c, 1	; 28
    97e4:	fe cf       	rjmp	.-4      	; 0x97e2 <__eerd_blraw_m128+0x2>
    97e6:	06 c0       	rjmp	.+12     	; 0x97f4 <__eerd_blraw_m128+0x14>
    97e8:	ff bb       	out	0x1f, r31	; 31
    97ea:	ee bb       	out	0x1e, r30	; 30
    97ec:	e0 9a       	sbi	0x1c, 0	; 28
    97ee:	31 96       	adiw	r30, 0x01	; 1
    97f0:	0d b2       	in	r0, 0x1d	; 29
    97f2:	0d 92       	st	X+, r0
    97f4:	41 50       	subi	r20, 0x01	; 1
    97f6:	50 40       	sbci	r21, 0x00	; 0
    97f8:	b8 f7       	brcc	.-18     	; 0x97e8 <__eerd_blraw_m128+0x8>
    97fa:	08 95       	ret

000097fc <__eewr_byte_m128>:
    97fc:	26 2f       	mov	r18, r22

000097fe <__eewr_r18_m128>:
    97fe:	e1 99       	sbic	0x1c, 1	; 28
    9800:	fe cf       	rjmp	.-4      	; 0x97fe <__eewr_r18_m128>
    9802:	9f bb       	out	0x1f, r25	; 31
    9804:	8e bb       	out	0x1e, r24	; 30
    9806:	2d bb       	out	0x1d, r18	; 29
    9808:	0f b6       	in	r0, 0x3f	; 63
    980a:	f8 94       	cli
    980c:	e2 9a       	sbi	0x1c, 2	; 28
    980e:	e1 9a       	sbi	0x1c, 1	; 28
    9810:	0f be       	out	0x3f, r0	; 63
    9812:	01 96       	adiw	r24, 0x01	; 1
    9814:	08 95       	ret

00009816 <__ctype_isfalse>:
    9816:	99 27       	eor	r25, r25
    9818:	88 27       	eor	r24, r24

0000981a <__ctype_istrue>:
    981a:	08 95       	ret

0000981c <_exit>:
    981c:	f8 94       	cli

0000981e <__stop_program>:
    981e:	ff cf       	rjmp	.-2      	; 0x981e <__stop_program>
